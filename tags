!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
"_ddgg	bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal "_ddgg$/;"	m
+	bundle/vim-expand-region/plugin/expand_region.vim	/^  nmap + <Plug>(expand_region_expand)$/;"	m
+	bundle/vim-expand-region/plugin/expand_region.vim	/^  vmap + <Plug>(expand_region_expand)$/;"	m
<	bundle/HTML-AutoCloseTag/ftplugin/html_autoclosetag.vim	/^ino <buffer> <silent> < <><left>$/;"	m
<2-LeftMouse>	conf/mappings.vim	/^map <2-LeftMouse> *$/;"	m
<2-LeftMouse>	conf/mappings.vim	/^map! <2-LeftMouse> <c-o>*$/;"	m
<BS>	conf/neocomplcache.vim	/^inoremap <expr><BS> neocomplcache#smart_close_popup()."\\<C-h>"$/;"	m
<C-G>S	bundle/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	bundle/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-LeftMouse>	conf/mappings.vim	/^map <C-LeftMouse> <C-]>$/;"	m
<C-LeftMouse>	conf/mappings.vim	/^map! <C-LeftMouse> <Esc><C-]>$/;"	m
<C-S>	bundle/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-W><C-F>	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-F> :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>\\<Lt>C-F>",'split')<CR>$/;"	m
<C-W><C-]>	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-]>  :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>]	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>]      :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>f	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>f     :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>f",'split')<CR>$/;"	m
<C-W>g<C-]>	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g<C-]> :<C-U>exe        "stjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g]	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g]     :<C-U>exe      "stselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>gf	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>gf    :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>gf",'tabedit')<CR>$/;"	m
<C-W>g}	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g}     :<C-U>exe        "ptjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>}	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>}      :<C-U>exe          "ptag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-]>	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-]>       :<C-U>exe  v:count1."tag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-g>	conf/neocomplcache.vim	/^inoremap <expr><C-g> neocomplcache#undo_completion()$/;"	m
<C-h>	conf/mappings.vim	/^nmap <C-h> <C-w>h$/;"	m
<C-j>	conf/mappings.vim	/^nmap <C-j> <C-w>j$/;"	m
<C-k>	conf/mappings.vim	/^nmap <C-k> <C-w>k$/;"	m
<C-k>	conf/neocomplcache.vim	/^imap <C-k> <Plug>(neosnippet_expand_or_jump)$/;"	m
<C-l>	conf/mappings.vim	/^nmap <C-l> <C-w>l$/;"	m
<C-l>	conf/neocomplcache.vim	/^inoremap <expr><C-l> neocomplcache#complete_common_string()$/;"	m
<C-y>	conf/neocomplcache.vim	/^inoremap <expr><C-y> neocomplcache#close_popup()$/;"	m
<CR>	conf/neocomplcache.vim	/^inoremap <expr><CR> neocomplcache#complete_common_string()$/;"	m
<CR>	conf/neocomplcache.vim	/^inoremap <expr><CR> pumvisible() ? neocomplcache#close_popup() : "\\<CR>"$/;"	m
<DOWN>	conf/mappings.vim	/^inoremap <DOWN> <NOP>$/;"	m
<DOWN>	conf/mappings.vim	/^map <DOWN> <NOP>$/;"	m
<Enter>	conf/mappings.vim	/^nnoremap <Enter> za$/;"	m
<Enter>	conf/mappings.vim	/^vnoremap <Enter> za$/;"	m
<F3>	conf/mappings.vim	/^map <F3> :! ctags -R --exclude=.git --exclude=log * <CR>$/;"	m
<F3>	conf/mappings.vim	/^map! <F3> <Esc>:! ctags -R --exclude=.git --exclude=log * <CR>$/;"	m
<F6>	conf/mappings.vim	/^imap <silent> <F6> <esc>:NERDTreeToggle<CR>$/;"	m
<F6>	conf/mappings.vim	/^nmap <silent> <F6> :NERDTreeToggle<CR>$/;"	m
<LEFT>	conf/mappings.vim	/^inoremap <LEFT> <NOP>$/;"	m
<LEFT>	conf/mappings.vim	/^map <LEFT> <NOP>$/;"	m
<Leader>/	conf/mappings.vim	/^noremap <silent><Leader>\/ :nohls<CR>$/;"	m
<Leader>q	conf/mappings.vim	/^nnoremap <Leader>q :q<CR>$/;"	m
<Leader>rwp	bundle/Align/plugin/cecutil.vim	/^ map <unique> <Leader>rwp <Plug>RestoreWinPosn$/;"	m
<Leader>swp	bundle/Align/plugin/cecutil.vim	/^ map <unique> <Leader>swp <Plug>SaveWinPosn$/;"	m
<Leader>w	conf/mappings.vim	/^noremap <Leader>w :w!<CR>:echo "Saving:" expand('%:p')<CR>$/;"	m
<Plug>(expand_region_expand)	bundle/vim-expand-region/plugin/expand_region.vim	/^nnoremap <silent> <Plug>(expand_region_expand)$/;"	m
<Plug>(neosnippet_expand)	bundle/neosnippet/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_expand)$/;"	m
<Plug>(neosnippet_expand_or_jump)	bundle/neosnippet/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_expand_or_jump)$/;"	m
<Plug>(neosnippet_jump)	bundle/neosnippet/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_jump)$/;"	m
<Plug>(neosnippet_jump_or_expand)	bundle/neosnippet/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_jump_or_expand)$/;"	m
<Plug>(neosnippet_start_unite_snippet)	bundle/neosnippet/plugin/neosnippet.vim	/^inoremap <expr><silent> <Plug>(neosnippet_start_unite_snippet)$/;"	m
<Plug>AM_Htd	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_Htd <SID>WS:'y,'zs%<[tT][rR]><[tT][dD][^>]\\{-}>\\<Bar><\/[tT][dD]><[tT][dD][^>]\\{-}>\\<Bar><\/[tT][dD]><\/[tT][rR]>%@&@%g<CR>'yjma'zk:AlignCtrl m=Ilp1P0 @<CR>:'a,.Align<CR>:'y,'zs\/ @\/@\/<CR>:'y,'zs\/@ <[tT][rR]>\/<[tT][rR]>\/ge<CR>:'y,'zs\/@\/\/ge<CR><SID>WE$/;"	m
<Plug>AM_T|	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_T| <SID>WS:AlignCtrl mIp0P0=r <Bar><CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_T#	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_T#   <SID>WS:AlignCtrl mIp0P0=r #<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_T,	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_T,   <SID>WS:AlignCtrl mIp0P1=r ,<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_T:	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_T:   <SID>WS:AlignCtrl mIp1P1=r :<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_T;	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_T;   <SID>WS:AlignCtrl mIp0P0=r ;<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_T<	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_T<   <SID>WS:AlignCtrl mIp0P0=r <<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_T=	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_T=   <SID>WS:'a,'z-1s\/\\s\\+\\([*\/+\\-%<Bar>&\\~^]\\==\\)\/ \\1\/e<CR>:'a,'z-1s@ \\+\\([*\/+\\-%<Bar>&\\~^]\\)=@\\1=@ge<CR>:'a,'z-1s\/; *\/;@\/e<CR>:'a,'z-1s\/==\/\\="\\<Char-0x0f>\\<Char-0x0f>"\/ge<CR>:'a,'z-1s\/!=\/\\x="!\\<Char-0x0f>"\/ge<CR>:AlignCtrl mIp1P1=r = @<CR>:AlignCtrl g =<CR>:'a,'z-1Align<CR>:'a,'z-1s\/; *@\/;\/e<CR>:'a,'z-1s\/; *$\/;\/e<CR>:'a,'z-1s@\\([*\/+\\-%<Bar>&\\~^]\\)\\( \\+\\)=@\\2\\1=@ge<CR>:'a,'z-1s\/\\( \\+\\);\/;\\1\/ge<CR>:'a,'z-1s\/\\xff\/=\/ge<CR><SID>WE:exe "norm <Plug>acom"$/;"	m
<Plug>AM_T?	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_T?   <SID>WS:AlignCtrl mIp0P0=r ?<CR>:'a,.Align<CR>:'y,'zs\/ \\( *\\);\/;\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_T@	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_T@   <SID>WS:AlignCtrl mIp0P0=r @<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_TW@	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_TW@  <SID>WS:AlignCtrl mWp0P0=r @<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_Tab	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_Tab  <SID>WS:'a,.s\/^\\(\\t*\\)\\(.*\\)\/\\=submatch(1).escape(substitute(submatch(2),'\\t','@','g'),'\\')\/<CR>:AlignCtrl mI=r @<CR>:'a,.Align<CR>:'y+1,'z-1s\/@\/ \/g<CR><SID>WE$/;"	m
<Plug>AM_Ts,	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_Ts,  <SID>WS:AlignCtrl mIp0P1=r ,<CR>:'a,.Align<CR>:'a,.s\/\\(\\s*\\),\/,\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_Tsp	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_Tsp  <SID>WS:'a,.s\/^\\(\\s*\\)\\(.*\\)\/\\=submatch(1).escape(substitute(submatch(2),'\\s\\+','@','g'),'\\')\/<CR>:AlignCtrl mI=r @<CR>:'a,.Align<CR>:'y+1,'z-1s\/@\/ \/g<CR><SID>WE$/;"	m
<Plug>AM_T~	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_T~   <SID>WS:AlignCtrl mIp0P0=r ~<CR>:'a,.Align<CR>:'y,'zs\/ \\( *\\);\/;\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_a(	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_a(       <SID>WS:AlignCtrl mIp0P1=l<CR>:'a,.Align [(,]<CR>:sil 'y+1,'z-1s\/\\(\\s\\+\\),\/,\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_a,		<SID>WS:'y,'zs/\(\S\)\s\+/\1	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_a,		<SID>WS:'y,'zs\/\\(\\S\\)\\s\\+\/\\1 \/ge<CR>'yjma'zk:call AlignMaps#CharJoiner(",")<cr>:silent 'y,'zg\/,\/call AlignMaps#FixMultiDec()<CR>'z:exe "norm \\<Plug>AM_adec"<cr><SID>WE$/;"	m
<Plug>AM_a<		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_a<		<SID>WS:AlignCtrl mIp1P1=l << >><CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_a=		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_a=		<SID>WS:AlignCtrl mIp1P1=l<CR>:AlignCtrl g :=<CR>:'a,'zAlign :\\==<CR><SID>WE$/;"	m
<Plug>AM_a?		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_a?		<SID>WS:AlignCtrl mIp1P1lC ? : : : : <CR>:'a,.Align<CR>:'a,'z-1s\/\\(\\s\\+\\)? \/?\\1\/e<CR><SID>WE$/;"	m
<Plug>AM_abox		<SID>WS:let	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_abox		<SID>WS:let g:alignmaps_iws=substitute(getline("'a"),'^\\(\\s*\\).*$','\\1','e')<CR>:'a,'z-1s\/^\\s\\+\/\/e<CR>:'a,'z-1s\/^.*$\/@&@\/<CR>:AlignCtrl m=p01P0w @<CR>:'a,.Align<CR>:'a,'z-1s\/@\/ * \/<CR>:'a,'z-1s\/@$\/*\/<CR>'aYP:s\/.\/*\/g<CR>0r\/'zkYp:s\/.\/*\/g<CR>0r A\/<Esc>:exe "'a-1,'z-1s\/^\/".g:alignmaps_iws."\/e"<CR><SID>WE$/;"	m
<Plug>AM_acom		<SID>WS:'a,.s/\/[*/]\/\=/@&@/e<CR>:'a,.s/\*\//@&/e<CR>:'y,'zs/^\(	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_acom		<SID>WS:'a,.s\/\\\/[*\/]\\\/\\=\/@&@\/e<CR>:'a,.s\/\\*\\\/\/@&\/e<CR>:'y,'zs\/^\\( *\\) @\/\\1@\/e<CR>'zk:call AlignMaps#StdAlign(2)<CR>:'y,'zs\/^\\(\\s*\\) @\/\\1\/e<CR>:'y,'zs\/ @\/\/eg<CR><SID>WE$/;"	m
<Plug>AM_adcom	<SID>WS:'a,.v/^\s*\/[/*]/s/\/[*/]\*\=/@&@/e<CR>:'a,.v/^\s*\/[/*]/s/\*\//@&/e<CR>:'y,'zv/^\s*\/[/*]/s/^\(	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_adcom	<SID>WS:'a,.v\/^\\s*\\\/[\/*]\/s\/\\\/[*\/]\\*\\=\/@&@\/e<CR>:'a,.v\/^\\s*\\\/[\/*]\/s\/\\*\\\/\/@&\/e<CR>:'y,'zv\/^\\s*\\\/[\/*]\/s\/^\\( *\\) @\/\\1@\/e<CR>'zk:call AlignMaps#StdAlign(3)<cr>:'y,'zv\/^\\s*\\\/[\/*]\/s\/^\\(\\s*\\) @\/\\1\/e<CR>:'y,'zs\/ @\/\/eg<CR><SID>WE$/;"	m
<Plug>AM_adec		<SID>WS:'a,'zs/\([^	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_adec		<SID>WS:'a,'zs\/\\([^ \\t\/(]\\)\\([*&]\\)\/\\1 \\2\/e<CR>:'y,'zv\/^\\\/\/s\/\\([^ \\t]\\)\\s\\+\/\\1 \/ge<CR>:'y,'zv\/^\\s*[*\/]\/s\/\\([^\/][*&]\\)\\s\\+\/\\1\/ge<CR>:'y,'zv\/^\\s*[*\/]\/s\/^\\(\\s*\\%([a-zA-Z_][a-zA-Z_0-9<>:]*\\s\\+\\%([a-zA-Z_*(&]\\)\\@=\\)\\+\\)\\([*(&]*\\)\\s*\\([a-zA-Z0-9_()<>:]\\+\\)\\s*\\(\\(\\[.\\{-}]\\)*\\)\\s*\\(=\\)\\=\\s*\\(.\\{-}\\)\\=\\s*;\/\\1@\\2#@\\3\\4@\\6@\\7;@\/e<CR>:'y,'zv\/^\\s*[*\/]\/s\/\\*\\\/\\s*$\/@*\\\/\/e<CR>:'y,'zv\/^\\s*[*\/]\/s\/^\\s\\+\\*\/@@@@@* \/e<CR>:'y,'zv\/^\\s*[*\/]\/s\/^@@@@@\\*\\(.*[^*\/]\\)$\/&@*\/e<CR>'yjma'zk:AlignCtrl v ^\\s*[*\/#]<CR>:call AlignMaps#StdAlign(1)<cr>:'y,'zv\/^\\s*[*\/]\/s\/@ \/\/ge<CR>:'y,'zv\/^\\s*[*\/]\/s\/\\(\\s*\\);\/;\\1\/e<CR>:'y,'zv\/^#\/s\/# \/\/e<CR>:'y,'zv\/^\\s\\+[*\/#]\/s\/\\([^\/*]\\)\\(\\*\\+\\)\\( \\+\\)\/\\1\\3\\2\/e<CR>:'y,'zv\/^\\s\\+[*\/#]\/s\/\\((\\+\\)\\( \\+\\)\\*\/\\2\\1*\/e<CR>:'y,'zv\/^\\s\\+[*\/#]\/s\/^\\(\\s\\+\\) \\*\/\\1*\/e<CR>:'y,'zv\/^\\s\\+[*\/#]\/s\/[ \\t@]*$\/\/e<CR>:'y,'zs\/^[*]\/ *\/e<CR><SID>WE$/;"	m
<Plug>AM_adef		<SID>WS:AlignPush<CR>:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_adef		<SID>WS:AlignPush<CR>:AlignCtrl v ^\\s*\\(\\\/\\*\\<bar>\\\/\\\/\\)<CR>:'a,.v\/^\\s*\\(\\\/\\*\\<bar>\\\/\\\/\\)\/s\/^\\(\\s*\\)#\\(\\s\\)*define\\s*\\(\\I[a-zA-Z_0-9(),]*\\)\\s*\\(.\\{-}\\)\\($\\<Bar>\\\/\\*\\)\/#\\1\\2define @\\3@\\4@\\5\/e<CR>:'a,.v\/^\\s*\\(\\\/\\*\\<bar>\\\/\\\/\\)\/s\/\\($\\<Bar>\\*\\\/\\)\/@&\/e<CR>'zk:call AlignMaps#StdAlign(1)<cr>'yjma'zk:'a,.v\/^\\s*\\(\\\/\\*\\<bar>\\\/\\\/\\)\/s\/ @\/\/g<CR><SID>WE$/;"	m
<Plug>AM_aenum	<SID>WS:'a,'zs/\([-+]\=\d\+\)\([eE][-+]\d\+\)\=/\1#\2/ge<CR>:'a,'zs/\([,eE][-+]\=\d\+\)#/\1/ge<CR>:'a,'zs/#,/,/ge<CR>:'a,'zs/[-+]\=\%(\d\+\%([,#]\d*\)\=\<bar>[,#]\d\+\)\%([eE][-+]\=\d\+\)\=/@&@/ge<CR>:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_aenum	<SID>WS:'a,'zs\/\\([-+]\\=\\d\\+\\)\\([eE][-+]\\d\\+\\)\\=\/\\1#\\2\/ge<CR>:'a,'zs\/\\([,eE][-+]\\=\\d\\+\\)#\/\\1\/ge<CR>:'a,'zs\/#,\/,\/ge<CR>:'a,'zs\/[-+]\\=\\%(\\d\\+\\%([,#]\\d*\\)\\=\\<bar>[,#]\\d\\+\\)\\%([eE][-+]\\=\\d\\+\\)\\=\/@&@\/ge<CR>:AlignCtrl Imp0P0r<CR>:'a,'zAlign [@#,]<CR>:'a,'zs\/\\([,#]\\)\\(\\s\\+\\)\\(\\d*\\%([eE][-+]\\=\\d\\+\\)\\=\\)@\/\\1\\3\\2@\/ge<CR>:'a,'zs\/@\/\/<CR>:'a,'zs\/[#@]\/ \/ge<CR><SID>WE$/;"	m
<Plug>AM_afnc		:<c-u>set	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_afnc		:<c-u>set lz<CR>:silent call AlignMaps#Afnc()<CR>:set nolz<CR>$/;"	m
<Plug>AM_aocom	<SID>WS:AlignPush<CR>:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_aocom	<SID>WS:AlignPush<CR>:AlignCtrl g \/[*\/]<CR>:exe "norm \\<Plug>AM_acom"<cr>:AlignPop<CR><SID>WE$/;"	m
<Plug>AM_ascom	<SID>WS:'a,.s/\/[*/]/@&@/e<CR>:'a,.s/\*\//@&/e<CR>:silent!	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_ascom	<SID>WS:'a,.s\/\\\/[*\/]\/@&@\/e<CR>:'a,.s\/\\*\\\/\/@&\/e<CR>:silent! 'a,.g\/^\\s*@\\\/[*\/]\/s\/@\/\/ge<CR>:AlignCtrl v ^\\s*\\\/[*\/]<CR>:AlignCtrl g \\\/[*\/]<CR>'zk:call AlignMaps#StdAlign(2)<cr>:'y,'zs\/^\\(\\s*\\) @\/\\1\/e<CR>:'y,'zs\/ @\/\/eg<CR><SID>WE$/;"	m
<Plug>AM_aunum	<SID>WS:'a,'zs/\([-+]\=\d\+\)\([eE][-+]\d\+\)\=/\1#\2/ge<CR>:'a,'zs/\([.eE][-+]\=\d\+\)#/\1/ge<CR>:'a,'zs/#\././ge<CR>:'a,'zs/[-+]\=\%(\d\+\%([.#]\d*\)\=\<bar>[.#]\d\+\)\%([eE][-+]\=\d\+\)\=/@&@/ge<CR>:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_aunum	<SID>WS:'a,'zs\/\\([-+]\\=\\d\\+\\)\\([eE][-+]\\d\\+\\)\\=\/\\1#\\2\/ge<CR>:'a,'zs\/\\([.eE][-+]\\=\\d\\+\\)#\/\\1\/ge<CR>:'a,'zs\/#\\.\/.\/ge<CR>:'a,'zs\/[-+]\\=\\%(\\d\\+\\%([.#]\\d*\\)\\=\\<bar>[.#]\\d\\+\\)\\%([eE][-+]\\=\\d\\+\\)\\=\/@&@\/ge<CR>:AlignCtrl Imp0P0r<CR>:'a,'zAlign [@#.]<CR>:'a,'zs\/\\([.#]\\)\\(\\s\\+\\)\\(\\d*\\%([eE][-+]\\=\\d\\+\\)\\=\\)@\/\\1\\3\\2@\/ge<CR>:'a,'zs\/@\/\/<CR>:'a,'zs\/[#@]\/ \/ge<CR><SID>WE$/;"	m
<Plug>AM_m=		<SID>WS:'a,'zs/\s\+\([*/+\-%<Bar>&\~^]\==\)/	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_m=		<SID>WS:'a,'zs\/\\s\\+\\([*\/+\\-%<Bar>&\\~^]\\==\\)\/ \\1\/e<CR>:'a,'zs@ \\+\\([*\/+\\-%<Bar>&\\~^]\\)=@\\1=@ge<CR>:'a,'zs\/==\/\\="\\<Char-0x0f>\\<Char-0x0f>"\/ge<CR>:'a,'zs\/!=\/\\="!\\<Char-0x0f>"\/ge<CR>'zk:AlignCtrl mIp1P1=l =<CR>:AlignCtrl g =<CR>:'a,'z-1Align<CR>:'a,'z-1s@\\([*\/+\\-%<Bar>&\\~^!=]\\)\\( \\+\\)=@\\2\\1=@ge<CR>:'a,'z-1s\/\\( \\+\\);\/;\\1\/ge<CR>:'a,'z-s\/%\\ze[^=]\/ @%@ \/e<CR>'zk:call AlignMaps#StdAlign(1)<cr>:'y,'zs\/^\\(\\s*\\) @\/\\1\/e<CR>:'a,'z-1s\/\\xff\/=\/ge<CR>:'y,'zs\/ @\/\/eg<CR><SID>WE$/;"	m
<Plug>AM_t|		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_t|		<SID>WS:AlignCtrl mIp0P0=l <Bar><CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_t#		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_t#		<SID>WS:AlignCtrl mIp0P0=l #<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_t,		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_t,		<SID>WS:AlignCtrl mIp0P1=l ,<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_t:		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_t:		<SID>WS:AlignCtrl mIp1P1=l :<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_t;		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_t;		<SID>WS:AlignCtrl mIp0P1=l ;<CR>:'a,.Align<CR>:sil 'y,'zs\/\\( *\\);\/;\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_t<		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_t<		<SID>WS:AlignCtrl mIp0P0=l <<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_t=		<SID>WS:call	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_t=		<SID>WS:call AlignMaps#Equals()<CR><SID>WE$/;"	m
<Plug>AM_t?		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_t?		<SID>WS:AlignCtrl mIp0P0=l ?<CR>:'a,.Align<CR>:.,'zs\/ \\( *\\);\/;\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_t@		<SID>WS:call	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_t@		<SID>WS:call AlignMaps#StdAlign(1)<cr><SID>WE$/;"	m
<Plug>AM_tW@		<SID>WS:call	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_tW@		<SID>WS:call AlignMaps#StdAlign(2)<cr><SID>WE$/;"	m
<Plug>AM_tab		<SID>WS:'a,.s/^\(\t*\)\(.*\)$/\=submatch(1).escape(substitute(submatch(2),'\t',"\<Char-0x0f>",'g'),'\')/<CR>:if	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_tab		<SID>WS:'a,.s\/^\\(\\t*\\)\\(.*\\)$\/\\=submatch(1).escape(substitute(submatch(2),'\\t',"\\<Char-0x0f>",'g'),'\\')\/<CR>:if &ts == 1<bar>exe "AlignCtrl mI=lp0P0 \\<Char-0x0f>"<bar>else<bar>exe "AlignCtrl mI=l"<bar>endif<CR>:'a,.Align <Char-0x0f><CR>:exe "'y+1,'z-1s\/\\<Char-0x0f>\/".((&ts == 1)? '\\t' : ' ')."\/g"<CR><SID>WE$/;"	m
<Plug>AM_tml		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_tml		<SID>WS:AlignCtrl mWp1P0=l \\\\\\@<!\\\\\\s*$<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_ts,		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_ts,		<SID>WS:AlignCtrl mIp0P1=l #\\zs<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_ts,		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_ts,		<SID>WS:AlignCtrl mIp0P1=l ,\\zs<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_ts:		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_ts:		<SID>WS:AlignCtrl mIp1P1=l :\\zs<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_ts;		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_ts;		<SID>WS:AlignCtrl mIp1P1=l ;\\zs<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_ts<		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_ts<		<SID>WS:AlignCtrl mIp1P1=l <\\zs<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_ts=		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_ts=		<SID>WS:AlignCtrl mIp1P1=l =\\zs<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_tsp		<SID>WS:keepj	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_tsp		<SID>WS:keepj 'a,.s\/^\\(\\s*\\)\\(.*\\)\/\\=submatch(1).escape(substitute(submatch(2),'\\s\\+','@','g'),'\\')\/<CR>:AlignCtrl mI=lp0P0 @<CR>:'a,.Align<CR>:keepj 'y+1,'z-1s\/@\/ \/g<CR><SID>WE$/;"	m
<Plug>AM_tsq		<SID>WS:'a,.AlignReplaceQuotedSpaces<CR>:keepj	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_tsq		<SID>WS:'a,.AlignReplaceQuotedSpaces<CR>:keepj 'a,.s\/^\\(\\s*\\)\\(.*\\)\/\\=submatch(1).substitute(submatch(2),'\\s\\+','@','g')\/<CR>:AlignCtrl mIp0P0=l @<CR>:'a,.Align<CR>:keepj 'y+1,'z-1s\/[%@]\/ \/g<CR><SID>WE$/;"	m
<Plug>AM_tt		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_tt		<SID>WS:AlignCtrl mIp1P1=l \\\\\\@<!& \\\\\\\\<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_t~		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_t~		<SID>WS:AlignCtrl mIp0P0=l ~<CR>:'a,.Align<CR>:'y,'zs\/ \\( *\\);\/;\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_w=		<SID>WS:'a,'zg/=/s/\s\+\([*/+\-%<Bar>&\~^]\==\)/	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_w=		<SID>WS:'a,'zg\/=\/s\/\\s\\+\\([*\/+\\-%<Bar>&\\~^]\\==\\)\/ \\1\/e<CR>:'a,'zg\/=\/s@ \\+\\([*\/+\\-%<Bar>&\\~^]\\)=@\\1=@ge<CR>:'a,'zg\/=\/s\/==\/\\="\\<Char-0x0f>\\<Char-0x0f>"\/ge<CR>:'a,'zg\/=\/s\/!=\/\\="!\\<Char-0x0f>"\/ge<CR>'zk:AlignCtrl mWp1P1=l =<CR>:AlignCtrl g =<CR>:'a,'z-1g\/=\/Align<CR>:'a,'z-1g\/=\/s@\\([*\/+\\-%<Bar>&\\~^!=]\\)\\( \\+\\)=@\\2\\1=@ge<CR>:'a,'z-1g\/=\/s\/\\( \\+\\);\/;\\1\/ge<CR>:'a,'z-1v\/^\\s*\\\/[*\/]\/s\/\\\/[*\/]\/@&@\/e<CR>:'a,'z-1v\/^\\s*\\\/[*\/]\/s\/\\*\\\/\/@&\/e<CR>'zk:call AlignMaps#StdAlign(1)<cr>:'y,'zs\/^\\(\\s*\\) @\/\\1\/e<CR>:'a,'z-1g\/=\/s\/\\xff\/=\/ge<CR>:'y,'zg\/=\/s\/ @\/\/eg<CR><SID>WE$/;"	m
<Plug>AlignMapsWrapperEnd	:call	bundle/Align/plugin/AlignMapsPlugin.vim	/^nmap <silent> <script> <Plug>AlignMapsWrapperEnd	:call AlignMaps#WrapperEnd()<CR>:set nolz<CR>$/;"	m
<Plug>AlignMapsWrapperStart	:<c-u>set	bundle/Align/plugin/AlignMapsPlugin.vim	/^vmap <silent> <script> <Plug>AlignMapsWrapperStart	:<c-u>set lz<CR>:call AlignMaps#WrapperStart(1)<CR>$/;"	m
<Plug>AlignMapsWrapperStart	:set	bundle/Align/plugin/AlignMapsPlugin.vim	/^nmap <silent> <script> <Plug>AlignMapsWrapperStart	:set lz<CR>:call AlignMaps#WrapperStart(0)<CR>$/;"	m
<Plug>Csurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>ISurround	bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>RestoreWinPosn	:call	bundle/Align/plugin/cecutil.vim	/^nmap <silent> <Plug>RestoreWinPosn	:call RestoreWinPosn()<CR>$/;"	m
<Plug>SaveWinPosn		:call	bundle/Align/plugin/cecutil.vim	/^nmap <silent> <Plug>SaveWinPosn		:call SaveWinPosn()<CR>$/;"	m
<Plug>SurroundRepeat	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>VSurround	bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>YSsurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<RIGHT>	conf/mappings.vim	/^inoremap <RIGHT> <NOP>$/;"	m
<RIGHT>	conf/mappings.vim	/^map <RIGHT> <NOP>$/;"	m
<SID>WE	<Plug>AlignMapsWrapperEnd	bundle/Align/plugin/AlignMapsPlugin.vim	/^ nmap <unique> <SID>WE	<Plug>AlignMapsWrapperEnd$/;"	m
<SID>WS	<Plug>AlignMapsWrapperStart	bundle/Align/plugin/AlignMapsPlugin.vim	/^ map <unique> <SID>WS	<Plug>AlignMapsWrapperStart$/;"	m
<SID>xx	bundle/vim-rails/autoload/rails.vim	/^map <SID>xx <SID>xx$/;"	m
<Space>	conf/mappings.vim	/^nnoremap <Space> za$/;"	m
<Space>	conf/mappings.vim	/^vnoremap <Space> za$/;"	m
<TAB>	conf/neocomplcache.vim	/^imap <expr><TAB> neosnippet#expandable_or_jumpable() ? "\\<Plug>(neosnippet_expand_or_jump)" : pumvisible() ? "\\<C-n>" : "\\<TAB>"$/;"	m
<UP>	conf/mappings.vim	/^inoremap <UP> <NOP>$/;"	m
<UP>	conf/mappings.vim	/^map <UP> <NOP>$/;"	m
<cr>	bundle/HTML-AutoCloseTag/ftplugin/html_autoclosetag.vim	/^ino <buffer> <expr> <cr> <SID>Return()$/;"	m
<leader>a	conf/mappings.vim	/^map <leader>a ggVG$/;"	m
<leader>c	conf/mappings.vim	/^map <leader>c "+y$/;"	m
<leader>p	conf/mappings.vim	/^map <leader>p "+p$/;"	m
<plug>NERDCommenterAltDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <plug>NERDCommenterAltDelims :call <SID>SwitchToAlternativeDelimiters(1)<cr>$/;"	m
<plug>NERDCommenterInsert	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^inoremap <silent> <plug>NERDCommenterInsert <SPACE><BS><ESC>:call NERDComment('i', "insert")<CR>$/;"	m
<s-CR>	conf/neocomplcache.vim	/^inoremap <expr><s-CR> pumvisible() ? neocomplcache#close_popup()"\\<CR>" : "\\<CR>"$/;"	m
<s-tab>	conf/mappings.vim	/^nmap <s-tab> v<$/;"	m
<s-tab>	conf/mappings.vim	/^vmap <s-tab> <gv$/;"	m
<tab>	conf/mappings.vim	/^nmap <tab> v>$/;"	m
<tab>	conf/mappings.vim	/^vmap <tab> >gv$/;"	m
>	bundle/HTML-AutoCloseTag/ftplugin/html_autoclosetag.vim	/^ino <buffer> <silent> > <c-r>=<SID>CloseTag()<cr>$/;"	m
ARCHIVE	bundle/vim-coffee-script/Makefile	/^ARCHIVE = vim-coffee-script-$(VERSION).zip$/;"	m
ARCHIVE_DIRS	bundle/vim-coffee-script/Makefile	/^ARCHIVE_DIRS = after compiler doc ftdetect ftplugin indent syntax$/;"	m
AUTOL	bundle/delimitMate/Makefile	/^AUTOL=autoload\/$(PLUGIN).vim$/;"	m
Abbrev	bundle/vim-rails/autoload/rails.vim	/^function! s:Abbrev(bang,...) abort$/;"	f
AcceptSelection	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:AcceptSelection(mode)$/;"	f
AddBracketExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddBracketExpand(abbr,expn)$/;"	f
AddColonExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddColonExpand(abbr,expn)$/;"	f
AddLeftDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelim(delim, theLine)$/;"	f
AddLeftDelimAligned	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelimAligned(delim, theLine, alignIndx)$/;"	f
AddParenExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddParenExpand(abbr,expn,...)$/;"	f
AddRightDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelim(delim, theLine)$/;"	f
AddRightDelimAligned	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelimAligned(delim, theLine, alignIndx)$/;"	f
AddSelectiveExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddSelectiveExpand(abbr,pat,expn,...)$/;"	f
AddTabExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddTabExpand(abbr,expn)$/;"	f
AddToClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:AddToClasspath(classpath,path)$/;"	f
Ag	bundle/ag.vim/plugin/ag.vim	/^command! -bang -nargs=* -complete=file Ag call ag#Ag('grep<bang>',<q-args>)$/;"	c
AgAdd	bundle/ag.vim/plugin/ag.vim	/^command! -bang -nargs=* -complete=file AgAdd call ag#Ag('grepadd<bang>', <q-args>)$/;"	c
AgFile	bundle/ag.vim/plugin/ag.vim	/^command! -bang -nargs=* -complete=file AgFile call ag#Ag('grep<bang> -g', <q-args>)$/;"	c
AgFromSearch	bundle/ag.vim/plugin/ag.vim	/^command! -bang -nargs=* -complete=file AgFromSearch call ag#AgFromSearch('grep<bang>', <q-args>)$/;"	c
AgHelp	bundle/ag.vim/plugin/ag.vim	/^command! -bang -nargs=* -complete=help AgHelp call ag#AgHelp('grep<bang>',<q-args>)$/;"	c
AirlineModePrefix	bundle/vim-airline/plugin/airline.vim	/^function! AirlineModePrefix()$/;"	f
Align	bundle/Align/plugin/AlignPlugin.vim	/^com! -bang -range -nargs=* Align <line1>,<line2>call Align#Align(<bang>0,<q-args>)$/;"	c
Align#Align	bundle/Align/autoload/Align.vim	/^fun! Align#Align(hasctrl,...) range$/;"	f
Align#AlignCtrl	bundle/Align/autoload/Align.vim	/^fun! Align#AlignCtrl(...)$/;"	f
Align#AlignPop	bundle/Align/autoload/Align.vim	/^fun! Align#AlignPop()$/;"	f
Align#AlignPush	bundle/Align/autoload/Align.vim	/^fun! Align#AlignPush()$/;"	f
Align#AlignReplaceQuotedSpaces	bundle/Align/autoload/Align.vim	/^fun! Align#AlignReplaceQuotedSpaces()$/;"	f
AlignCtrl	bundle/Align/plugin/AlignPlugin.vim	/^com!              -nargs=* AlignCtrl call Align#AlignCtrl(<q-args>)$/;"	c
AlignMaps#Afnc	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#Afnc()$/;"	f
AlignMaps#AlignMapsClean	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#AlignMapsClean()$/;"	f
AlignMaps#CharJoiner	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#CharJoiner(chr)$/;"	f
AlignMaps#Equals	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#Equals() range$/;"	f
AlignMaps#FixMultiDec	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#FixMultiDec()$/;"	f
AlignMaps#StdAlign	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#StdAlign(mode) range$/;"	f
AlignMaps#WrapperEnd	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#WrapperEnd() range$/;"	f
AlignMaps#WrapperStart	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#WrapperStart(vis) range$/;"	f
AlignMapsClean	bundle/Align/plugin/AlignMapsPlugin.vim	/^com! AlignMapsClean	:call AlignMaps#AlignMapsClean()$/;"	c
AlignPop	bundle/Align/plugin/AlignPlugin.vim	/^com!              -nargs=0 AlignPop  call Align#AlignPop()$/;"	c
AlignPush	bundle/Align/plugin/AlignPlugin.vim	/^com!              -nargs=0 AlignPush call Align#AlignPush()$/;"	c
AlignReplaceQuotedSpaces	bundle/Align/plugin/AlignPlugin.vim	/^com!       -range -nargs=0 AlignReplaceQuotedSpaces <line1>,<line2>call Align#AlignReplaceQuotedSpaces()$/;"	c
AltMultipart	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AltMultipart()$/;"	f
Alternate	bundle/vim-rails/autoload/rails.vim	/^function! s:Alternate(cmd,line1,line2,count,...)$/;"	f
AppendCommentToLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AppendCommentToLine()$/;"	f
Args	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function s:Args()$/;"	f
Args	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function s:Args()$/;"	f
AutoClose	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:AutoClose() "{{{$/;"	f
BackupDir	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  class BackupDir$/;"	c	class:VimRubyInstaller
Bookmark.AddBookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(...)$/;"	f
Bookmark.compareTo	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(...)$/;"	f
Bookmark.openInNewTab	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
BufAbbreviations	bundle/vim-rails/autoload/rails.vim	/^function! s:BufAbbreviations()$/;"	f
BufCommands	bundle/vim-rails/autoload/rails.vim	/^function! s:BufCommands()$/;"	f
BufDatabase	bundle/vim-rails/autoload/rails.vim	/^function! s:BufDatabase(...)$/;"	f
BufEnterHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufEnterHook()$/;"	f
BufInit	bundle/vim-rails/plugin/rails.vim	/^function! s:BufInit(path)$/;"	f
BufMappings	bundle/vim-rails/autoload/rails.vim	/^function! s:BufMappings()$/;"	f
BufNavCommands	bundle/vim-rails/autoload/rails.vim	/^function! s:BufNavCommands()$/;"	f
BufProjectionCommands	bundle/vim-rails/autoload/rails.vim	/^function! s:BufProjectionCommands()$/;"	f
BufScriptWrappers	bundle/vim-rails/autoload/rails.vim	/^function! s:BufScriptWrappers()$/;"	f
BufSettings	bundle/vim-rails/autoload/rails.vim	/^function! s:BufSettings()$/;"	f
BufSyntax	bundle/vim-rails/autoload/rails.vim	/^function! s:BufSyntax()$/;"	f
BufWinEnterHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufWinEnterHook()$/;"	f
BuildPrompt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:BuildPrompt(upd)$/;"	f
Bundle	bundle/vundle/autoload/vundle.vim	/^com! -nargs=+         Bundle$/;"	c
BundleClean	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang   BundleClean$/;"	c
BundleDocs	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0         BundleDocs $/;"	c
BundleInstall	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleInstall$/;"	c
BundleList	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0 -bang BundleList$/;"	c
BundleSearch	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleSearch$/;"	c
BundleUpdate	bundle/vundle/autoload/vundle.vim	/^com! BundleUpdate BundleInstall!$/;"	c
Bundles	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete Bundles$/;"	c
CONFIG_FILE	bundle/html5.vim/Makefile	/^CONFIG_FILE=config.mk$/;"	m
CURL_OPT	bundle/html5.vim/Makefile	/^CURL_OPT=$/;"	m
CacheErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:CacheErrors(...)$/;"	f
CanCommentLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanCommentLine(forceNested, lineNum)$/;"	f
CanPlaceCursor	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanPlaceCursor(line, col)$/;"	f
CanSexyCommentLines	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanSexyCommentLines(topline, bottomline)$/;"	f
CanToggleCommentLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanToggleCommentLine(forceNested, lineNum)$/;"	f
ClearAllCtrlPCaches	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearAllCtrlPCaches cal ctrlp#clra()$/;"	c
ClearCache	bundle/syntastic/plugin/syntastic.vim	/^function! s:ClearCache()$/;"	f
ClearCtrlPCache	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearCtrlPCache     cal ctrlp#clr()$/;"	c
Close	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Close()$/;"	f
CloseTag	bundle/HTML-AutoCloseTag/ftplugin/html_autoclosetag.vim	/^fun s:CloseTag()$/;"	f
ClosingTag	bundle/HTML-AutoCloseTag/ftplugin/html_autoclosetag.vim	/^fun s:ClosingTag(tag)$/;"	f
CoffeeCompile	bundle/vim-coffee-script/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeCompile	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
CoffeeCompileClose	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
CoffeeCompileComplete	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileComplete(arg, cmdline, cursor)$/;"	f
CoffeeCompileResetVars	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
CoffeeCompileUpdate	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileUpdate(startline, endline)$/;"	f
CoffeeCompileWatchUpdate	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileWatchUpdate()$/;"	f
CoffeeLint	bundle/vim-coffee-script/ftplugin/coffee.vim	/^command! -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
CoffeeLint	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
CoffeeMake	bundle/vim-coffee-script/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake make<bang> <args>$/;"	c
CoffeeRun	bundle/vim-coffee-script/ftplugin/coffee.vim	/^command! -range=% -bar CoffeeRun <line1>,<line2>:w !coffee -s$/;"	c
CoffeeUpdateMakePrg	bundle/vim-coffee-script/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CommandEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:CommandEdit(cmd, name, projections, ...)$/;"	f
CommandList	bundle/vim-rails/autoload/rails.vim	/^function! s:CommandList(A,L,P)$/;"	f
CommentBlock	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentBlock(top, bottom, lSide, rSide, forceNested )$/;"	f
CommentLines	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLines(forceNested, align, firstLine, lastLine)$/;"	f
CommentLinesMinimal	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesMinimal(firstLine, lastLine)$/;"	f
CommentLinesSexy	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesSexy(topline, bottomline)$/;"	f
CommentLinesToggle	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesToggle(forceNested, firstLine, lastLine)$/;"	f
CommentRegion	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentRegion(topLine, topCol, bottomLine, bottomCol, forceNested)$/;"	f
CompilerSet	bundle/vim-ruby/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	bundle/vim-ruby/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	bundle/vim-ruby/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	bundle/vim-ruby/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	bundle/vim-ruby/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompleteCheckerName	bundle/syntastic/plugin/syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos)$/;"	f
Complete_cd	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_cd(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_console	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_console(A,L,P)$/;"	f
Complete_destroy	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_destroy(A,L,P)$/;"	f
Complete_edit	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_edit(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_environments	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_environments(...)$/;"	f
Complete_find	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_find(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_generate	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_generate(A,L,P)$/;"	f
Complete_preview	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_preview(A,L,P)$/;"	f
Complete_related	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_related(A,L,P)$/;"	f
Complete_ruby	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_ruby(A,L,P)$/;"	f
Complete_script	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_script(ArgLead,CmdLine,P)$/;"	f
Complete_server	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_server(A,L,P)$/;"	f
ConfFlag	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function s:ConfFlag()$/;"	f
ConvertLeadingSpacesToTabs	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingSpacesToTabs(line)$/;"	f
ConvertLeadingTabsToSpaces	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingTabsToSpaces(line)$/;"	f
ConvertLeadingWhiteSpace	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingWhiteSpace(line)$/;"	f
CountInPage	bundle/HTML-AutoCloseTag/ftplugin/html_autoclosetag.vim	/^fun s:CountInPage(needle)$/;"	f
CountNonESCedOccurances	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CountNonESCedOccurances(str, searchstr, escChar)$/;"	f
CreateDelimMapFromCms	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CreateDelimMapFromCms()$/;"	f
CreateMaps	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function! s:CreateMaps(modes, target, desc, combo)$/;"	f
CreateNewFile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CreateNewFile(...)$/;"	f
Creator.BufNamePrefix	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreatePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreatePrimary(name)$/;"	f
Creator.CreateSecondary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateSecondary(dir)$/;"	f
Creator.New	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.TogglePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.TogglePrimary(dir)$/;"	f
Creator._bindMappings	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createTreeWin	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._nextBufferName	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._setCommonBufOptions	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator.createMirror	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createPrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createPrimary(name)$/;"	f
Creator.createSecondary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createSecondary(dir)$/;"	f
Creator.togglePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.togglePrimary(dir)$/;"	f
CtrlP	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlP         cal ctrlp#init(0, { 'dir': <q-args> })$/;"	c
CtrlPAug	bundle/ctrlp.vim/autoload/ctrlp.vim	/^	aug CtrlPAug$/;"	a
CtrlPBookmarkDir	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBookmarkDir cal ctrlp#init(ctrlp#bookmarkdir#id())$/;"	c
CtrlPBookmarkDirAdd	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPBookmarkDirAdd$/;"	c
CtrlPBufTag	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPBufTag$/;"	c
CtrlPBufTagAll	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBufTagAll cal ctrlp#init(ctrlp#buffertag#cmd(1))$/;"	c
CtrlPBuffer	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBuffer   cal ctrlp#init(1)$/;"	c
CtrlPChange	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPChange$/;"	c
CtrlPChangeAll	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPChangeAll   cal ctrlp#init(ctrlp#changes#cmd(1))$/;"	c
CtrlPClearAllCaches	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearAllCaches cal ctrlp#clra()$/;"	c
CtrlPClearCache	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearCache     cal ctrlp#clr()$/;"	c
CtrlPCurFile	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurFile cal ctrlp#init(0, { 'mode': 'c' })$/;"	c
CtrlPCurWD	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurWD   cal ctrlp#init(0, { 'mode': '' })$/;"	c
CtrlPDir	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPDir$/;"	c
CtrlPLastMode	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? CtrlPLastMode cal ctrlp#init(-1, { 'args': <q-args> })$/;"	c
CtrlPLine	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPLine      cal ctrlp#init(ctrlp#line#id())$/;"	c
CtrlPMRUFiles	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPMRUFiles cal ctrlp#init(2, { 'dir': <q-args> })$/;"	c
CtrlPMixed	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPMixed       cal ctrlp#init(ctrlp#mixed#id())$/;"	c
CtrlPQuickfix	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPQuickfix cal ctrlp#init(ctrlp#quickfix#id())$/;"	c
CtrlPRTS	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRTS       cal ctrlp#init(ctrlp#rtscript#id())$/;"	c
CtrlPRoot	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRoot    cal ctrlp#init(0, { 'mode': 'r' })$/;"	c
CtrlPTag	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPTag      cal ctrlp#init(ctrlp#tag#id())$/;"	c
CtrlPUndo	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPUndo      cal ctrlp#init(ctrlp#undo#id())$/;"	c
CurrentFiletypes	bundle/syntastic/plugin/syntastic.vim	/^function! s:CurrentFiletypes()$/;"	f
CustomComplete	bundle/vim-rails/autoload/rails.vim	/^function! s:CustomComplete(A,L,P,cmd)$/;"	f
CygwinPath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:CygwinPath(path)$/;"	f
DEPEND_DIR	bundle/html5.vim/Makefile	/^DEPEND_DIR=\/tmp\/vim-deps$/;"	m
DIRS	bundle/html5.vim/Makefile	/^DIRS=`ls -1F | grep \/ | sed -e 's\/\\\/\/\/'`$/;"	m
DM	bundle/Align/plugin/cecutil.vim	/^com! -bar -nargs=1 DM	call DestroyMark(<q-args>)$/;"	c
DOC	bundle/delimitMate/Makefile	/^DOC=$(wildcard doc\/*.txt)$/;"	m
DefRuby	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DelimitMateDo	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:DelimitMateDo(...) "{{{$/;"	f
DelimitMateReload	bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateReload call s:DelimitMateDo(1)$/;"	c
DelimitMateSwitch	bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateSwitch call s:DelimitMateSwitch()$/;"	c
DelimitMateSwitch	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:DelimitMateSwitch() "{{{$/;"	f
DelimitMateTest	bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateTest call s:TestMappingsDo()$/;"	c
DestroyMark	bundle/Align/plugin/cecutil.vim	/^fun! DestroyMark(markname)$/;"	f
Detect	bundle/vim-rails/plugin/rails.vim	/^function! s:Detect(filename)$/;"	f
DetectCoffee	bundle/vim-coffee-script/ftdetect/coffee.vim	/^function! s:DetectCoffee()$/;"	f
DoesBlockHaveDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveDelim(delim, top, bottom)$/;"	f
DoesBlockHaveMultipartDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveMultipartDelim(top, bottom)$/;"	f
Edit	bundle/vim-rails/autoload/rails.vim	/^function! s:Edit(count,cmd,...)$/;"	f
EditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditClasspath()$/;"	f
Env	bundle/vim-ruby/bin/vim-ruby-install.rb	/^class Env$/;"	c
ErrMsg	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
Errors	bundle/syntastic/plugin/syntastic.vim	/^command! Errors call s:ShowLocList()$/;"	c
Esc	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Esc(str)$/;"	f
Examples	bundle/syntastic/syntax_checkers/perl/efm_perl.pl	/^Examples:$/;"	l
ExtraBrackets	bundle/vim-ruby/indent/ruby.vim	/^function s:ExtraBrackets(lnum)$/;"	f
ExtraMakeprgArgs	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! s:ExtraMakeprgArgs()$/;"	f
ExtraMappings	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:ExtraMappings() "{{{$/;"	f
Extract	bundle/vim-rails/autoload/rails.vim	/^function! s:Extract(bang,...) range abort$/;"	f
FCITX_CLOSE	bundle/fcitx.vim/plugin/fcitx.py	/^FCITX_CLOSE  = struct.pack('i', 1)$/;"	v
FCITX_OPEN	bundle/fcitx.vim/plugin/fcitx.py	/^FCITX_OPEN   = struct.pack('i', 1 | (1 << 16))$/;"	v
FCITX_STATUS	bundle/fcitx.vim/plugin/fcitx.py	/^FCITX_STATUS = struct.pack('i', 0)$/;"	v
FILES	bundle/html5.vim/Makefile	/^FILES=`ls -1 | grep '.vim$$'`$/;"	m
Fcitx2en	bundle/fcitx.vim/so/fcitx.vim	/^function Fcitx2en()$/;"	f
Fcitx2zh	bundle/fcitx.vim/so/fcitx.vim	/^function Fcitx2zh()$/;"	f
FileWriter	bundle/vim-ruby/bin/vim-ruby-install.rb	/^class FileWriter$/;"	c
Filename	bundle/neosnippet/autoload/neosnippet.vim	/^  function! Filename(...)$/;"	f
Find	bundle/vim-rails/autoload/rails.vim	/^function! s:Find(count,cmd,...)$/;"	f
FindBoundingLinesOfSexyCom	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindBoundingLinesOfSexyCom(lineNum)$/;"	f
FindComment	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:FindComment(linenum)$/;"	f
FindDelimiterIndex	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindDelimiterIndex(delimiter, line)$/;"	f
FindInParent	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^function! s:FindInParent(what, where)$/;"	f
Finish	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Finish() " {{{$/;"	f
FlushBuffer	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:FlushBuffer() " {{{$/;"	f
ForceUpdate	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ForceUpdate()$/;"	f
ForwardToZshChecker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:ForwardToZshChecker()$/;"	f
GIT_SOURCES	bundle/html5.vim/Makefile	/^GIT_SOURCES=$/;"	m
GetBufferRubyClass	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCoffeeIndent	bundle/vim-coffee-script/indent/coffee.vim	/^function! GetCoffeeIndent(curlinenum)$/;"	f
GetCurrentTag	bundle/HTML-AutoCloseTag/ftplugin/html_autoclosetag.vim	/^fun s:GetCurrentTag()$/;"	f
GetErubyIndent	bundle/vim-ruby/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetMSL	bundle/vim-ruby/indent/ruby.vim	/^function s:GetMSL(lnum)$/;"	f
GetMakePrg	bundle/vim-coffee-script/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
GetMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function s:GetMakeprg()$/;"	f
GetMatch	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetMatch(curline)$/;"	f
GetMavenClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenClasspath()$/;"	f
GetMavenProperties	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenProperties()$/;"	f
GetOcamlBuildMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function s:GetOcamlBuildMakeprg()$/;"	f
GetOcamlcMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function s:GetOcamlcMakeprg()$/;"	f
GetOtherMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function s:GetOtherMakeprg()$/;"	f
GetPrevNormalLine	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
GetRubyIndent	bundle/vim-ruby/indent/ruby.vim	/^function GetRubyIndent(...)$/;"	f
GetRubyVarType	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetSexyComLeft	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComLeft(space, esc)$/;"	f
GetSexyComMarker	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComMarker(space, esc)$/;"	f
GetSexyComRight	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComRight(space, esc)$/;"	f
GetShell	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:GetShell()$/;"	f
GetTrimmedLine	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
GetValaModules	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaModules()$/;"	f
GlobPath	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:GlobPath(dirs, depth)$/;"	f
GoWinbufnr	bundle/Align/plugin/cecutil.vim	/^fun! GoWinbufnr(bufnum)$/;"	f
HasCStyleComments	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasCStyleComments()$/;"	f
HasLeadingTabs	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasLeadingTabs(...)$/;"	f
HasMultipartDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasMultipartDelims()$/;"	f
HiDefaults	bundle/vim-rails/autoload/rails.vim	/^function! s:HiDefaults()$/;"	f
HiLink	bundle/JavaScript-syntax/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	bundle/JavaScript-syntax/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	bundle/jQuery/syntax/jquery.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	bundle/jQuery/syntax/jquery.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	bundle/vim-json/syntax/json.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	bundle/vim-json/syntax/json.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HtmlHiLink	bundle/vim-markdown/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	bundle/vim-markdown/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlIndentClose	bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentClose(lnum, pattern)$/;"	f
HtmlIndentCloseAlt	bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentGet	bundle/html5.vim/indent/html.vim	/^fun! HtmlIndentGet(lnum)$/;"	f
HtmlIndentOpen	bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentOpen(lnum, pattern)$/;"	f
HtmlIndentOpenAlt	bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentSum	bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
INT_SIZE	bundle/fcitx.vim/plugin/fcitx.py	/^INT_SIZE     = struct.calcsize('i')$/;"	v
IgnoreError	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:IgnoreError(text)$/;"	f
IgnoreError	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:IgnoreError(text)$/;"	f
IgnoreFile	bundle/syntastic/plugin/syntastic.vim	/^function! s:IgnoreFile(filename)$/;"	f
InComment	bundle/HTML-AutoCloseTag/ftplugin/html_autoclosetag.vim	/^fun s:InComment()$/;"	f
Init	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:Init()$/;"	f
InitVariable	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InitVariable(var, value)$/;"	f
Invert	bundle/vim-rails/autoload/rails.vim	/^function! s:Invert(bang)$/;"	f
InvertComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InvertComment(firstLine, lastLine)$/;"	f
IsComment	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsComment(linenum, col)$/;"	f
IsCommentLine	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsCommentLine(linenum)$/;"	f
IsCommentOrString	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
IsCommented	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommented(left, right, line)$/;"	f
IsCommentedFromStartOfLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedFromStartOfLine(left, line)$/;"	f
IsCommentedNormOrSexy	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedNormOrSexy(lineNum)$/;"	f
IsCommentedOuttermost	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedOuttermost(left, right, leftAlt, rightAlt, line)$/;"	f
IsDelimValid	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsDelimValid(delimiter, delIndx, line)$/;"	f
IsEscaped	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsEscaped(str, indx, escChar)$/;"	f
IsInClassDef	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInSexyComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsInSexyComment(line)$/;"	f
IsInString	bundle/vim-ruby/indent/ruby.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringDelimiter	bundle/vim-ruby/indent/ruby.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
IsInStringOrComment	bundle/vim-ruby/indent/ruby.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrDocumentation	bundle/vim-ruby/indent/ruby.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsNumEven	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsNumEven(num)$/;"	f
IsPosInClassDef	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsRedrawRequiredAfterMake	bundle/syntastic/plugin/syntastic.vim	/^function! s:IsRedrawRequiredAfterMake()$/;"	f
IsSexyComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsSexyComment(topline, bottomline)$/;"	f
IsShellValid	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:IsShellValid()$/;"	f
IsString	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsString(linenum, col)$/;"	f
JshintNew	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function s:JshintNew()$/;"	f
KeyLoop	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:KeyLoop()$/;"	f
KeyMap.Add	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
LAg	bundle/ag.vim/plugin/ag.vim	/^command! -bang -nargs=* -complete=file LAg call ag#Ag('lgrep<bang>', <q-args>)$/;"	c
LAgAdd	bundle/ag.vim/plugin/ag.vim	/^command! -bang -nargs=* -complete=file LAgAdd call ag#Ag('lgrepadd<bang>', <q-args>)$/;"	c
LAgHelp	bundle/ag.vim/plugin/ag.vim	/^command! -bang -nargs=* -complete=help LAgHelp call ag#AgHelp('lgrep<bang>',<q-args>)$/;"	c
LastIndexOfDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LastIndexOfDelim(delim, str)$/;"	f
Left	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Left(...)$/;"	f
LeftMostIndx	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LeftMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
LegacyCommandEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:LegacyCommandEdit(cmd,name,target,prefix,suffix)$/;"	f
LoadClasspathFromConfigFile	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:LoadClasspathFromConfigFile()$/;"	f
Log	bundle/vim-rails/autoload/rails.vim	/^function! s:Log(bang,arg)$/;"	f
MKFILES	bundle/html5.vim/Makefile	/^MKFILES=Makefile `ls -1 | grep '.mk$$'`$/;"	m
MakeSpace	bundle/Align/autoload/Align.vim	/^fun! s:MakeSpace(spacecnt)$/;"	f
Map	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Map() "{{{$/;"	f
MapNorms	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapNorms()$/;"	f
MapSpecs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapSpecs()$/;"	f
MarkToOpen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MarkToOpen()$/;"	f
Match	bundle/vim-ruby/indent/ruby.vim	/^function s:Match(lnum, regex)$/;"	f
MatchIt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchIt(items, pat, limit, exc)$/;"	f
MatchLast	bundle/vim-ruby/indent/ruby.vim	/^function s:MatchLast(lnum, regex)$/;"	f
MatchedItems	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchedItems(items, pat, limit)$/;"	f
MavenOutputDirectory	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:MavenOutputDirectory()$/;"	f
MaxLookback	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
MenuController.New	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Multipart	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Multipart()$/;"	f
NAME	bundle/html5.vim/Makefile	/^NAME=`basename \\`pwd\\``$/;"	m
NERDComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function! NERDComment(mode, type) range$/;"	f
NERDCommenter	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^augroup NERDCommenter$/;"	a
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeAddKeyMap	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddSubmenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeClose	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call nerdtree#closeTreeIfOpen()$/;"	c
NERDTreeCopyNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFind	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call nerdtree#findAndRevealPath()$/;"	c
NERDTreeFocus	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeHijackNetrw	bundle/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMoveNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeToggle	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.TogglePrimary('<args>')$/;"	c
Navcommand	bundle/vim-rails/autoload/rails.vim	/^function! s:Navcommand(bang,...)$/;"	f
NeoComplCacheCachingBuffer	bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheCachingBuffer$/;"	c
NeoComplCacheCachingDictionary	bundle/neocomplcache/plugin/neocomplcache/dictionary_complete.vim	/^      \\ NeoComplCacheCachingDictionary$/;"	c
NeoComplCacheCachingInclude	bundle/neocomplcache/plugin/neocomplcache/include_complete.vim	/^command! -nargs=? -complete=buffer NeoComplCacheCachingInclude$/;"	c
NeoComplCacheCachingSyntax	bundle/neocomplcache/plugin/neocomplcache/syntax_complete.vim	/^      \\ NeoComplCacheCachingSyntax$/;"	c
NeoComplCacheCachingTags	bundle/neocomplcache/plugin/neocomplcache/tags_complete.vim	/^      \\ NeoComplCacheCachingTags$/;"	c
NeoComplCacheClean	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheClean$/;"	c
NeoComplCacheDisable	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheDisable$/;"	c
NeoComplCacheDisableCaching	bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheDisableCaching$/;"	c
NeoComplCacheEnable	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheEnable$/;"	c
NeoComplCacheEnableCaching	bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheEnableCaching$/;"	c
NeoComplCacheLock	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheLock$/;"	c
NeoComplCacheLockSource	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=1 -bar NeoComplCacheLockSource$/;"	c
NeoComplCacheOutputKeyword	bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheOutputKeyword$/;"	c
NeoComplCachePrintSource	bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCachePrintSource$/;"	c
NeoComplCacheSetFileType	bundle/neocomplcache/plugin/neocomplcache.vim	/^  command! -nargs=1 -bar -complete=filetype NeoComplCacheSetFileType$/;"	c
NeoComplCacheSetFileType	bundle/neocomplcache/plugin/neocomplcache.vim	/^  command! -nargs=1 -bar NeoComplCacheSetFileType$/;"	c
NeoComplCacheToggle	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheToggle$/;"	c
NeoComplCacheUnlock	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheUnlock$/;"	c
NeoComplCacheUnlockSource	bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=1 -bar NeoComplCacheUnlockSource$/;"	c
NeoSnippetEdit	bundle/neosnippet/plugin/neosnippet.vim	/^      \\ NeoSnippetEdit$/;"	c
NeoSnippetMakeCache	bundle/neosnippet/plugin/neosnippet.vim	/^      \\ NeoSnippetMakeCache$/;"	c
NeoSnippetSource	bundle/neosnippet/plugin/neosnippet.vim	/^      \\ NeoSnippetSource$/;"	c
NerdEcho	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NerdEcho(msg, typeOfMsg)$/;"	f
NoAutoClose	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:NoAutoClose() "{{{$/;"	f
NumLinesInBuf	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumLinesInBuf()$/;"	f
NumberOfLeadingTabs	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumberOfLeadingTabs(s)$/;"	f
OSSupportsShellpipeHack	bundle/syntastic/plugin/syntastic.vim	/^function! s:OSSupportsShellpipeHack()$/;"	f
Open	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Open()$/;"	f
OpenMulti	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenMulti(...)$/;"	f
OpenNoMarks	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenNoMarks(md, line)$/;"	f
Opener.New	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._checkToCloseTree	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._gotoTargetWin	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._newSplit	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
PLUGIN	bundle/delimitMate/Makefile	/^PLUGIN=$(shell basename "$$PWD")$/;"	m
PWD	bundle/html5.vim/Makefile	/^PWD=`pwd`$/;"	m
Path.AbsolutePathFor	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._ignorePatternMatches	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.delete	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortOrderIndex	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PlaceDelimitersAndInsBetween	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:PlaceDelimitersAndInsBetween()$/;"	f
PrevNonBlankNonString	bundle/vim-ruby/indent/ruby.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
Preview	bundle/vim-rails/autoload/rails.vim	/^function! s:Preview(bang, lnum, uri) abort$/;"	f
PrtAdd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtAdd(char)$/;"	f
PrtBS	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtBS()$/;"	f
PrtClear	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClear()$/;"	f
PrtClearCache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClearCache()$/;"	f
PrtCurEnd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurEnd()$/;"	f
PrtCurLeft	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurLeft()$/;"	f
PrtCurRight	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurRight()$/;"	f
PrtCurStart	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurStart()$/;"	f
PrtDelete	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDelete()$/;"	f
PrtDeleteEnt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteEnt()$/;"	f
PrtDeleteMRU	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteMRU()$/;"	f
PrtDeleteWord	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteWord()$/;"	f
PrtExit	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExit()$/;"	f
PrtExpandDir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExpandDir()$/;"	f
PrtFocusMap	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtFocusMap(char)$/;"	f
PrtHistory	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtHistory(...)$/;"	f
PrtInsert	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtInsert(...)$/;"	f
PrtSelectJump	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectJump(char)$/;"	f
PrtSelectMove	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectMove(dir)$/;"	f
PrtSwitcher	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSwitcher()$/;"	f
QArgSplitter	bundle/Align/autoload/Align.vim	/^fun! s:QArgSplitter(qarg)$/;"	f
QArgSplitter	bundle/Align/plugin/cecutil.vim	/^fun! QArgSplitter(qarg)$/;"	f
QuitPreHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:QuitPreHook()$/;"	f
README_FILES	bundle/html5.vim/Makefile	/^README_FILES=`ls -1 | grep -i readme`$/;"	m
RECORD_FILE	bundle/html5.vim/Makefile	/^RECORD_FILE=.record$/;"	m
RECORD_SCRIPT	bundle/html5.vim/Makefile	/^RECORD_SCRIPT=.mkrecord$/;"	m
REF	bundle/vim-coffee-script/Makefile	/^REF = HEAD$/;"	m
RM	bundle/Align/plugin/cecutil.vim	/^com! -bar -nargs=1 RM	call RestoreMark(<q-args>)$/;"	c
RWP	bundle/Align/plugin/cecutil.vim	/^com! -bar -nargs=? RWP	call RestoreWinPosn(<args>)$/;"	c
Rails	bundle/vim-rails/plugin/rails.vim	/^command! -bar -bang -nargs=* -complete=dir Rails :if s:autoload()|execute rails#new_app_command(<bang>0,<f-args>)|endif$/;"	c
RailsBufInit	bundle/vim-rails/autoload/rails.vim	/^function! RailsBufInit(path)$/;"	f
RailsFile	bundle/vim-rails/autoload/rails.vim	/^function! RailsFile()$/;"	f
RailsFilePath	bundle/vim-rails/autoload/rails.vim	/^function! RailsFilePath()$/;"	f
RailsFileType	bundle/vim-rails/autoload/rails.vim	/^function! RailsFileType()$/;"	f
RailsFind	bundle/vim-rails/autoload/rails.vim	/^function! s:RailsFind()$/;"	f
RailsIncludeexpr	bundle/vim-rails/autoload/rails.vim	/^function! RailsIncludeexpr()$/;"	f
RailsIncludefind	bundle/vim-rails/autoload/rails.vim	/^function! s:RailsIncludefind(str,...)$/;"	f
RailsNamedRoutes	bundle/vim-rails/autoload/rails.vim	/^function! RailsNamedRoutes()$/;"	f
RailsRevision	bundle/vim-rails/autoload/rails.vim	/^function! RailsRevision()$/;"	f
RailsRoot	bundle/vim-rails/autoload/rails.vim	/^function! RailsRoot()$/;"	f
Rake	bundle/vim-rails/autoload/rails.vim	/^function! s:Rake(bang,lnum,arg)$/;"	f
Redraw	bundle/syntastic/plugin/syntastic.vim	/^function! s:Redraw()$/;"	f
Refresh	bundle/vim-rails/autoload/rails.vim	/^function! s:Refresh(bang)$/;"	f
RefreshBuffer	bundle/vim-rails/autoload/rails.vim	/^function! s:RefreshBuffer()$/;"	f
RegHandler	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:RegHandler(regex, function, args)$/;"	f
Related	bundle/vim-rails/autoload/rails.vim	/^function! s:Related(cmd,line1,line2,count,...)$/;"	f
RemoveCarriageReturn	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveCarriageReturn(line)$/;"	f
RemoveDelimiters	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RemoveDelimiters(left, right, line)$/;"	f
RemoveDir	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveDir(dir)$/;"	f
Render	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Render(lines, pat)$/;"	f
RepeatLast	bundle/delimitMate/autoload/delimitMateTests.vim	/^	function! RepeatLast(name, output, ...) " {{{$/;"	f
ReplaceDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceDelims(toReplace1, toReplace2, replacor1, replacor2, str)$/;"	f
ReplaceLeftMostDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceLeftMostDelim(toReplace, replacor, str)$/;"	f
ReplaceRightMostDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceRightMostDelim(toReplace, replacor, str)$/;"	f
Reset	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Reset(args)$/;"	f
RestoreMark	bundle/Align/plugin/cecutil.vim	/^fun! RestoreMark(markname)$/;"	f
RestoreScreenState	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RestoreScreenState()$/;"	f
RestoreUserMaps	bundle/Align/plugin/cecutil.vim	/^fun! RestoreUserMaps(suffix)$/;"	f
RestoreUserOptions	bundle/Align/autoload/Align.vim	/^fun! s:RestoreUserOptions()$/;"	f
RestoreWinPosn	bundle/Align/plugin/cecutil.vim	/^fun! RestoreWinPosn(...)$/;"	f
Return	bundle/HTML-AutoCloseTag/ftplugin/html_autoclosetag.vim	/^fun s:Return()$/;"	f
Right	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Right(...)$/;"	f
RightMostIndx	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RightMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
RubyBalloonexpr	bundle/vim-ruby/ftplugin/ruby.vim	/^function! RubyBalloonexpr()$/;"	f
RubyCursorIdentifier	bundle/vim-ruby/ftplugin/ruby.vim	/^function! RubyCursorIdentifier()$/;"	f
RubyExtract	bundle/vim-rails/autoload/rails.vim	/^function! s:RubyExtract(bang, root, before, name) range abort$/;"	f
RunInNode	conf/settings.vim	/^    func! s:RunInNode()$/;"	f
SCRIPT	bundle/delimitMate/Makefile	/^SCRIPT=$(wildcard plugin\/*.vim)$/;"	m
SHELL	bundle/html5.vim/Makefile	/^SHELL=bash$/;"	m
SID	bundle/nerdtree/autoload/nerdtree.vim	/^function s:SID()$/;"	f
SID_PREFIX	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:SID_PREFIX() "{{{$/;"	f
SM	bundle/Align/plugin/cecutil.vim	/^com! -bar -nargs=1 SM	call SaveMark(<q-args>)$/;"	c
SWP	bundle/Align/plugin/cecutil.vim	/^com! -bar -nargs=0 SWP	call SaveWinPosn()$/;"	c
SaveClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveClasspath()$/;"	f
SaveMark	bundle/Align/plugin/cecutil.vim	/^fun! SaveMark(markname)$/;"	f
SaveScreenState	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SaveScreenState()$/;"	f
SaveUserMaps	bundle/Align/plugin/cecutil.vim	/^fun! SaveUserMaps(mapmode,maplead,mapchx,suffix)$/;"	f
SaveUserOptions	bundle/Align/autoload/Align.vim	/^fun! s:SaveUserOptions()$/;"	f
SaveWinPosn	bundle/Align/plugin/cecutil.vim	/^fun! SaveWinPosn(...)$/;"	f
SearchPair	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SearchPair(start, end)$/;"	f
Set	bundle/vim-rails/autoload/rails.vim	/^function! s:Set(bang,...)$/;"	f
SetBasePath	bundle/vim-rails/autoload/rails.vim	/^function! s:SetBasePath() abort$/;"	f
SetDefTxt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetDefTxt()$/;"	f
SetMakePrg	bundle/vim-coffee-script/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
SetUpForNewFiletype	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SetUpForNewFiletype(filetype, forceReset)$/;"	f
SetWD	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetWD(args)$/;"	f
ShouldSkip	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
ShowLocList	bundle/syntastic/plugin/syntastic.vim	/^function! s:ShowLocList()$/;"	f
SkipExpr	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
SkipFile	bundle/syntastic/plugin/syntastic.vim	/^function! s:SkipFile()$/;"	f
SlimrbVersion	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! s:SlimrbVersion()$/;"	f
SmartSearch	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
SnippetsIndent	bundle/neosnippet/indent/snippet.vim	/^function! SnippetsIndent() "{{{$/;"	f
SpecInputs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SpecInputs(str)$/;"	f
SplitPattern	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SplitPattern(str)$/;"	f
Strlen	bundle/Align/autoload/Align.vim	/^fun! s:Strlen(x)$/;"	f
Support	bundle/vim-ruby/spec/spec_helper.rb	/^module Support$/;"	m
SwapOutterMultiPartDelimsForPlaceHolders	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterMultiPartDelimsForPlaceHolders(line)$/;"	f
SwapOutterPlaceHoldersForMultiPartDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterPlaceHoldersForMultiPartDelims(line)$/;"	f
SwitchToAlternativeDelimiters	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwitchToAlternativeDelimiters(printMsgs)$/;"	f
SyntasticAddToErrors	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticAddToErrors(errors, options)$/;"	f
SyntasticAutoloclistNotifier.AutoToggle	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist)$/;"	f
SyntasticAutoloclistNotifier.New	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New()$/;"	f
SyntasticAutoloclistNotifier.refresh	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist)$/;"	f
SyntasticBalloonsExprNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! SyntasticBalloonsExprNotifier()$/;"	f
SyntasticBalloonsNotifier.New	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.New()$/;"	f
SyntasticBalloonsNotifier.enabled	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled()$/;"	f
SyntasticBalloonsNotifier.refresh	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist)$/;"	f
SyntasticBalloonsNotifier.reset	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.reset(loclist)$/;"	f
SyntasticCheck	bundle/syntastic/plugin/syntastic.vim	/^command! -nargs=? -complete=custom,s:CompleteCheckerName SyntasticCheck call s:UpdateErrors(0, <f-args>) <bar> call s:Redraw()$/;"	c
SyntasticChecker.New	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.New(args)$/;"	f
SyntasticChecker._populateHighlightRegexes	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(list)$/;"	f
SyntasticChecker.getFiletype	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getFiletype()$/;"	f
SyntasticChecker.getHighlightRegexFor	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getHighlightRegexFor(error)$/;"	f
SyntasticChecker.getLocList	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocList()$/;"	f
SyntasticChecker.getName	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getName()$/;"	f
SyntasticChecker.isAvailable	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isAvailable()$/;"	f
SyntasticCursorNotifier.New	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.New()$/;"	f
SyntasticCursorNotifier.enabled	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.enabled()$/;"	f
SyntasticCursorNotifier.refresh	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist)$/;"	f
SyntasticCursorNotifier.reset	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist)$/;"	f
SyntasticHighlightingNotifier.New	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New()$/;"	f
SyntasticHighlightingNotifier.enabled	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled()$/;"	f
SyntasticHighlightingNotifier.refresh	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist)$/;"	f
SyntasticHighlightingNotifier.reset	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist)$/;"	f
SyntasticInfo	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticInfo call s:registry.echoInfoFor(s:CurrentFiletypes())$/;"	c
SyntasticJavacEditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticLoclist.New	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist)$/;"	f
SyntasticLoclist.current	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.current()$/;"	f
SyntasticLoclist.errors	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.errors()$/;"	f
SyntasticLoclist.extend	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.extend(other)$/;"	f
SyntasticLoclist.filter	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filter(filters)$/;"	f
SyntasticLoclist.filteredRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filteredRaw()$/;"	f
SyntasticLoclist.getLength	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getLength()$/;"	f
SyntasticLoclist.getName	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getName()$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay()$/;"	f
SyntasticLoclist.isEmpty	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isEmpty()$/;"	f
SyntasticLoclist.messages	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.messages(buf)$/;"	f
SyntasticLoclist.quietWarnings	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.quietWarnings()$/;"	f
SyntasticLoclist.setName	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setName(name)$/;"	f
SyntasticLoclist.show	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.show()$/;"	f
SyntasticLoclist.toRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.toRaw()$/;"	f
SyntasticLoclist.warnings	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.warnings()$/;"	f
SyntasticLoclistHide	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclistHide()$/;"	f
SyntasticMake	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options)$/;"	f
SyntasticMakeprgBuilder.New	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.New(exe, args, fname, post_args, tail, filetype, subchecker)$/;"	f
SyntasticMakeprgBuilder._getOpt	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function g:SyntasticMakeprgBuilder._getOpt(name)$/;"	f
SyntasticMakeprgBuilder._optExists	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder._optExists(name)$/;"	f
SyntasticMakeprgBuilder._optName	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder._optName(name)$/;"	f
SyntasticMakeprgBuilder.args	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.args()$/;"	f
SyntasticMakeprgBuilder.exe	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.exe()$/;"	f
SyntasticMakeprgBuilder.fname	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.fname()$/;"	f
SyntasticMakeprgBuilder.makeprg	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.makeprg()$/;"	f
SyntasticMakeprgBuilder.post_args	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.post_args()$/;"	f
SyntasticMakeprgBuilder.tail	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.tail()$/;"	f
SyntasticModeMap.Instance	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.Instance()$/;"	f
SyntasticModeMap._initModeMapFromGlobalOpts	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._initModeMapFromGlobalOpts()$/;"	f
SyntasticModeMap._isOneFiletypeActive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes)$/;"	f
SyntasticModeMap._noFiletypesArePassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes)$/;"	f
SyntasticModeMap.allowsAutoChecking	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype)$/;"	f
SyntasticModeMap.echoMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.echoMode()$/;"	f
SyntasticModeMap.isPassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.isPassive()$/;"	f
SyntasticModeMap.toggleMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.toggleMode()$/;"	f
SyntasticNotifiers.Instance	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.Instance()$/;"	f
SyntasticNotifiers._initNotifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers._initNotifiers()$/;"	f
SyntasticNotifiers.refresh	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist)$/;"	f
SyntasticNotifiers.reset	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist)$/;"	f
SyntasticRefreshCursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticRefreshCursor()$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args)$/;"	f
SyntasticRegistry.Instance	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.Instance()$/;"	f
SyntasticRegistry._allCheckersFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._allCheckersFor(filetype)$/;"	f
SyntasticRegistry._filterCheckersByAvailability	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByAvailability(checkers)$/;"	f
SyntasticRegistry._filterCheckersByDefaultSettings	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByDefaultSettings(checkers, filetype)$/;"	f
SyntasticRegistry._filterCheckersByName	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByName(checkers, list)$/;"	f
SyntasticRegistry._filterCheckersByUserSettings	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByUserSettings(checkers, filetype)$/;"	f
SyntasticRegistry._haveLoadedCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._haveLoadedCheckers(filetype)$/;"	f
SyntasticRegistry._loadCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._loadCheckers(filetype)$/;"	f
SyntasticRegistry._userHasFiletypeSettings	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._userHasFiletypeSettings(filetype)$/;"	f
SyntasticRegistry._validateUniqueName	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._validateUniqueName(checker) abort$/;"	f
SyntasticRegistry.availableCheckersFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.availableCheckersFor(ftalias)$/;"	f
SyntasticRegistry.checkable	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.checkable(ftalias)$/;"	f
SyntasticRegistry.echoInfoFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(ftalias_list)$/;"	f
SyntasticRegistry.getActiveCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getActiveCheckers(ftalias)$/;"	f
SyntasticRegistry.getChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getChecker(ftalias, name)$/;"	f
SyntasticRegistry.registerChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.registerChecker(checker) abort$/;"	f
SyntasticRegistryNormaliseFiletype	bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:SyntasticRegistryNormaliseFiletype(ftalias)$/;"	f
SyntasticSignsNotifier.New	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.New()$/;"	f
SyntasticSignsNotifier._bufSignIds	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds()$/;"	f
SyntasticSignsNotifier._removeSigns	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids)$/;"	f
SyntasticSignsNotifier._setup	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._setup()$/;"	f
SyntasticSignsNotifier._signErrors	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist)$/;"	f
SyntasticSignsNotifier.enabled	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.enabled()$/;"	f
SyntasticSignsNotifier.refresh	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist)$/;"	f
SyntasticStatuslineFlag	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag()$/;"	f
SyntasticToggleMode	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticToggleMode call s:ToggleMode()$/;"	c
SyntaxCheckers_ada_gcc_GetLocList	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList()$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable()$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList()$/;"	f
SyntaxCheckers_applescript_osacompile_IsAvailable	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_IsAvailable()$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList()$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function SyntaxCheckers_c_checkpatch_IsAvailable()$/;"	f
SyntaxCheckers_c_gcc_GetLocList	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList()$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable()$/;"	f
SyntaxCheckers_c_make_GetLocList	bundle/syntastic/syntax_checkers/c/make.vim	/^function! SyntaxCheckers_c_make_GetLocList()$/;"	f
SyntaxCheckers_c_make_IsAvailable	bundle/syntastic/syntax_checkers/c/make.vim	/^function SyntaxCheckers_c_make_IsAvailable()$/;"	f
SyntaxCheckers_c_oclint_GetLocList	bundle/syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_GetLocList()$/;"	f
SyntaxCheckers_c_oclint_IsAvailable	bundle/syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_IsAvailable()$/;"	f
SyntaxCheckers_c_sparse_GetLocList	bundle/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList()$/;"	f
SyntaxCheckers_c_sparse_IsAvailable	bundle/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_IsAvailable()$/;"	f
SyntaxCheckers_c_splint_GetLocList	bundle/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList()$/;"	f
SyntaxCheckers_c_splint_IsAvailable	bundle/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_IsAvailable()$/;"	f
SyntaxCheckers_c_ycm_GetLocList	bundle/syntastic/syntax_checkers/c/ycm.vim	/^function! SyntaxCheckers_c_ycm_GetLocList()$/;"	f
SyntaxCheckers_c_ycm_IsAvailable	bundle/syntastic/syntax_checkers/c/ycm.vim	/^function! SyntaxCheckers_c_ycm_IsAvailable()$/;"	f
SyntaxCheckers_co_coco_GetLocList	bundle/syntastic/syntax_checkers/co/coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList()$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList()$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable()$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList()$/;"	f
SyntaxCheckers_coffee_coffeelint_IsAvailable	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_IsAvailable()$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList()$/;"	f
SyntaxCheckers_coq_coqtop_IsAvailable	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_IsAvailable()$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList()$/;"	f
SyntaxCheckers_cpp_cpplint_IsAvailable	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_IsAvailable()$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList()$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable()$/;"	f
SyntaxCheckers_cpp_oclint_GetLocList	bundle/syntastic/syntax_checkers/cpp/oclint.vim	/^function! SyntaxCheckers_cpp_oclint_GetLocList()$/;"	f
SyntaxCheckers_cpp_oclint_IsAvailable	bundle/syntastic/syntax_checkers/cpp/oclint.vim	/^function! SyntaxCheckers_cpp_oclint_IsAvailable()$/;"	f
SyntaxCheckers_cpp_ycm_GetLocList	bundle/syntastic/syntax_checkers/cpp/ycm.vim	/^function! SyntaxCheckers_cpp_ycm_GetLocList()$/;"	f
SyntaxCheckers_cpp_ycm_IsAvailable	bundle/syntastic/syntax_checkers/cpp/ycm.vim	/^function! SyntaxCheckers_cpp_ycm_IsAvailable()$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList()$/;"	f
SyntaxCheckers_cs_mcs_IsAvailable	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_IsAvailable()$/;"	f
SyntaxCheckers_css_csslint_GetLocList	bundle/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList()$/;"	f
SyntaxCheckers_css_csslint_IsAvailable	bundle/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_IsAvailable()$/;"	f
SyntaxCheckers_css_phpcs_GetLocList	bundle/syntastic/syntax_checkers/css/phpcs.vim	/^function! SyntaxCheckers_css_phpcs_GetLocList()$/;"	f
SyntaxCheckers_css_phpcs_IsAvailable	bundle/syntastic/syntax_checkers/css/phpcs.vim	/^function! SyntaxCheckers_css_phpcs_IsAvailable()$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList()$/;"	f
SyntaxCheckers_css_prettycss_IsAvailable	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_IsAvailable()$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList()$/;"	f
SyntaxCheckers_cucumber_cucumber_IsAvailable	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_IsAvailable()$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList()$/;"	f
SyntaxCheckers_cuda_nvcc_IsAvailable	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_IsAvailable()$/;"	f
SyntaxCheckers_d_dmd_GetLocList	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList()$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable()$/;"	f
SyntaxCheckers_dart_dart_analyzer_GetHighlightRegex	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^function! SyntaxCheckers_dart_dart_analyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dart_analyzer_GetLocList	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^function! SyntaxCheckers_dart_dart_analyzer_GetLocList()$/;"	f
SyntaxCheckers_dart_dart_analyzer_IsAvailable	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^function! SyntaxCheckers_dart_dart_analyzer_IsAvailable()$/;"	f
SyntaxCheckers_docbk_xmllint_GetLocList	bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^function! SyntaxCheckers_docbk_xmllint_GetLocList()$/;"	f
SyntaxCheckers_docbk_xmllint_IsAvailable	bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^function! SyntaxCheckers_docbk_xmllint_IsAvailable()$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList()$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable()$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList()$/;"	f
SyntaxCheckers_erlang_escript_IsAvailable	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^function! SyntaxCheckers_erlang_escript_IsAvailable()$/;"	f
SyntaxCheckers_eruby_erb_GetLocList	bundle/syntastic/syntax_checkers/eruby/erb.vim	/^function! SyntaxCheckers_eruby_erb_GetLocList()$/;"	f
SyntaxCheckers_eruby_erb_IsAvailable	bundle/syntastic/syntax_checkers/eruby/erb.vim	/^function! SyntaxCheckers_eruby_erb_IsAvailable()$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList()$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable()$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList()$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable()$/;"	f
SyntaxCheckers_gentoo_metadata_xmllint_GetLocList	bundle/syntastic/syntax_checkers/gentoo_metadata/xmllint.vim	/^function! SyntaxCheckers_gentoo_metadata_xmllint_GetLocList()$/;"	f
SyntaxCheckers_gentoo_metadata_xmllint_IsAvailable	bundle/syntastic/syntax_checkers/gentoo_metadata/xmllint.vim	/^function! SyntaxCheckers_gentoo_metadata_xmllint_IsAvailable()$/;"	f
SyntaxCheckers_go_go_GetLocList	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_GetLocList()$/;"	f
SyntaxCheckers_go_go_IsAvailable	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_IsAvailable()$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList()$/;"	f
SyntaxCheckers_go_gofmt_IsAvailable	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_IsAvailable()$/;"	f
SyntaxCheckers_go_golint_GetLocList	bundle/syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_GetLocList()$/;"	f
SyntaxCheckers_go_golint_IsAvailable	bundle/syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_IsAvailable()$/;"	f
SyntaxCheckers_go_govet_GetLocList	bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList()$/;"	f
SyntaxCheckers_go_govet_IsAvailable	bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_IsAvailable()$/;"	f
SyntaxCheckers_haml_haml_GetLocList	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList()$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable()$/;"	f
SyntaxCheckers_haskell_ghc_mod_GetLocList	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_GetLocList()$/;"	f
SyntaxCheckers_haskell_ghc_mod_IsAvailable	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_IsAvailable()$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList()$/;"	f
SyntaxCheckers_haskell_hdevtools_IsAvailable	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_IsAvailable()$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList()$/;"	f
SyntaxCheckers_haxe_haxe_IsAvailable	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_IsAvailable()$/;"	f
SyntaxCheckers_html_tidy_GetLocList	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList()$/;"	f
SyntaxCheckers_html_tidy_IsAvailable	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_IsAvailable()$/;"	f
SyntaxCheckers_html_validator_GetLocList	bundle/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList()$/;"	f
SyntaxCheckers_html_validator_IsAvailable	bundle/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_IsAvailable()$/;"	f
SyntaxCheckers_html_w3_GetLocList	bundle/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList()$/;"	f
SyntaxCheckers_html_w3_IsAvailable	bundle/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_IsAvailable()$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList()$/;"	f
SyntaxCheckers_java_checkstyle_IsAvailable	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_IsAvailable()$/;"	f
SyntaxCheckers_java_javac_GetLocList	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList()$/;"	f
SyntaxCheckers_java_javac_IsAvailable	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable()$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList()$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable()$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList()$/;"	f
SyntaxCheckers_javascript_gjslint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_IsAvailable()$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList()$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable()$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList()$/;"	f
SyntaxCheckers_javascript_jsl_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_IsAvailable()$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList()$/;"	f
SyntaxCheckers_javascript_jslint_HighlightTerm	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_HighlightTerm(error)$/;"	f
SyntaxCheckers_javascript_jslint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_IsAvailable()$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList()$/;"	f
SyntaxCheckers_json_jsonlint_IsAvailable	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_IsAvailable()$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList()$/;"	f
SyntaxCheckers_json_jsonval_IsAvailable	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_IsAvailable()$/;"	f
SyntaxCheckers_less_lessc_GetLocList	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList()$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable()$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList()$/;"	f
SyntaxCheckers_lisp_clisp_IsAvailable	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_IsAvailable()$/;"	f
SyntaxCheckers_llvm_llvm_GetLocList	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_GetLocList()$/;"	f
SyntaxCheckers_llvm_llvm_IsAvailable	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_IsAvailable()$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList()$/;"	f
SyntaxCheckers_lua_luac_IsAvailable	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_IsAvailable()$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList()$/;"	f
SyntaxCheckers_matlab_mlint_IsAvailable	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_IsAvailable()$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList()$/;"	f
SyntaxCheckers_nasm_nasm_IsAvailable	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_IsAvailable()$/;"	f
SyntaxCheckers_nroff_mandoc_GetLocList	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_GetLocList()$/;"	f
SyntaxCheckers_nroff_mandoc_IsAvailable	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_IsAvailable()$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList()$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable()$/;"	f
SyntaxCheckers_objc_oclint_GetLocList	bundle/syntastic/syntax_checkers/objc/oclint.vim	/^function! SyntaxCheckers_objc_oclint_GetLocList()$/;"	f
SyntaxCheckers_objc_oclint_IsAvailable	bundle/syntastic/syntax_checkers/objc/oclint.vim	/^function! SyntaxCheckers_objc_oclint_IsAvailable()$/;"	f
SyntaxCheckers_objc_ycm_GetLocList	bundle/syntastic/syntax_checkers/objc/ycm.vim	/^function! SyntaxCheckers_objc_ycm_GetLocList()$/;"	f
SyntaxCheckers_objc_ycm_IsAvailable	bundle/syntastic/syntax_checkers/objc/ycm.vim	/^function! SyntaxCheckers_objc_ycm_IsAvailable()$/;"	f
SyntaxCheckers_objcpp_gcc_GetLocList	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_GetLocList()$/;"	f
SyntaxCheckers_objcpp_gcc_IsAvailable	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_IsAvailable()$/;"	f
SyntaxCheckers_objcpp_oclint_GetLocList	bundle/syntastic/syntax_checkers/objcpp/oclint.vim	/^function! SyntaxCheckers_objcpp_oclint_GetLocList()$/;"	f
SyntaxCheckers_objcpp_oclint_IsAvailable	bundle/syntastic/syntax_checkers/objcpp/oclint.vim	/^function! SyntaxCheckers_objcpp_oclint_IsAvailable()$/;"	f
SyntaxCheckers_objcpp_ycm_GetLocList	bundle/syntastic/syntax_checkers/objcpp/ycm.vim	/^function! SyntaxCheckers_objcpp_ycm_GetLocList()$/;"	f
SyntaxCheckers_objcpp_ycm_IsAvailable	bundle/syntastic/syntax_checkers/objcpp/ycm.vim	/^function! SyntaxCheckers_objcpp_ycm_IsAvailable()$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList()$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable()$/;"	f
SyntaxCheckers_perl_perl_GetLocList	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList()$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable()$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList()$/;"	f
SyntaxCheckers_perl_perlcritic_IsAvailable	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_IsAvailable()$/;"	f
SyntaxCheckers_perl_podchecker_GetLocList	bundle/syntastic/syntax_checkers/perl/podchecker.vim	/^function! SyntaxCheckers_perl_podchecker_GetLocList()$/;"	f
SyntaxCheckers_perl_podchecker_IsAvailable	bundle/syntastic/syntax_checkers/perl/podchecker.vim	/^function! SyntaxCheckers_perl_podchecker_IsAvailable()$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetLocList()$/;"	f
SyntaxCheckers_php_php_IsAvailable	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_IsAvailable()$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList()$/;"	f
SyntaxCheckers_php_phpcs_IsAvailable	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_IsAvailable()$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList()$/;"	f
SyntaxCheckers_php_phpmd_IsAvailable	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_IsAvailable()$/;"	f
SyntaxCheckers_pod_podchecker_GetLocList	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_GetLocList()$/;"	f
SyntaxCheckers_pod_podchecker_IsAvailable	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_IsAvailable()$/;"	f
SyntaxCheckers_puppet_puppet_GetLocList	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_GetLocList()$/;"	f
SyntaxCheckers_puppet_puppet_IsAvailable	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_IsAvailable()$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList()$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable()$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList()$/;"	f
SyntaxCheckers_python_flake8_IsAvailable	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_IsAvailable()$/;"	f
SyntaxCheckers_python_pep8_GetLocList	bundle/syntastic/syntax_checkers/python/pep8.vim	/^function! SyntaxCheckers_python_pep8_GetLocList()$/;"	f
SyntaxCheckers_python_pep8_IsAvailable	bundle/syntastic/syntax_checkers/python/pep8.vim	/^function! SyntaxCheckers_python_pep8_IsAvailable()$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList()$/;"	f
SyntaxCheckers_python_py3kwarn_IsAvailable	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_IsAvailable()$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList()$/;"	f
SyntaxCheckers_python_pyflakes_IsAvailable	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_IsAvailable()$/;"	f
SyntaxCheckers_python_pylint_GetLocList	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList()$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable()$/;"	f
SyntaxCheckers_python_python_GetLocList	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_GetLocList()$/;"	f
SyntaxCheckers_python_python_IsAvailable	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_IsAvailable()$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList()$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_IsAvailable	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_IsAvailable()$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList()$/;"	f
SyntaxCheckers_ruby_jruby_IsAvailable	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_IsAvailable()$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList()$/;"	f
SyntaxCheckers_ruby_macruby_IsAvailable	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_IsAvailable()$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList()$/;"	f
SyntaxCheckers_ruby_mri_IsAvailable	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_IsAvailable()$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList()$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable()$/;"	f
SyntaxCheckers_rust_rustc_GetLocList	bundle/syntastic/syntax_checkers/rust/rustc.vim	/^function! SyntaxCheckers_rust_rustc_GetLocList()$/;"	f
SyntaxCheckers_rust_rustc_IsAvailable	bundle/syntastic/syntax_checkers/rust/rustc.vim	/^function! SyntaxCheckers_rust_rustc_IsAvailable()$/;"	f
SyntaxCheckers_sass_sass_GetLocList	bundle/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList()$/;"	f
SyntaxCheckers_sass_sass_IsAvailable	bundle/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_IsAvailable()$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList()$/;"	f
SyntaxCheckers_scala_scalac_IsAvailable	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_IsAvailable()$/;"	f
SyntaxCheckers_scss_sass_GetLocList	bundle/syntastic/syntax_checkers/scss/sass.vim	/^function! SyntaxCheckers_scss_sass_GetLocList()$/;"	f
SyntaxCheckers_scss_sass_IsAvailable	bundle/syntastic/syntax_checkers/scss/sass.vim	/^function! SyntaxCheckers_scss_sass_IsAvailable()$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList()$/;"	f
SyntaxCheckers_sh_checkbashisms_IsAvailable	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_IsAvailable()$/;"	f
SyntaxCheckers_sh_sh_GetLocList	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList()$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable()$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList()$/;"	f
SyntaxCheckers_slim_slimrb_IsAvailable	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_IsAvailable()$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList()$/;"	f
SyntaxCheckers_tcl_nagelfar_IsAvailable	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_IsAvailable()$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList()$/;"	f
SyntaxCheckers_tex_chktex_IsAvailable	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_IsAvailable()$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList()$/;"	f
SyntaxCheckers_tex_lacheck_IsAvailable	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_IsAvailable()$/;"	f
SyntaxCheckers_text_atdtool_GetHighlightRegex	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_text_atdtool_GetLocList	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetLocList()$/;"	f
SyntaxCheckers_text_atdtool_IsAvailable	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_IsAvailable()$/;"	f
SyntaxCheckers_twig_twiglint_GetHighlightRegex	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList()$/;"	f
SyntaxCheckers_twig_twiglint_IsAvailable	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_IsAvailable()$/;"	f
SyntaxCheckers_typescript_tsc_GetLocList	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_GetLocList()$/;"	f
SyntaxCheckers_typescript_tsc_IsAvailable	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_IsAvailable()$/;"	f
SyntaxCheckers_vala_valac_GetHighlightRegex	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_vala_valac_GetLocList	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetLocList()$/;"	f
SyntaxCheckers_vala_valac_IsAvailable	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_IsAvailable()$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList()$/;"	f
SyntaxCheckers_vhdl_ghdl_IsAvailable	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_IsAvailable()$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList()$/;"	f
SyntaxCheckers_xhtml_tidy_IsAvailable	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_IsAvailable()$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList()$/;"	f
SyntaxCheckers_xml_xmllint_IsAvailable	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_IsAvailable()$/;"	f
SyntaxCheckers_xslt_xmllint_GetLocList	bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^function! SyntaxCheckers_xslt_xmllint_GetLocList()$/;"	f
SyntaxCheckers_xslt_xmllint_IsAvailable	bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^function! SyntaxCheckers_xslt_xmllint_IsAvailable()$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList()$/;"	f
SyntaxCheckers_yaml_jsyaml_IsAvailable	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_IsAvailable()$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList()$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_IsAvailable	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_IsAvailable()$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList()$/;"	f
SyntaxCheckers_zpt_zptlint_IsAvailable	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_IsAvailable()$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList()$/;"	f
SyntaxCheckers_zsh_zsh_IsAvailable	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_IsAvailable()$/;"	f
SyntaxName	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
TAR	bundle/html5.vim/Makefile	/^TAR=tar czvf$/;"	m
TESTS	bundle/delimitMate/Makefile	/^TESTS=$(wildcard autoload\/*Tests.vim)$/;"	m
TabSpace	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabSpace()$/;"	f
TabbedCol	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabbedCol(line, col)$/;"	f
TargetDirectory	bundle/vim-ruby/bin/vim-ruby-install.rb	/^class TargetDirectory$/;"	c
TargetDirectory	bundle/vim-ruby/bin/vim-ruby-install.rb	/^class TargetDirectory::Finder$/;"	c
TestMappingsDo	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:TestMappingsDo() "{{{$/;"	f
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
ToggleByFname	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleByFname()$/;"	f
ToggleFocus	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleFocus()$/;"	f
ToggleKeyLoop	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleKeyLoop()$/;"	f
ToggleMode	bundle/syntastic/plugin/syntastic.vim	/^function! s:ToggleMode()$/;"	f
ToggleRegex	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleRegex()$/;"	f
ToggleType	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleType(dir)$/;"	f
TreeDirNode.AbsoluteTreeRoot	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootLineNum	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
Type	bundle/delimitMate/autoload/delimitMateTests.vim	/^	function! Type(name, input, output, options, ...) " {{{$/;"	f
UnEsc	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UnEsc(str, escChar)$/;"	f
UncommentLineNormal	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLineNormal(line)$/;"	f
UncommentLines	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLines(topLine, bottomLine)$/;"	f
UncommentLinesNormal	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesNormal(topline, bottomline)$/;"	f
UncommentLinesSexy	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesSexy(topline, bottomline)$/;"	f
Unmap	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Unmap() " {{{$/;"	f
UntabbedCol	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UntabbedCol(line, col)$/;"	f
Update	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Update(str)$/;"	f
UpdateErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(auto_invoked, ...)$/;"	f
UpdateMakePrg	bundle/vim-coffee-script/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
Usage	bundle/syntastic/syntax_checkers/perl/efm_perl.pl	/^Usage:$/;"	l
UserCmd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:UserCmd(lscmd)$/;"	f
VERSION	bundle/delimitMate/Makefile	/^VERSION=$(shell perl -ne 'if (\/\\*\\sCurrent\\srelease:\/) {s\/^\\s+(\\d+\\.\\S+)\\s.*$$\/\\1\/;print}' $(DOC))$/;"	m
VERSION	bundle/html5.vim/Makefile	/^VERSION=0.1$/;"	m
VERSION	bundle/html5.vim/config.mk	/^VERSION=0.26$/;"	m
VERSION	bundle/syntastic/syntax_checkers/perl/efm_perl.pl	/^use constant VERSION => 0.2;$/;"	c
VERSION	bundle/vim-coffee-script/Makefile	/^VERSION = $(shell git describe --always $(REF))$/;"	m
VIM	bundle/delimitMate/Makefile	/^VIM=\/usr\/bin\/vim$/;"	m
VIMFOLDER	bundle/delimitMate/Makefile	/^VIMFOLDER=~\/.vim\/$/;"	m
VIMRUNTIME	bundle/html5.vim/Makefile	/^VIMRUNTIME=~\/.vim$/;"	m
VimRubyInstaller	bundle/vim-ruby/bin/vim-ruby-install.rb	/^class VimRubyInstaller$/;"	c
WGET_OPT	bundle/html5.vim/Makefile	/^WGET_OPT=-c -nv$/;"	m
WLR	bundle/Align/plugin/cecutil.vim	/^com! -bar -nargs=1 WLR	call s:WinLineRestore(<q-args>)$/;"	c
WinLineRestore	bundle/Align/plugin/cecutil.vim	/^fun! s:WinLineRestore(swwline)$/;"	f
X	bundle/vim-ruby/spec/indent/blocks_spec.rb	/^      module X$/;"	m
Y	conf/mappings.vim	/^nnoremap Y y\$$/;"	m
Zen	bundle/ZenCoding.vim/plugin/zencoding.vim	/^command! -nargs=1 Zen call zencoding#expandAbbr(4, <q-args>)$/;"	c
[M	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','b','n')<CR>$/;"	m
[[	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[]	bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def [](path)$/;"	f	class:VimRubyInstaller.BackupDir
[]	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def [](path)$/;"	f	class:TargetDirectory
[]	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[m	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','b','n')<CR>$/;"	m
]M	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','','n')<CR>$/;"	m
][	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]m	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','','n')<CR>$/;"	m
_	bundle/vim-expand-region/plugin/expand_region.vim	/^  nmap _ <Plug>(expand_region_shrink)$/;"	m
_	bundle/vim-expand-region/plugin/expand_region.vim	/^  vmap _ <Plug>(expand_region_shrink)$/;"	m
_build_module	bundle/neocomplcache/autoload/vital/_a477c91.vim	/^function! s:_build_module(sid)$/;"	f
_build_module	bundle/neosnippet/autoload/vital/_08a462e.vim	/^function! s:_build_module(sid)$/;"	f
_compare	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:_compare(a, b)$/;"	f
_encode_name	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^function! s:_encode_name(cache_dir, filename)$/;"	f
_ensure_directory_exists	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _ensure_directory_exists(path)$/;"	f	class:FileWriter
_get_module_path	bundle/neocomplcache/autoload/vital/_a477c91.vim	/^function! s:_get_module_path(name)$/;"	f
_import	bundle/neocomplcache/autoload/vital/_a477c91.vim	/^function! s:_import(name, scripts)$/;"	f
_import	bundle/neosnippet/autoload/vital/_08a462e.vim	/^function! s:_import(name, scripts)$/;"	f
_potential_directories	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _potential_directories$/;"	f	class:TargetDirectory
_redir	bundle/neocomplcache/autoload/vital/_a477c91.vim	/^function! s:_redir(cmd)$/;"	f
_redir	bundle/neosnippet/autoload/vital/_08a462e.vim	/^function! s:_redir(cmd)$/;"	f
_same_contents?	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _same_contents?(p1, p2)$/;"	f	class:VimRubyInstaller
_scripts	bundle/neocomplcache/autoload/vital/_a477c91.vim	/^function! s:_scripts()$/;"	f
_scripts	bundle/neosnippet/autoload/vital/_08a462e.vim	/^function! s:_scripts()$/;"	f
_split_by_wcswidth	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:_split_by_wcswidth(body, x)$/;"	f
_split_by_wcswidth_once	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:_split_by_wcswidth_once(body, x)$/;"	f
_unify_path	bundle/neocomplcache/autoload/vital/_a477c91.vim	/^  function! s:_unify_path(path)$/;"	f
_unify_path	bundle/neosnippet/autoload/vital/_08a462e.vim	/^  function! s:_unify_path(path)$/;"	f
_valid_vim_ruby_dir	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env._valid_vim_ruby_dir(dir)$/;"	F	class:Env
_vim_system_dir	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _vim_system_dir$/;"	f	class:TargetDirectory
_vim_user_dir	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _vim_user_dir$/;"	f	class:TargetDirectory
_vital_depends	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:_vital_depends()$/;"	f
_vital_loaded	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:_vital_loaded(V)$/;"	f
_wcwidth	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^  function! s:_wcwidth(ucs)$/;"	f
_wcwidth	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^  function! s:_wcwidth(ucs)$/;"	f
aM	bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
abolish_l	bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_l(word)$/;"	f
abolish_setup	bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_setup()$/;"	f
abolish_t	bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_t(word)$/;"	f
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role = {}$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['composite'] = abstract_role['widget'] + ['aria-activedescendant']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['input'] = abstract_role['widget']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['landmark'] = role_attributes['region']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['range'] = abstract_role['input'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['roletype'] = ['aria-atomic', 'aria-busy', 'aria-controls', 'aria-describedby', 'aria-disabled', 'aria-dropeffect', 'aria-flowto', 'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-label', 'aria-labelledby', 'aria-live', 'aria-owns', 'aria-relevant']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['section'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['sectionhead'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['select'] = abstract_role['composite'] + role_attributes['group'] + abstract_role['input']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['structure'] = abstract_role['roletype']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['widget'] = abstract_role['roletype']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['window'] = abstract_role['roletype'] + ['aria-expanded']$/;"	v
abutton_dec	bundle/html5.vim/autoload/xml/html5.vim	/^let abutton_dec = 'details\\\\|embed\\\\|iframe\\\\|keygen\\\\|label\\\\|menu\\\\|select\\\\|textarea'$/;"	v
action_table.expand.func	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^function! s:action_table.expand.func(candidate) "{{{$/;"	f
action_table.preview.func	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^function! s:action_table.preview.func(candidates) "{{{$/;"	f
action_table.unite__new_candidate.func	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^function! s:action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
activateAll	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateAll()$/;"	f
activateBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateFileNode(node)$/;"	f
add_methods	bundle/vim-rails/autoload/rails.vim	/^function! s:add_methods(namespace, method_names)$/;"	f
add_snippet_attribute	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:add_snippet_attribute(snippets_file, line, linenr, snippet_dict) "{{{$/;"	f
addfilecmds	bundle/vim-rails/autoload/rails.vim	/^function! s:addfilecmds(type)$/;"	f
addtomrufs	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:addtomrufs(fname)$/;"	f
ag#Ag	bundle/ag.vim/autoload/ag.vim	/^function! ag#Ag(cmd, args)$/;"	f
ag#AgFromSearch	bundle/ag.vim/autoload/ag.vim	/^function! ag#AgFromSearch(cmd, args)$/;"	f
ag#AgHelp	bundle/ag.vim/autoload/ag.vim	/^function! ag#AgHelp(cmd,args)$/;"	f
ag#GetDocLocations	bundle/ag.vim/autoload/ag.vim	/^function! ag#GetDocLocations()$/;"	f
airline	bundle/vim-airline/plugin/airline.vim	/^augroup airline$/;"	a
all	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:all(f, xs)$/;"	f
am	bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
analyze_dictionary_variable_line	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_dictionary_variable_line(line, keyword_dict, var_name) "{{{$/;"	f
analyze_function_line	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_function_line(line, keyword_dict, prototype) "{{{$/;"	f
analyze_variable_line	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_variable_line(line, keyword_dict) "{{{$/;"	f
and	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:and(xs)$/;"	f
any	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:any(f, xs)$/;"	f
app_commands	bundle/vim-rails/autoload/rails.vim	/^function! s:app_commands() dict abort$/;"	f
app_dbext_settings	bundle/vim-rails/autoload/rails.vim	/^function! s:app_dbext_settings(environment) dict$/;"	f
app_default_locale	bundle/vim-rails/autoload/rails.vim	/^function! s:app_default_locale() dict abort$/;"	f
app_engines	bundle/vim-rails/autoload/rails.vim	/^function! s:app_engines() dict abort$/;"	f
app_environments	bundle/vim-rails/autoload/rails.vim	/^function! s:app_environments() dict$/;"	f
app_eval	bundle/vim-rails/autoload/rails.vim	/^function! s:app_eval(ruby,...) dict abort$/;"	f
app_execute_rails_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_execute_rails_command(cmd) dict abort$/;"	f
app_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_file(name) dict abort$/;"	f
app_find_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_find_file(name, ...) dict abort$/;"	f
app_gems	bundle/vim-rails/autoload/rails.vim	/^function! s:app_gems() dict abort$/;"	f
app_generator_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_generator_command(bang,...) dict$/;"	f
app_generators	bundle/vim-rails/autoload/rails.vim	/^function! s:app_generators() dict abort$/;"	f
app_has	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has(feature) dict$/;"	f
app_has_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has_file(file) dict$/;"	f
app_has_gem	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has_gem(gem) dict abort$/;"	f
app_has_path	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has_path(path) dict$/;"	f
app_lightweight_ruby_eval	bundle/vim-rails/autoload/rails.vim	/^function! s:app_lightweight_ruby_eval(ruby,...) dict abort$/;"	f
app_migration	bundle/vim-rails/autoload/rails.vim	/^function! s:app_migration(file) dict$/;"	f
app_named_route_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_named_route_file(route) dict$/;"	f
app_output_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_output_command(count, code) dict$/;"	f
app_path	bundle/vim-rails/autoload/rails.vim	/^function! s:app_path(...) dict$/;"	f
app_prepare_rails_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_prepare_rails_command(cmd) dict abort$/;"	f
app_projections	bundle/vim-rails/autoload/rails.vim	/^function! s:app_projections() dict abort$/;"	f
app_rake_tasks	bundle/vim-rails/autoload/rails.vim	/^function! s:app_rake_tasks() dict$/;"	f
app_relglob	bundle/vim-rails/autoload/rails.vim	/^function! s:app_relglob(path,glob,...) dict$/;"	f
app_route_names	bundle/vim-rails/autoload/rails.vim	/^function! s:app_route_names() dict$/;"	f
app_ruby_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_ruby_command(cmd) dict abort$/;"	f
app_ruby_script_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_ruby_script_command(cmd) dict abort$/;"	f
app_script_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_script_command(bang,...) dict$/;"	f
app_server_binding	bundle/vim-rails/autoload/rails.vim	/^function! s:app_server_binding() dict abort$/;"	f
app_server_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_server_command(bang,arg) dict$/;"	f
app_start_rails_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_start_rails_command(cmd, ...) dict abort$/;"	f
app_tags_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_tags_command() dict$/;"	f
app_test_suites	bundle/vim-rails/autoload/rails.vim	/^function! s:app_test_suites() dict$/;"	f
app_user_assertions	bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_assertions() dict$/;"	f
app_user_classes	bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_classes() dict$/;"	f
argmaps	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:argmaps(md, i)$/;"	f
args	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function s:args()$/;"	f
args	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function s:args()$/;"	f
aria_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, drag_and_drop_attributes)$/;"	v
aria_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, live_region_attributes)$/;"	v
aria_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, relationship_attributes)$/;"	v
aria_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = widget_attributes$/;"	v
aria_attributes_value	bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes_value = {$/;"	v
ask_user	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.ask_user(message)$/;"	F	class:Env
assert_correct_indenting	bundle/vim-ruby/spec/spec_helper.rb	/^  def assert_correct_indenting(string)$/;"	f	class:Support
async_load	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! s:async_load(argv, cache_dir, filename) "{{{$/;"	f
at	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:at(str)$/;"	f
attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, event_attributes_value)$/;"	v
attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, microdata_attributes_value)$/;"	v
attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, rdfa_attributes_value)$/;"	v
attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^let attributes_value = {$/;"	v
autocamelize	bundle/vim-rails/autoload/rails.vim	/^function! s:autocamelize(files,test)$/;"	f
autocmds	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:autocmds()$/;"	f
autoload	bundle/vim-rails/plugin/rails.vim	/^function! s:autoload(...)$/;"	f
b:browsefilter	bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:current_syntax	bundle/JavaScript-syntax/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	bundle/jQuery/syntax/jquery.vim	/^let b:current_syntax = 'jquery'$/;"	v
b:current_syntax	bundle/neosnippet/syntax/snippet.vim	/^let b:current_syntax = "snippet"$/;"	v
b:current_syntax	bundle/vim-coffee-script/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	bundle/vim-coffee-script/syntax/eco.vim	/^let b:current_syntax = 'eco'$/;"	v
b:current_syntax	bundle/vim-json/syntax/json.vim	/^let b:current_syntax = "json"$/;"	v
b:current_syntax	bundle/vim-markdown/syntax/markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:current_syntax	bundle/vim-ruby/syntax/eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	bundle/vim-ruby/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:did_ftplugin	bundle/vim-coffee-script/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	bundle/vim-ruby/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	bundle/vim-ruby/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	bundle/html5.vim/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	bundle/neosnippet/indent/snippet.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	bundle/vim-coffee-script/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	bundle/vim-ruby/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	bundle/vim-ruby/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^      let b:eco_subtype = b:current_syntax$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^      let b:eco_subtype = g:eco_default_subtype$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^    let b:eco_subtype = 'html'$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^    let b:eco_subtype = 'javascript'$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^    let b:eco_subtype = 'ruby'$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^    let b:eco_subtype = 'text'$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^    let b:eco_subtype = 'yaml'$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^    let b:eco_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eco\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^  let b:eco_subtype = matchstr(s:lines,'eco_subtype=\\zs\\w\\+')$/;"	v
b:eruby_nest_level	bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	bundle/vim-ruby/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:javascript_fold	bundle/JavaScript-syntax/syntax/javascript.vim	/^let b:javascript_fold='true'$/;"	v
b:mapped_auto_closetag	bundle/HTML-AutoCloseTag/ftplugin/html_autoclosetag.vim	/^let b:mapped_auto_closetag = 1$/;"	v
b:match_ignorecase	bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_skip	bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_words	bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:ruby_no_expensive	bundle/vim-ruby/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	bundle/vim-ruby/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:undo_ftplugin	bundle/neosnippet/ftplugin/snippet.vim	/^    let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	bundle/neosnippet/ftplugin/snippet.vim	/^let b:undo_ftplugin .= '$/;"	v
b:undo_ftplugin	bundle/vim-ruby/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	bundle/vim-ruby/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	bundle/vim-ruby/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< tags< kp<"$/;"	v
b:undo_indent	bundle/neosnippet/indent/snippet.vim	/^    let b:undo_indent = ''$/;"	v
b:undo_indent	bundle/neosnippet/indent/snippet.vim	/^let b:undo_indent .= '$/;"	v
backup	bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def backup(basedir, path)$/;"	f	class:VimRubyInstaller.BackupDir
bar	bundle/vim-ruby/spec/indent/continuations_spec.rb	/^      def bar($/;"	f
beep	bundle/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
body_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let body_attributes = {'onafterprint': [], 'onbeforeprint': [], 'onbeforeunload': [], 'onblur': [], 'onerror': [], 'onfocus': [], 'onhashchange': [], 'onload': [], 'onmessage': [], 'onoffline': [], 'ononline': [], 'onpopstate': [], 'onredo': [], 'onresize': [], 'onstorage': [], 'onundo': [], 'onunload': []}$/;"	v
body_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^let body_attributes = {}$/;"	v
break	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:break(f, xs)$/;"	f
buffer_app	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_app() dict abort$/;"	f
buffer_getline	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getline(...) dict abort$/;"	f
buffer_getvar	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getvar(varname) dict abort$/;"	f
buffer_lines	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_lines() dict abort$/;"	f
buffer_name	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_number	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_number() dict abort$/;"	f
buffer_path	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_setvar	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_setvar(varname, val) dict abort$/;"	f
buffer_type_name	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_type_name(...) dict abort$/;"	f
buffunc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buffunc(e)$/;"	f
buftab	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buftab(bufnr, md)$/;"	f
bufwins	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufwins(bufnr)$/;"	f
build_path	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:build_path(path)$/;"	f
buildpat	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buildpat(lst)$/;"	f
bundle.path	bundle/vundle/autoload/vundle/config.vim	/^func! s:bundle.path()$/;"	f
cache_clear	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_clear(...) dict$/;"	f
cache_get	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_get(...) dict$/;"	f
cache_has	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_has(key) dict$/;"	f
cache_needs	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_needs(key) dict$/;"	f
cache_set	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_set(key,value) dict$/;"	f
cachefile	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:cachefile()$/;"	f
caching	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:caching() "{{{$/;"	f
caching	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:caching() "{{{$/;"	f
caching_completion_from_dict	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_completion_from_dict(dict_name) "{{{$/;"	f
caching_current_buffer	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:caching_current_buffer(start, end) "{{{$/;"	f
caching_current_buffer	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:caching_current_buffer(start, end) "{{{$/;"	f
caching_current_files	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:caching_current_files() "{{{$/;"	f
caching_dictionary	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:caching_dictionary(filetype)$/;"	f
caching_from_dict	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_from_dict(dict_name, kind) "{{{$/;"	f
caching_from_syn	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:caching_from_syn(filetype) "{{{$/;"	f
caching_prototype_from_dict	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_prototype_from_dict(dict_name) "{{{$/;"	f
chCwd	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:chCwd(node)$/;"	f
chRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:chRoot(node)$/;"	f
changelist	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:changelist(bufnr)$/;"	f
changesurround	bundle/vim-surround/plugin/surround.vim	/^function! s:changesurround() " {{{1$/;"	f
char_range	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:char_range(from, to)$/;"	f
charset	bundle/html5.vim/autoload/xml/html5.vim	/^let charset = [$/;"	v
check_buffer	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:check_buffer(bufnumber, is_force) "{{{$/;"	f
check_cache	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_cache() "{{{$/;"	f
check_cache	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:check_cache() "{{{$/;"	f
check_changed_buffer	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_changed_buffer(bufnumber) "{{{$/;"	f
check_defined	bundle/vim-airline/plugin/airline.vim	/^function! s:check_defined(variable, default)$/;"	f
check_in_do_auto_complete	bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! s:check_in_do_auto_complete() "{{{$/;"	f
check_initialize	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:check_initialize() "{{{$/;"	f
check_old_cache	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^function! s:check_old_cache(cache_dir, filename)$/;"	f
check_recache	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_recache() "{{{$/;"	f
check_source	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_source() "{{{$/;"	f
checkbuf	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:checkbuf()$/;"	f
chknearby	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:chknearby(pat)$/;"	f
choices	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:choices(str, choices, func, args)$/;"	f
chop	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:chop(mrufs)$/;"	f
chop	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:chop(str) "{{{$/;"	f
clear	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:clear(list)$/;"	f
closeChildren	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:closeTreeWindow()$/;"	f
close_preview_window	bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! s:close_preview_window() "{{{$/;"	f
closematch	bundle/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
coffee_compiler	bundle/vim-coffee-script/compiler/coffee.vim	/^  let coffee_compiler = 'coffee'$/;"	v
coffee_compiler	bundle/vim-coffee-script/ftplugin/coffee.vim	/^  let coffee_compiler = 'coffee'$/;"	v
coffee_lint_options	bundle/vim-coffee-script/ftplugin/coffee.vim	/^  let coffee_lint_options = ''$/;"	v
coffee_linter	bundle/vim-coffee-script/ftplugin/coffee.vim	/^  let coffee_linter = 'coffeelint'$/;"	v
coffee_make_options	bundle/vim-coffee-script/compiler/coffee.vim	/^  let coffee_make_options = ''$/;"	v
color_efm	bundle/vim-rails/autoload/rails.vim	/^function! s:color_efm(pre, before, after)$/;"	f
combine_projections	bundle/vim-rails/autoload/rails.vim	/^function! s:combine_projections(dest, src, ...) abort$/;"	f
common_head	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:common_head(strs)$/;"	f
compare	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_length.vim	/^function! s:compare(i1, i2)$/;"	f
compare	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_rank.vim	/^function! s:compare(i1, i2)$/;"	f
compareErrorItems	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! s:compareErrorItems(a, b)$/;"	f
compare_pos	bundle/neocomplcache/autoload/neocomplcache/context_filetype.vim	/^function! s:compare_pos(i1, i2)$/;"	f
compare_pos	bundle/vim-expand-region/autoload/expand_region.vim	/^function! s:compare_pos(l, r)$/;"	f
compare_source_rank	bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! s:compare_source_rank(i1, i2)$/;"	f
comparent	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comparent(...)$/;"	f
compfnlen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compfnlen(...)$/;"	f
compile	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^compile(FileName, LibDirs) ->$/;"	f
completion_filter	bundle/vim-rails/autoload/rails.vim	/^function! s:completion_filter(results,A)$/;"	f
compmatlen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmatlen(...)$/;"	f
compmreb	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmreb(...)$/;"	f
compmref	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmref(...)$/;"	f
comptime	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comptime(...)$/;"	f
compute_candidates	bundle/vim-expand-region/autoload/expand_region.vim	/^function! s:compute_candidates(cursor_pos)$/;"	f
compval	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compval(...)$/;"	f
compval	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:compval(...)$/;"	f
concat	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:concat(list)$/;"	f
contents	bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def contents$/;"	f	class:VimRubyInstaller.BackupDir
controller	bundle/vim-rails/autoload/rails.vim	/^function! s:controller(...)$/;"	f
controllerEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:controllerEdit(cmd,...)$/;"	f
controllerList	bundle/vim-rails/autoload/rails.vim	/^function! s:controllerList(A,L,P)$/;"	f
converter.filter	bundle/neocomplcache/autoload/neocomplcache/filters/converter_abbr.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	bundle/neocomplcache/autoload/neocomplcache/filters/converter_case.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	bundle/neocomplcache/autoload/neocomplcache/filters/converter_delimiter.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	bundle/neocomplcache/autoload/neocomplcache/filters/converter_nothing.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	bundle/neocomplcache/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^function! s:converter.filter(context) "{{{$/;"	f
copy	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def copy(path)$/;"	f	class:TargetDirectory
copy	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def copy(source_path, target_path)$/;"	f	class:FileWriter
core_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^let core_attributes = {'accesskey': [], 'class': [], 'contenteditable': ['true', 'false', ''], 'contextmenu': [], 'dir': ['ltr', 'rtl'], 'draggable': ['true', 'false'], 'hidden': ['hidden', ''], 'id': [], 'lang': lang_tag, 'spellcheck': ['true', 'false', ''], 'style': [], 'tabindex': [], 'title': []}$/;"	v
create_changelog	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:create_changelog() abort$/;"	f
create_hash	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^function! s:create_hash(dir, str)$/;"	f
cs	bundle/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
ctrlp#acceptfile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#acceptfile(mode, line, ...)$/;"	f
ctrlp#bookmarkdir#accept	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#accept(mode, str)$/;"	f
ctrlp#bookmarkdir#add	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#add(dir)$/;"	f
ctrlp#bookmarkdir#id	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#id()$/;"	f
ctrlp#bookmarkdir#init	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#init()$/;"	f
ctrlp#bookmarkdir#remove	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#remove(entries)$/;"	f
ctrlp#buffers	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#buffers(...)$/;"	f
ctrlp#buffertag#accept	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#accept(mode, str)$/;"	f
ctrlp#buffertag#cmd	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#cmd(mode, ...)$/;"	f
ctrlp#buffertag#exit	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#exit()$/;"	f
ctrlp#buffertag#init	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#init(fname)$/;"	f
ctrlp#buffertag#opts	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#opts()$/;"	f
ctrlp#call	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#call(func, ...)$/;"	f
ctrlp#changes#accept	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#accept(mode, str)$/;"	f
ctrlp#changes#cmd	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#cmd(mode, ...)$/;"	f
ctrlp#changes#exit	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#exit()$/;"	f
ctrlp#changes#init	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#init(original_bufnr, bufnr)$/;"	f
ctrlp#clr	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clr(...)$/;"	f
ctrlp#clra	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clra()$/;"	f
ctrlp#complen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#complen(...)$/;"	f
ctrlp#dir#accept	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#accept(mode, str)$/;"	f
ctrlp#dir#id	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#id()$/;"	f
ctrlp#dir#init	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#init(...)$/;"	f
ctrlp#dirnfile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#dirnfile(entries)$/;"	f
ctrlp#exit	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#exit()$/;"	f
ctrlp#files	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#files()$/;"	f
ctrlp#getcline	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getcline()$/;"	f
ctrlp#getmarkedlist	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getmarkedlist()$/;"	f
ctrlp#hicheck	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#hicheck(grp, defgrp)$/;"	f
ctrlp#igncwd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#igncwd(cwd)$/;"	f
ctrlp#init	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#init(type, ...)$/;"	f
ctrlp#j2l	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#j2l(nr)$/;"	f
ctrlp#line#accept	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#accept(mode, str)$/;"	f
ctrlp#line#id	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#id()$/;"	f
ctrlp#line#init	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#init()$/;"	f
ctrlp#mixed#id	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#id()$/;"	f
ctrlp#mixed#init	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#init(clim)$/;"	f
ctrlp#modfilecond	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#modfilecond(w)$/;"	f
ctrlp#mrufiles#add	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#add(fn)$/;"	f
ctrlp#mrufiles#bufs	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#bufs()$/;"	f
ctrlp#mrufiles#cachefile	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#cachefile()$/;"	f
ctrlp#mrufiles#init	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#init()$/;"	f
ctrlp#mrufiles#list	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#list(...)$/;"	f
ctrlp#mrufiles#opts	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#opts()$/;"	f
ctrlp#mrufiles#refresh	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#refresh(...)$/;"	f
ctrlp#mrufiles#remove	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#remove(files)$/;"	f
ctrlp#normcmd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#normcmd(cmd, ...)$/;"	f
ctrlp#nosy	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#nosy()$/;"	f
ctrlp#progress	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#progress(enum, ...)$/;"	f
ctrlp#prtclear	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#prtclear()$/;"	f
ctrlp#quickfix#accept	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#accept(mode, str)$/;"	f
ctrlp#quickfix#id	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#id()$/;"	f
ctrlp#quickfix#init	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#init()$/;"	f
ctrlp#recordhist	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#recordhist()$/;"	f
ctrlp#rmbasedir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#rmbasedir(items)$/;"	f
ctrlp#rtscript#id	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#id()$/;"	f
ctrlp#rtscript#init	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#init(caching)$/;"	f
ctrlp#setdir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setdir(path, ...)$/;"	f
ctrlp#setlcdir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlcdir()$/;"	f
ctrlp#setlines	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlines(...)$/;"	f
ctrlp#statusline	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#statusline()$/;"	f
ctrlp#switchtype	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#switchtype(id)$/;"	f
ctrlp#syntax	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#syntax()$/;"	f
ctrlp#tabcount	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#tabcount()$/;"	f
ctrlp#tag#accept	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#accept(mode, str)$/;"	f
ctrlp#tag#enter	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#enter()$/;"	f
ctrlp#tag#id	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#id()$/;"	f
ctrlp#tag#init	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#init()$/;"	f
ctrlp#undo#accept	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#accept(mode, str)$/;"	f
ctrlp#undo#enter	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#enter()$/;"	f
ctrlp#undo#exit	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#exit()$/;"	f
ctrlp#undo#id	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#id()$/;"	f
ctrlp#undo#init	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#init()$/;"	f
ctrlp#utils#cachedir	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachedir()$/;"	f
ctrlp#utils#cachefile	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachefile(...)$/;"	f
ctrlp#utils#fnesc	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#fnesc(path, type, ...)$/;"	f
ctrlp#utils#glob	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#glob(...)$/;"	f
ctrlp#utils#globpath	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#globpath(...)$/;"	f
ctrlp#utils#lash	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#lash()$/;"	f
ctrlp#utils#mkdir	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#mkdir(dir)$/;"	f
ctrlp#utils#opts	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#opts()$/;"	f
ctrlp#utils#readfile	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#readfile(file)$/;"	f
ctrlp#utils#writecache	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#writecache(lines, ...)$/;"	f
current_compiler	bundle/vim-coffee-script/compiler/coffee.vim	/^  let current_compiler = 'coffee'$/;"	v
current_compiler	bundle/vim-ruby/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	bundle/vim-ruby/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	bundle/vim-ruby/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	bundle/vim-ruby/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	bundle/vim-ruby/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
debug	bundle/vim-rails/autoload/rails.vim	/^function! s:debug(str)$/;"	f
default_role	bundle/html5.vim/autoload/xml/aria.vim	/^let default_role = {$/;"	v
default_role	bundle/html5.vim/autoload/xml/aria.vim	/^let default_role = {}$/;"	v
define_navcommand	bundle/vim-rails/autoload/rails.vim	/^function! s:define_navcommand(name, projection, ...) abort$/;"	f
delent	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delent(rfunc)$/;"	f
delete	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^function! s:delete(cache_dir, filename)$/;"	f
deleteBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:deleteBookmark(bm)$/;"	f
delimitMate	bundle/delimitMate/plugin/delimitMate.vim	/^augroup delimitMate$/;"	a
delimitMate#AddToBuffer	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#AddToBuffer(str, ...) "{{{$/;"	f
delimitMate#BS	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#BS() " {{{$/;"	f
delimitMate#BalancedParens	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#BalancedParens(char) "{{{$/;"	f
delimitMate#CursorIdx	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#CursorIdx() "{{{$/;"	f
delimitMate#Del	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Del() " {{{$/;"	f
delimitMate#ExpandReturn	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandReturn() "{{{$/;"	f
delimitMate#ExpandSpace	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandSpace() "{{{$/;"	f
delimitMate#Finish	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Finish(move_back) " {{{$/;"	f
delimitMate#FlushBuffer	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#FlushBuffer() " {{{$/;"	f
delimitMate#Get	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Get(...) "{{{$/;"	f
delimitMate#GetCharFromCursor	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetCharFromCursor(...) "{{{$/;"	f
delimitMate#GetCurrentSyntaxRegion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetCurrentSyntaxRegion() "{{{$/;"	f
delimitMate#GetCurrentSyntaxRegionIf	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetCurrentSyntaxRegionIf(char) "{{{$/;"	f
delimitMate#GetSyntaxRegion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetSyntaxRegion(line, col) "{{{$/;"	f
delimitMate#IsCRExpansion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsCRExpansion(...) " {{{$/;"	f
delimitMate#IsEmptyPair	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsEmptyPair(str) "{{{$/;"	f
delimitMate#IsForbidden	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsForbidden(char) "{{{$/;"	f
delimitMate#IsSmartQuote	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsSmartQuote(char) "{{{$/;"	f
delimitMate#IsSpaceExpansion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsSpaceExpansion() " {{{$/;"	f
delimitMate#JumpAny	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpAny(...) " {{{$/;"	f
delimitMate#JumpMany	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpMany() " {{{$/;"	f
delimitMate#JumpOut	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpOut(char) "{{{$/;"	f
delimitMate#OptionsList	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#OptionsList() "{{{$/;"	f
delimitMate#ParenDelim	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ParenDelim(char) " {{{$/;"	f
delimitMate#QuoteDelim	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#QuoteDelim(char) "{{{$/;"	f
delimitMate#RmBuffer	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#RmBuffer(num) " {{{$/;"	f
delimitMate#Set	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Set(...) "{{{$/;"	f
delimitMate#ShouldJump	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ShouldJump(...) "{{{$/;"	f
delimitMate#SkipDelim	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#SkipDelim(char) "{{{$/;"	f
delimitMate#TestMappings	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#TestMappings() "{{{$/;"	f
delimitMate#WithinEmptyPair	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WithinEmptyPair() "{{{$/;"	f
delimitMate#WriteAfter	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WriteAfter(str) "{{{$/;"	f
delimitMate#WriteBefore	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WriteBefore(str) "{{{$/;"	f
delimitMateTests#Main	bundle/delimitMate/autoload/delimitMateTests.vim	/^function! delimitMateTests#Main()$/;"	f
delimitMate_version	bundle/delimitMate/plugin/delimitMate.vim	/^let delimitMate_version = "2.6"$/;"	v
dep_from_git	bundle/html5.vim/Makefile	/^dep_from_git = \\$/;"	m
dep_from_svn	bundle/html5.vim/Makefile	/^dep_from_svn = \\$/;"	m
determine_home_dir	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_home_dir$/;"	F	class:Env
determine_source_directory	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_source_directory$/;"	F	class:Env
determine_target_os	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_target_os$/;"	F	class:Env
determine_vim_dir	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_vim_dir$/;"	F	class:Env
dict2list	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:dict2list(dict)$/;"	f
dictindex	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dictindex(dict, expr)$/;"	f
did_javascript_syn_inits	bundle/JavaScript-syntax/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_json_syn_inits	bundle/vim-json/syntax/json.vim	/^    let did_json_syn_inits = 1$/;"	v
did_lisp_syntax_inits	bundle/jQuery/syntax/jquery.vim	/^    let did_lisp_syntax_inits = 1$/;"	v
diffidx	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:diffidx(a, b)$/;"	f
dircompl	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dircompl(be, sd)$/;"	f
dismrk	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dismrk()$/;"	f
displayHelp	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:displayHelp()$/;"	f
display_neco	bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! s:display_neco(number) "{{{$/;"	f
djump	bundle/vim-rails/autoload/rails.vim	/^function! s:djump(def)$/;"	f
doc_dict.search	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:doc_dict.search(cur_text) "{{{$/;"	f
doc_dict.search	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:doc_dict.search(cur_text) "{{{$/;"	f
doc_dict.search	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:doc_dict.search(cur_text) "{{{$/;"	f
document_structure	bundle/html5.vim/autoload/xml/aria.vim	/^let document_structure = ['article', 'columnheader', 'definition', 'directory', 'document', 'group', 'heading', 'img', 'list', 'listitem', 'math', 'note', 'presentation', 'region', 'row', 'rowheader', 'separator']$/;"	v
document_structure	bundle/html5.vim/autoload/xml/html5.vim	/^    let document_structure = ['article', 'columnheader', 'definition', 'directory', 'document', 'group', 'heading', 'img', 'list', 'listitem', 'math', 'note', 'presentation', 'region', 'row', 'rowheader', 'separator']$/;"	v
dohighlight	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dohighlight()$/;"	f
dosigns	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dosigns()$/;"	f
dosurround	bundle/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dotcmp	bundle/vim-rails/autoload/rails.vim	/^function! s:dotcmp(i1, i2)$/;"	f
dprint	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
drag_and_drop_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let drag_and_drop_attributes = {'aria-dropeffect': ['copy', 'move', 'link', 'execute', 'popup', 'none'], 'aria-grabbed': ['true', 'false', 'undefined']}$/;"	v
ds	bundle/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
echo	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echoWarning	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
edit	bundle/vim-rails/autoload/rails.vim	/^function! s:edit(cmd,file,...)$/;"	f
editcmdfor	bundle/vim-rails/autoload/rails.vim	/^function! s:editcmdfor(cmd)$/;"	f
elapsed	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:elapsed(nr)$/;"	f
empty_buffer	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:empty_buffer()$/;"	f
endof	bundle/vim-rails/autoload/rails.vim	/^function! s:endof(lnum)$/;"	f
endswith	bundle/vim-rails/autoload/rails.vim	/^function! s:endswith(string,suffix)$/;"	f
environment	bundle/vim-rails/autoload/rails.vim	/^function! s:environment()$/;"	f
error	bundle/vim-rails/autoload/rails.vim	/^function! s:error(str)$/;"	f
error	bundle/vim-rails/plugin/rails.vim	/^function! s:error(str)$/;"	f
escape	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! s:escape(path)"{{{$/;"	f
escape_file_searching	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:escape_file_searching(buffer_name)$/;"	f
escape_file_searching	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:escape_file_searching(buffer_name)$/;"	f
escape_pattern	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:escape_pattern(str)$/;"	f
escape_pattern	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:escape_pattern(str)$/;"	f
escarg	bundle/vim-rails/autoload/rails.vim	/^function! s:escarg(p)$/;"	f
esccmd	bundle/vim-rails/autoload/rails.vim	/^function! s:esccmd(p)$/;"	f
esctagscmd	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:esctagscmd(bin, args, ...)$/;"	f
eval_snippet	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:eval_snippet(snippet_text) "{{{$/;"	f
evaluate	bundle/delimitMate/test/expand_cr.vim	/^let evaluate = 0$/;"	v
evaluate	bundle/delimitMate/test/expand_space.vim	/^let evaluate = 0$/;"	v
event_attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^    let event_attributes_value = {$/;"	v
event_handler_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let event_handler_attributes = {'onabort': [], 'onblur': [], 'oncanplay': [], 'oncanplaythrough': [], 'onchange': [], 'onclick': [], 'oncontextmenu': [], 'ondblclick': [], 'ondrag': [], 'ondragend': [], 'ondragenter': [], 'ondragleave': [], 'ondragover': [], 'ondragstart': [], 'ondrop': [], 'ondurationchange': [], 'onemptied': [], 'onended': [], 'onerror': [], 'onfocus': [], 'onformchange': [], 'onforminput': [], 'oninput': [], 'oninvalid': [], 'onkeydown': [], 'onkeypress': [], 'onkeyup': [], 'onload': [], 'onloadeddata': [], 'onloadedmetadata': [], 'onloadstart': [], 'onmousedown': [], 'onmousemove': [], 'onmouseout': [], 'onmouseover': [], 'onmouseup': [], 'onmousewheel': [], 'onpause': [], 'onplay': [], 'onplaying': [], 'onprogress': [], 'onratechange': [], 'onreadystatechange': [], 'onscroll': [], 'onseeked': [], 'onseeking': [], 'onselect': [], 'onshow': [], 'onstalled': [], 'onsubmit': [], 'onsuspend': [], 'ontimeupdate': [], 'onvolumechange': [], 'onwaiting': []}$/;"	v
excl	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:excl(fn)$/;"	f
exe	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function s:exe()$/;"	f
exe	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function s:exe()$/;"	f
execextvar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:execextvar(key)$/;"	f
exectags	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectags(cmd)$/;"	f
exectagsonfile	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectagsonfile(fname, ftype)$/;"	f
exists	bundle/delimitMate/autoload/delimitMate.vim	/^function! s:exists(name, ...) "{{{$/;"	f
exists_current_source	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:exists_current_source() "{{{$/;"	f
expand_path	bundle/vundle/autoload/vundle/config.vim	/^func! s:expand_path(path) abort$/;"	f
expand_placeholder	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:expand_placeholder(start, end, holder_cnt, line, ...) "{{{$/;"	f
expand_placeholders	bundle/vim-rails/autoload/rails.vim	/^function! s:expand_placeholders(string, placeholders)$/;"	f
expand_region	bundle/vim-expand-region/autoload/expand_region.vim	/^function! s:expand_region(mode, direction)$/;"	f
expand_region#custom_text_objects	bundle/vim-expand-region/autoload/expand_region.vim	/^function! expand_region#custom_text_objects(...)$/;"	f
expand_region#init	bundle/vim-expand-region/autoload/expand_region.vim	/^function! expand_region#init()$/;"	f
expand_region#next	bundle/vim-expand-region/autoload/expand_region.vim	/^function! expand_region#next(mode, direction)$/;"	f
expand_region#use_select_mode	bundle/vim-expand-region/autoload/expand_region.vim	/^function! expand_region#use_select_mode()$/;"	f
expand_target_placeholder	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:expand_target_placeholder(line, col) "{{{$/;"	f
expect	bundle/delimitMate/test/expand_cr.vim	/^    let expect = 0$/;"	v
expect	bundle/delimitMate/test/expand_cr.vim	/^    let expect = 1$/;"	v
expect	bundle/delimitMate/test/expand_cr.vim	/^let expect = 0$/;"	v
expect	bundle/delimitMate/test/expand_space.vim	/^    let expect = 0$/;"	v
expect	bundle/delimitMate/test/expand_space.vim	/^    let expect = 1$/;"	v
expect	bundle/delimitMate/test/expand_space.vim	/^let expect = 0$/;"	v
expected	bundle/delimitMate/test/expand_cr.vim	/^    let expected = []$/;"	v
expected	bundle/delimitMate/test/expand_space.vim	/^    let expected = []$/;"	v
extend_projection	bundle/vim-rails/autoload/rails.vim	/^function! s:extend_projection(dest, src)$/;"	f
extractafter	bundle/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	bundle/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
extractdbvar	bundle/vim-rails/autoload/rails.vim	/^function! s:extractdbvar(str,arg)$/;"	f
fcitx2en	bundle/fcitx.vim/plugin/fcitx.py	/^def fcitx2en():$/;"	f
fcitx2zh	bundle/fcitx.vim/plugin/fcitx.py	/^def fcitx2zh():$/;"	f
fcitxsocketfile	bundle/fcitx.vim/plugin/fcitx.py	/^fcitxsocketfile = vim.eval('s:fcitxsocketfile')$/;"	v
fcitxtalk	bundle/fcitx.vim/plugin/fcitx.py	/^def fcitxtalk(command=None):$/;"	f
fetch_github	bundle/html5.vim/Makefile	/^fetch_github = \\$/;"	m
fetch_local	bundle/html5.vim/Makefile	/^fetch_local = @cp -v $(1) $(2) \\$/;"	m
fetch_scripts	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:fetch_scripts(to)$/;"	f
fetch_url	bundle/html5.vim/Makefile	/^fetch_url = \\$/;"	m
file_getline	bundle/vim-rails/autoload/rails.vim	/^function! s:file_getline(lnum,...) dict abort$/;"	f
file_lines	bundle/vim-rails/autoload/rails.vim	/^function! s:file_lines() dict abort$/;"	f
file_name	bundle/vim-rails/autoload/rails.vim	/^function! s:file_name() dict abort$/;"	f
file_path	bundle/vim-rails/autoload/rails.vim	/^function! s:file_path() dict abort$/;"	f
filereadable	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^function! s:filereadable(cache_dir, filename)$/;"	f
filter	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:filter(tags)$/;"	f
find_target_directory	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def find_target_directory$/;"	f	class:TargetDirectory
findamethod	bundle/vim-rails/autoload/rails.vim	/^function! s:findamethod(func,repl)$/;"	f
findasymbol	bundle/vim-rails/autoload/rails.vim	/^function! s:findasymbol(sym,repl)$/;"	f
findcmdfor	bundle/vim-rails/autoload/rails.vim	/^function! s:findcmdfor(cmd)$/;"	f
findcommon	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findcommon(items, seed)$/;"	f
findcount	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:findcount(str)$/;"	f
findedit	bundle/vim-rails/autoload/rails.vim	/^function! s:findedit(cmd,files,...) abort$/;"	f
finder	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def self.finder$/;"	F	class:TargetDirectory
findfromview	bundle/vim-rails/autoload/rails.vim	/^function! s:findfromview(func,repl)$/;"	f
findit	bundle/vim-rails/autoload/rails.vim	/^function! s:findit(pat,repl)$/;"	f
findlayout	bundle/vim-rails/autoload/rails.vim	/^function! s:findlayout(name)$/;"	f
findroot	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findroot(curr, mark, depth, type)$/;"	f
findview	bundle/vim-rails/autoload/rails.vim	/^function! s:findview(name)$/;"	f
fixindent	bundle/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
fixturesEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesEdit(cmd,...)$/;"	f
fixturesList	bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesList(A,L,P)$/;"	f
flatten	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:flatten(tree, cur)$/;"	f
flatten	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:flatten(list)$/;"	f
flow_elements	bundle/html5.vim/autoload/xml/html5.vim	/^let flow_elements = phrasing_elements + ['p', 'hr', 'pre', 'ul', 'ol', 'dl', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hgroup', 'address', 'blockquote', 'ins', 'del', 'object', 'main', 'map', 'noscript', 'section', 'nav', 'article', 'aside', 'header', 'footer', 'video', 'audio', 'figure', 'table', 'form', 'fieldset', 'menu', 'canvas', 'details']$/;"	v
fnameescape	bundle/vim-rails/autoload/rails.vim	/^function! s:fnameescape(file) abort$/;"	f
fnesc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:fnesc(...)$/;"	f
foldl	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:foldl(f, init, xs)$/;"	f
foldl1	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:foldl1(f, xs)$/;"	f
foldr	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:foldr(f, init, xs)$/;"	f
foldr1	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:foldr1(f, xs)$/;"	f
foo	bundle/vim-ruby/spec/indent/blocks_spec.rb	/^      def foo$/;"	f
foo	bundle/vim-ruby/spec/indent/blocks_spec.rb	/^      def foo(job)$/;"	f
format	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:format(...)$/;"	f
format	bundle/vim-rails/autoload/rails.vim	/^function! s:format()$/;"	f
formatline	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:formatline(str)$/;"	f
formatul	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:formatul(...)$/;"	f
function	bundle/vim-rails/autoload/rails.vim	/^function! s:function(name)$/;"	f
function	bundle/vim-rails/plugin/rails.vim	/^function! s:function(name)$/;"	f
fuzzyglob	bundle/vim-rails/autoload/rails.vim	/^function! s:fuzzyglob(arg)$/;"	f
g	bundle/delimitMate/autoload/delimitMate.vim	/^function! s:g(name, ...) "{{{$/;"	f
g	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:g(...) " {{{$/;"	f
g:Align_xstrlen	bundle/Align/autoload/Align.vim	/^  let g:Align_xstrlen= 0$/;"	v
g:Align_xstrlen	bundle/Align/autoload/Align.vim	/^  let g:Align_xstrlen= 1$/;"	v
g:DrChipTopLvlMenu	bundle/Align/plugin/AlignMapsPlugin.vim	/^  let g:DrChipTopLvlMenu= "DrChip."$/;"	v
g:NERDTreeAutoDeleteBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCaseSensitiveSort	conf/settings.vim	/^let g:NERDTreeCaseSensitiveSort = 1$/;"	v
g:NERDTreeChDirMode	conf/settings.vim	/^let g:NERDTreeChDirMode = 2$/;"	v
g:NERDTreeCreator	bundle/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirArrows	conf/settings.vim	/^let g:NERDTreeDirArrows = 1$/;"	v
g:NERDTreeDirNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeFileNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeIgnore	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	bundle/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeMinimalUI	conf/settings.vim	/^let g:NERDTreeMinimalUI = 1$/;"	v
g:NERDTreeMouseMode	conf/settings.vim	/^let g:NERDTreeMouseMode = 3$/;"	v
g:NERDTreeOpener	bundle/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	bundle/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreeSortOrder	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:NERDTreeWinSize	conf/settings.vim	/^let g:NERDTreeWinSize = 36$/;"	v
g:Powerline_symbols	conf/settings.vim	/^let g:Powerline_symbols = 'unicode'$/;"	v
g:SyntasticAutoloclistNotifier	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticHighlightingNotifier	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticMakeprgBuilder	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^let g:SyntasticMakeprgBuilder = {}$/;"	v
g:SyntasticModeMap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:acp_enableAtStartup	conf/neocomplcache.vim	/^let g:acp_enableAtStartup = 0$/;"	v
g:ag_apply_lmappings	bundle/ag.vim/autoload/ag.vim	/^  let g:ag_apply_lmappings = !exists("g:ag_lhandler")$/;"	v
g:ag_apply_qmappings	bundle/ag.vim/autoload/ag.vim	/^  let g:ag_apply_qmappings = !exists("g:ag_qhandler")$/;"	v
g:ag_lhandler	bundle/ag.vim/autoload/ag.vim	/^  let g:ag_lhandler="botright lopen"$/;"	v
g:ag_qhandler	bundle/ag.vim/autoload/ag.vim	/^  let g:ag_qhandler="botright copen"$/;"	v
g:agprg	bundle/ag.vim/autoload/ag.vim	/^  let g:agprg="ag --column"$/;"	v
g:airline#themes#default#insert	bundle/vim-airline/autoload/airline/themes/default.vim	/^let g:airline#themes#default#insert = {$/;"	v
g:airline#themes#default#insert_modified	bundle/vim-airline/autoload/airline/themes/default.vim	/^let g:airline#themes#default#insert_modified = copy(g:airline#themes#default#insert)$/;"	v
g:airline#themes#default#insert_modified	bundle/vim-airline/autoload/airline/themes/default.vim	/^let g:airline#themes#default#insert_modified.info_separator = [ '#005fff' , '#5f005f' , 27  , 53 , '' ]$/;"	v
g:airline#themes#default#insert_modified	bundle/vim-airline/autoload/airline/themes/default.vim	/^let g:airline#themes#default#insert_modified.statusline     = [ '#ffffff' , '#5f005f' , 255 , 53 , '' ]$/;"	v
g:airline#themes#default#normal	bundle/vim-airline/autoload/airline/themes/default.vim	/^let g:airline#themes#default#normal = {$/;"	v
g:airline#themes#default#normal_modified	bundle/vim-airline/autoload/airline/themes/default.vim	/^let g:airline#themes#default#normal_modified = copy(g:airline#themes#default#normal)$/;"	v
g:airline#themes#default#normal_modified	bundle/vim-airline/autoload/airline/themes/default.vim	/^let g:airline#themes#default#normal_modified.info_separator = [ '#444444' , '#5f005f' , 238 , 53 , '' ]$/;"	v
g:airline#themes#default#normal_modified	bundle/vim-airline/autoload/airline/themes/default.vim	/^let g:airline#themes#default#normal_modified.statusline     = [ '#ffffff' , '#5f005f' , 255 , 53 , '' ]$/;"	v
g:airline#themes#default#visual	bundle/vim-airline/autoload/airline/themes/default.vim	/^let g:airline#themes#default#visual = {$/;"	v
g:airline#themes#default#visual_modified	bundle/vim-airline/autoload/airline/themes/default.vim	/^let g:airline#themes#default#visual_modified = copy(g:airline#themes#default#visual)$/;"	v
g:airline#themes#default#visual_modified	bundle/vim-airline/autoload/airline/themes/default.vim	/^let g:airline#themes#default#visual_modified.info_separator = [ '#ff5f00' , '#5f005f' , 202 , 53 , '' ]$/;"	v
g:airline#themes#default#visual_modified	bundle/vim-airline/autoload/airline/themes/default.vim	/^let g:airline#themes#default#visual_modified.statusline     = [ '#ffffff' , '#5f005f' , 255 , 53 , '' ]$/;"	v
g:aria_attributes_complete	bundle/html5.vim/autoload/htmlcomplete.vim	/^    let g:aria_attributes_complete = 1$/;"	v
g:auto_save	conf/settings.vim	/^let g:auto_save = 1         " Auto save$/;"	v
g:autoloaded_rails	bundle/vim-rails/autoload/rails.vim	/^let g:autoloaded_rails = '5.0'$/;"	v
g:colors_name	bundle/molokai/colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:ctrlp_cache_dir	conf/settings.vim	/^let g:ctrlp_cache_dir = expand($VIMHOME."\/tmp\/ctrlp_cache")$/;"	v
g:ctrlp_clear_cache_on_exit	conf/settings.vim	/^let g:ctrlp_clear_cache_on_exit = 0$/;"	v
g:ctrlp_custom_ignore	conf/settings.vim	/^let g:ctrlp_custom_ignore = {$/;"	v
g:ctrlp_jump_to_buffer	conf/settings.vim	/^let g:ctrlp_jump_to_buffer = 2$/;"	v
g:ctrlp_open_multi	conf/settings.vim	/^let g:ctrlp_open_multi = '1t'$/;"	v
g:ctrlp_open_multiple_files	conf/settings.vim	/^let g:ctrlp_open_multiple_files = 'v'$/;"	v
g:ctrlp_open_new_file	conf/settings.vim	/^let g:ctrlp_open_new_file = 1$/;"	v
g:ctrlp_use_caching	conf/settings.vim	/^let g:ctrlp_use_caching = 1$/;"	v
g:ctrlp_working_path_mode	conf/settings.vim	/^let g:ctrlp_working_path_mode = 2$/;"	v
g:delimitMate_balance_matchpairs	conf/settings.vim	/^let g:delimitMate_balance_matchpairs = 1$/;"	v
g:delimitMate_excluded_ft	bundle/delimitMate/autoload/delimitMateTests.vim	/^	let g:delimitMate_excluded_ft = "vim"$/;"	v
g:delimitMate_excluded_ft	conf/settings.vim	/^let g:delimitMate_excluded_ft = "mail,help"$/;"	v
g:delimitMate_expand_cr	bundle/delimitMate/test/expand_cr.vim	/^let g:delimitMate_expand_cr = 1$/;"	v
g:delimitMate_expand_cr	conf/settings.vim	/^let g:delimitMate_expand_cr = 1$/;"	v
g:delimitMate_expand_space	bundle/delimitMate/test/expand_space.vim	/^let g:delimitMate_expand_space = 1$/;"	v
g:delimitMate_expand_space	conf/settings.vim	/^let g:delimitMate_expand_space = 1$/;"	v
g:delimitMate_matchpairs	bundle/delimitMate/test/autoclose_matchpairs.vim	/^let g:delimitMate_matchpairs = '(:),{:},[:],<:>,¿:?,¡:!'$/;"	v
g:delimitMate_quotes	bundle/delimitMate/test/autoclose_quotes.vim	/^let g:delimitMate_quotes = '" '' ` ” « |'$/;"	v
g:did_ruby_ftplugin_functions	bundle/vim-ruby/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:eco_default_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^  let g:eco_default_subtype = "html"$/;"	v
g:eruby_default_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	bundle/vim-ruby/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:html5_aria_attributes_complete	bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_aria_attributes_complete = 1$/;"	v
g:html5_event_handler_attributes_complete	bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_event_handler_attributes_complete = 1$/;"	v
g:html5_microdata_attributes_complete	bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_microdata_attributes_complete = 1$/;"	v
g:html5_rdfa_attributes_complete	bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_rdfa_attributes_complete = 1$/;"	v
g:loaded_Align	bundle/Align/autoload/Align.vim	/^let g:loaded_Align = "v36"$/;"	v
g:loaded_AlignMaps	bundle/Align/autoload/AlignMaps.vim	/^let g:loaded_AlignMaps= "v42"$/;"	v
g:loaded_AlignMapsPlugin	bundle/Align/plugin/AlignMapsPlugin.vim	/^let g:loaded_AlignMapsPlugin = "v42"$/;"	v
g:loaded_AlignPlugin	bundle/Align/plugin/AlignPlugin.vim	/^let g:loaded_AlignPlugin = "v36"$/;"	v
g:loaded_airline	bundle/vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_cecutil	bundle/Align/plugin/cecutil.vim	/^let g:loaded_cecutil = "v18h"$/;"	v
g:loaded_ctrlp	bundle/ctrlp.vim/plugin/ctrlp.vim	/^let g:loaded_ctrlp = 1$/;"	v
g:loaded_ctrlp_bookmarkdir	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let g:loaded_ctrlp_bookmarkdir = 1$/;"	v
g:loaded_ctrlp_buftag	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let g:loaded_ctrlp_buftag = 1$/;"	v
g:loaded_ctrlp_changes	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^let g:loaded_ctrlp_changes = 1$/;"	v
g:loaded_ctrlp_line	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^let g:loaded_ctrlp_line = 1$/;"	v
g:loaded_ctrlp_quickfix	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let g:loaded_ctrlp_quickfix = 1$/;"	v
g:loaded_ctrlp_tag	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^let g:loaded_ctrlp_tag = 1$/;"	v
g:loaded_ctrlp_undo	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let g:loaded_ctrlp_undo = 1$/;"	v
g:loaded_delimitMate	bundle/delimitMate/plugin/delimitMate.vim	/^let g:loaded_delimitMate = 1$/;"	v
g:loaded_fcitx	bundle/fcitx.vim/plugin/fcitx.vim	/^let g:loaded_fcitx = 1$/;"	v
g:loaded_fcitx	bundle/fcitx.vim/so/fcitx.vim	/^let g:loaded_fcitx = 1$/;"	v
g:loaded_neocomplcache	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:loaded_neocomplcache = 1$/;"	v
g:loaded_neocomplcache_buffer_complete	bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^let g:loaded_neocomplcache_buffer_complete = 1$/;"	v
g:loaded_neocomplcache_dictionary_complete	bundle/neocomplcache/plugin/neocomplcache/dictionary_complete.vim	/^let g:loaded_neocomplcache_dictionary_complete = 1$/;"	v
g:loaded_neocomplcache_include_complete	bundle/neocomplcache/plugin/neocomplcache/include_complete.vim	/^let g:loaded_neocomplcache_include_complete = 1$/;"	v
g:loaded_neocomplcache_syntax_complete	bundle/neocomplcache/plugin/neocomplcache/syntax_complete.vim	/^let g:loaded_neocomplcache_syntax_complete = 1$/;"	v
g:loaded_neocomplcache_tags_complete	bundle/neocomplcache/plugin/neocomplcache/tags_complete.vim	/^let g:loaded_neocomplcache_tags_complete = 1$/;"	v
g:loaded_neosnippet	bundle/neosnippet/plugin/neosnippet.vim	/^let g:loaded_neosnippet = 1$/;"	v
g:loaded_nerdtree_autoload	bundle/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_rails	bundle/vim-rails/plugin/rails.vim	/^let g:loaded_rails = 1$/;"	v
g:loaded_surround	bundle/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker=1$/;"	v
g:loaded_syntastic_c_autoload	bundle/syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_checkpatch_checker	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^let g:loaded_syntastic_c_checkpatch_checker = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_c_make_checker	bundle/syntastic/syntax_checkers/c/make.vim	/^let g:loaded_syntastic_c_make_checker = 1$/;"	v
g:loaded_syntastic_c_oclint_checker	bundle/syntastic/syntax_checkers/c/oclint.vim	/^let g:loaded_syntastic_c_oclint_checker = 1$/;"	v
g:loaded_syntastic_c_sparse_checker	bundle/syntastic/syntax_checkers/c/sparse.vim	/^let g:loaded_syntastic_c_sparse_checker = 1$/;"	v
g:loaded_syntastic_c_splint_checker	bundle/syntastic/syntax_checkers/c/splint.vim	/^let g:loaded_syntastic_c_splint_checker = 1$/;"	v
g:loaded_syntastic_c_ycm_checker	bundle/syntastic/syntax_checkers/c/ycm.vim	/^let g:loaded_syntastic_c_ycm_checker = 1$/;"	v
g:loaded_syntastic_checker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	bundle/syntastic/syntax_checkers/co/coco.vim	/^let g:loaded_syntastic_co_coco_checker=1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker=1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker=1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker=1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_oclint_checker	bundle/syntastic/syntax_checkers/cpp/oclint.vim	/^let g:loaded_syntastic_cpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_cpp_ycm_checker	bundle/syntastic/syntax_checkers/cpp/ycm.vim	/^let g:loaded_syntastic_cpp_ycm_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker=1$/;"	v
g:loaded_syntastic_css_csslint_checker	bundle/syntastic/syntax_checkers/css/csslint.vim	/^let g:loaded_syntastic_css_csslint_checker=1$/;"	v
g:loaded_syntastic_css_phpcs_checker	bundle/syntastic/syntax_checkers/css/phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker=1$/;"	v
g:loaded_syntastic_css_prettycss_checker	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker=1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker=1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker=1$/;"	v
g:loaded_syntastic_d_dmd_checker	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_dart_dart_analyzer_checker	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^let g:loaded_syntastic_dart_dart_analyzer_checker=1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker=1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker=1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^let g:loaded_syntastic_erlang_erlang_checker=1$/;"	v
g:loaded_syntastic_eruby_erb_checker	bundle/syntastic/syntax_checkers/eruby/erb.vim	/^let g:loaded_syntastic_eruby_erb_checker=1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker=1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker=1$/;"	v
g:loaded_syntastic_gentoo_metadata_xmllint_checker	bundle/syntastic/syntax_checkers/gentoo_metadata/xmllint.vim	/^let g:loaded_syntastic_gentoo_metadata_xmllint_checker=1$/;"	v
g:loaded_syntastic_go_go_checker	bundle/syntastic/syntax_checkers/go/go.vim	/^let g:loaded_syntastic_go_go_checker=1$/;"	v
g:loaded_syntastic_go_gofmt_checker	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker=1$/;"	v
g:loaded_syntastic_go_golint_checker	bundle/syntastic/syntax_checkers/go/golint.vim	/^let g:loaded_syntastic_go_golint_checker=1$/;"	v
g:loaded_syntastic_go_govet_checker	bundle/syntastic/syntax_checkers/go/govet.vim	/^let g:loaded_syntastic_go_govet_checker=1$/;"	v
g:loaded_syntastic_haml_haml_checker	bundle/syntastic/syntax_checkers/haml/haml.vim	/^let g:loaded_syntastic_haml_haml_checker=1$/;"	v
g:loaded_syntastic_haskell_ghc_mod_checker	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let g:loaded_syntastic_haskell_ghc_mod_checker=1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker=1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker=1$/;"	v
g:loaded_syntastic_html_tidy_checker	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	bundle/syntastic/syntax_checkers/html/validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	bundle/syntastic/syntax_checkers/html/w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker=1$/;"	v
g:loaded_syntastic_java_javac_checker	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:loaded_syntastic_java_javac_checker=1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker=1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker=1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker=1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker=1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker=1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker=1$/;"	v
g:loaded_syntastic_json_jsonval_checker	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker=1$/;"	v
g:loaded_syntastic_less_lessc_checker	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let g:loaded_syntastic_less_lessc_checker=1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker=1$/;"	v
g:loaded_syntastic_llvm_llvm_checker	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^let g:loaded_syntastic_llvm_llvm_checker=1$/;"	v
g:loaded_syntastic_loclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	bundle/syntastic/syntax_checkers/lua/luac.vim	/^let g:loaded_syntastic_lua_luac_checker=1$/;"	v
g:loaded_syntastic_makeprg_autoload	bundle/syntastic/autoload/syntastic/makeprg.vim	/^let g:loaded_syntastic_makeprg_autoload = 1$/;"	v
g:loaded_syntastic_makeprg_builder	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^let g:loaded_syntastic_makeprg_builder = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker=1$/;"	v
g:loaded_syntastic_modemap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker=1$/;"	v
g:loaded_syntastic_notifier_autoloclist	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_notifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_nroff_mandoc_checker	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^let g:loaded_syntastic_nroff_mandoc_checker=1$/;"	v
g:loaded_syntastic_objc_gcc_checker	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_objc_oclint_checker	bundle/syntastic/syntax_checkers/objc/oclint.vim	/^let g:loaded_syntastic_objc_oclint_checker = 1$/;"	v
g:loaded_syntastic_objc_ycm_checker	bundle/syntastic/syntax_checkers/objc/ycm.vim	/^let g:loaded_syntastic_objc_ycm_checker = 1$/;"	v
g:loaded_syntastic_objcpp_gcc_checker	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let g:loaded_syntastic_objcpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_oclint_checker	bundle/syntastic/syntax_checkers/objcpp/oclint.vim	/^let g:loaded_syntastic_objcpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_objcpp_ycm_checker	bundle/syntastic/syntax_checkers/objcpp/ycm.vim	/^let g:loaded_syntastic_objcpp_ycm_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker=1$/;"	v
g:loaded_syntastic_perl_perl_checker	bundle/syntastic/syntax_checkers/perl/perl.vim	/^let g:loaded_syntastic_perl_perl_checker=1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker=1$/;"	v
g:loaded_syntastic_perl_podchecker_checker	bundle/syntastic/syntax_checkers/perl/podchecker.vim	/^let g:loaded_syntastic_perl_podchecker_checker=1$/;"	v
g:loaded_syntastic_php_php_checker	bundle/syntastic/syntax_checkers/php/php.vim	/^let g:loaded_syntastic_php_php_checker=1$/;"	v
g:loaded_syntastic_php_phpcs_checker	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker=1$/;"	v
g:loaded_syntastic_php_phpmd_checker	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker=1$/;"	v
g:loaded_syntastic_plugin	bundle/syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_pod_podchecker_checker	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^let g:loaded_syntastic_pod_podchecker_checker=1$/;"	v
g:loaded_syntastic_postprocess_autoload	bundle/syntastic/autoload/syntastic/postprocess.vim	/^let g:loaded_syntastic_postprocess_autoload = 1$/;"	v
g:loaded_syntastic_puppet_puppet_checker	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^let g:loaded_syntastic_puppet_puppet_checker=1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker=1$/;"	v
g:loaded_syntastic_python_flake8_checker	bundle/syntastic/syntax_checkers/python/flake8.vim	/^let g:loaded_syntastic_python_flake8_checker=1$/;"	v
g:loaded_syntastic_python_pep8_checker	bundle/syntastic/syntax_checkers/python/pep8.vim	/^let g:loaded_syntastic_python_pep8_checker=1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker=1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker=1$/;"	v
g:loaded_syntastic_python_pylint_checker	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let g:loaded_syntastic_python_pylint_checker=1$/;"	v
g:loaded_syntastic_python_python_checker	bundle/syntastic/syntax_checkers/python/python.vim	/^let g:loaded_syntastic_python_python_checker=1$/;"	v
g:loaded_syntastic_registry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker=1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker=1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker=1$/;"	v
g:loaded_syntastic_ruby_mri_checker	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^let g:loaded_syntastic_ruby_mri_checker=1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker=1$/;"	v
g:loaded_syntastic_rust_rustc_checker	bundle/syntastic/syntax_checkers/rust/rustc.vim	/^let g:loaded_syntastic_rust_rustc_checker=1$/;"	v
g:loaded_syntastic_sass_sass_checker	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let g:loaded_syntastic_sass_sass_checker=1$/;"	v
g:loaded_syntastic_scala_scalac_checker	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker=1$/;"	v
g:loaded_syntastic_scss_sass_checker	bundle/syntastic/syntax_checkers/scss/sass.vim	/^let g:loaded_syntastic_scss_sass_checker=1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker=1$/;"	v
g:loaded_syntastic_sh_sh_checker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^let g:loaded_syntastic_sh_sh_checker=1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker=1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker=1$/;"	v
g:loaded_syntastic_tex_chktex_checker	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker=1$/;"	v
g:loaded_syntastic_text_atdtool_checker	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^let g:loaded_syntastic_text_atdtool_checker = 1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker=1$/;"	v
g:loaded_syntastic_typescript_tsc_checker	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^let g:loaded_syntastic_typescript_tsc_checker=1$/;"	v
g:loaded_syntastic_util_autoload	bundle/syntastic/autoload/syntastic/util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_vala_valac_checker	bundle/syntastic/syntax_checkers/vala/valac.vim	/^let g:loaded_syntastic_vala_valac_checker = 1$/;"	v
g:loaded_syntastic_vhdl_ghdl_checker	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let g:loaded_syntastic_vhdl_ghdl_checker = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker=1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker=1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker=1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker=1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker=1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker=1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker=1$/;"	v
g:loaded_zencoding_vim	bundle/ZenCoding.vim/plugin/zencoding.vim	/^let g:loaded_zencoding_vim = 1$/;"	v
g:mapleader	conf/mappings.vim	/^let g:mapleader = ","$/;"	v
g:maplocalleader	conf/mappings.vim	/^let g:maplocalleader = ","$/;"	v
g:neocomplcache_auto_completion_start_length	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_auto_completion_start_length =$/;"	v
g:neocomplcache_caching_limit_file_size	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_caching_limit_file_size =$/;"	v
g:neocomplcache_ctags_program	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_ctags_program =$/;"	v
g:neocomplcache_cursor_hold_i_time	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_cursor_hold_i_time =$/;"	v
g:neocomplcache_disable_auto_complete	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_disable_auto_complete =$/;"	v
g:neocomplcache_disable_caching_file_path_pattern	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_disable_caching_file_path_pattern =$/;"	v
g:neocomplcache_disabled_sources_list	bundle/neocomplcache/plugin/neocomplcache.vim	/^  let g:neocomplcache_disabled_sources_list._ =$/;"	v
g:neocomplcache_disabled_sources_list	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_disabled_sources_list =$/;"	v
g:neocomplcache_enable_at_startup	conf/neocomplcache.vim	/^let g:neocomplcache_enable_at_startup = 1$/;"	v
g:neocomplcache_enable_auto_close_preview	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_close_preview =$/;"	v
g:neocomplcache_enable_auto_delimiter	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_delimiter =$/;"	v
g:neocomplcache_enable_auto_delimiter	conf/neocomplcache.vim	/^let g:neocomplcache_enable_auto_delimiter = 1$/;"	v
g:neocomplcache_enable_auto_select	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_select =$/;"	v
g:neocomplcache_enable_auto_select	conf/neocomplcache.vim	/^let g:neocomplcache_enable_auto_select = 1$/;"	v
g:neocomplcache_enable_caching_message	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_caching_message =$/;"	v
g:neocomplcache_enable_camel_case_completion	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_camel_case_completion =$/;"	v
g:neocomplcache_enable_camel_case_completion	conf/neocomplcache.vim	/^let g:neocomplcache_enable_camel_case_completion = 1$/;"	v
g:neocomplcache_enable_cursor_hold_i	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_cursor_hold_i =$/;"	v
g:neocomplcache_enable_debug	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_debug =$/;"	v
g:neocomplcache_enable_fuzzy_completion	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_fuzzy_completion =$/;"	v
g:neocomplcache_enable_ignore_case	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_ignore_case =$/;"	v
g:neocomplcache_enable_insert_char_pre	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_insert_char_pre =$/;"	v
g:neocomplcache_enable_prefetch	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_prefetch =$/;"	v
g:neocomplcache_enable_quick_match	conf/neocomplcache.vim	/^let g:neocomplcache_enable_quick_match = 1$/;"	v
g:neocomplcache_enable_smart_case	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_smart_case =$/;"	v
g:neocomplcache_enable_smart_case	conf/neocomplcache.vim	/^let g:neocomplcache_enable_smart_case = 1$/;"	v
g:neocomplcache_enable_underbar_completion	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_underbar_completion =$/;"	v
g:neocomplcache_enable_underbar_completion	conf/neocomplcache.vim	/^let g:neocomplcache_enable_underbar_completion = 1$/;"	v
g:neocomplcache_enable_wildcard	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_wildcard =$/;"	v
g:neocomplcache_force_overwrite_completefunc	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_force_overwrite_completefunc =$/;"	v
g:neocomplcache_force_overwrite_completefunc	conf/neocomplcache.vim	/^let g:neocomplcache_force_overwrite_completefunc = 1$/;"	v
g:neocomplcache_fuzzy_completion_start_length	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_fuzzy_completion_start_length =$/;"	v
g:neocomplcache_include_exprs	bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_exprs = {}$/;"	v
g:neocomplcache_include_paths	bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_paths = {}$/;"	v
g:neocomplcache_include_patterns	bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_patterns = {}$/;"	v
g:neocomplcache_include_suffixes	bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_suffixes = {}$/;"	v
g:neocomplcache_keyword_patterns	conf/neocomplcache.vim	/^    let g:neocomplcache_keyword_patterns = {}$/;"	v
g:neocomplcache_keyword_patterns	conf/neocomplcache.vim	/^let g:neocomplcache_keyword_patterns._ = '\\h\\w*'$/;"	v
g:neocomplcache_lock_buffer_name_pattern	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_lock_buffer_name_pattern =$/;"	v
g:neocomplcache_lock_iminsert	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_lock_iminsert =$/;"	v
g:neocomplcache_manual_completion_start_length	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_manual_completion_start_length =$/;"	v
g:neocomplcache_max_keyword_width	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_max_keyword_width =$/;"	v
g:neocomplcache_max_list	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_max_list =$/;"	v
g:neocomplcache_max_list	conf/neocomplcache.vim	/^let g:neocomplcache_max_list = 15$/;"	v
g:neocomplcache_max_menu_width	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_max_menu_width =$/;"	v
g:neocomplcache_min_keyword_length	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_min_keyword_length =$/;"	v
g:neocomplcache_min_syntax_length	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^  let g:neocomplcache_min_syntax_length = 4$/;"	v
g:neocomplcache_omni_patterns	conf/neocomplcache.vim	/^    let g:neocomplcache_omni_patterns = {}$/;"	v
g:neocomplcache_omni_patterns	conf/neocomplcache.vim	/^let g:neocomplcache_omni_patterns.c = '[^.[:digit:] *\\t]\\%(\\.\\|->\\)'$/;"	v
g:neocomplcache_omni_patterns	conf/neocomplcache.vim	/^let g:neocomplcache_omni_patterns.cpp = '[^.[:digit:] *\\t]\\%(\\.\\|->\\)\\|\\h\\w*::'$/;"	v
g:neocomplcache_omni_patterns	conf/neocomplcache.vim	/^let g:neocomplcache_omni_patterns.perl = '\\h\\w*->\\h\\w*\\|\\h\\w*::'$/;"	v
g:neocomplcache_omni_patterns	conf/neocomplcache.vim	/^let g:neocomplcache_omni_patterns.php = '[^. \\t]->\\h\\w*\\|\\h\\w*::'$/;"	v
g:neocomplcache_omni_patterns	conf/neocomplcache.vim	/^let g:neocomplcache_omni_patterns.ruby = '[^. *\\t]\\.\\h\\w*\\|\\h\\w*::'$/;"	v
g:neocomplcache_release_cache_time	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_release_cache_time =$/;"	v
g:neocomplcache_skip_auto_completion_time	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_skip_auto_completion_time =$/;"	v
g:neocomplcache_source_completion_length	bundle/neocomplcache/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_completion_length =$/;"	v
g:neocomplcache_source_completion_length	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_source_completion_length =$/;"	v
g:neocomplcache_source_rank	bundle/neocomplcache/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_rank = g:neocomplcache_plugin_rank$/;"	v
g:neocomplcache_source_rank	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_source_rank =$/;"	v
g:neocomplcache_sources_list	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_sources_list =$/;"	v
g:neocomplcache_temporary_dir	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_temporary_dir =$/;"	v
g:neocomplcache_wildcard_characters	bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_wildcard_characters =$/;"	v
g:neosnippet#enable_snipmate_compatibility	conf/neocomplcache.vim	/^let g:neosnippet#enable_snipmate_compatibility = 1        $/;"	v
g:neosnippet#snippets_directory	conf/neocomplcache.vim	/^let g:neosnippet#snippets_directory='~\/.vim\/bundle\/vim-snippets\/snippets'$/;"	v
g:nerdtree_tabs_focus_on_files	conf/settings.vim	/^let g:nerdtree_tabs_focus_on_files = 1$/;"	v
g:nerdtree_tabs_open_on_gui_startup	conf/settings.vim	/^let g:nerdtree_tabs_open_on_gui_startup = 0$/;"	v
g:python_highlight_all	conf/settings.vim	/^let g:python_highlight_all = 1$/;"	v
g:python_print_as_function	conf/settings.vim	/^let g:python_print_as_function = 1$/;"	v
g:python_show_sync	conf/settings.vim	/^let g:python_show_sync = 1$/;"	v
g:pythonmode_enable_django	conf/settings.vim	/^let g:pythonmode_enable_django = 1$/;"	v
g:pythonmode_enable_rope	conf/settings.vim	/^let g:pythonmode_enable_rope = 0$/;"	v
g:rails#rake_errorformat	bundle/vim-rails/autoload/rails.vim	/^let g:rails#rake_errorformat = '%D(in\\ %f),'$/;"	v
g:rails_no_abbreviations	bundle/vim-rails/autoload/rails.vim	/^  let g:rails_no_abbreviations = 1$/;"	v
g:ropevim_extended_complete	conf/settings.vim	/^let g:ropevim_extended_complete = 1$/;"	v
g:ropevim_vim_completion	conf/settings.vim	/^let g:ropevim_vim_completion = 1$/;"	v
g:ruby_default_path	bundle/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	bundle/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_version_paths	bundle/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'))$/;"	v
g:ruby_version_paths	bundle/vim-ruby/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_buffer_loading	conf/settings.vim	/^let g:rubycomplete_buffer_loading = 1$/;"	v
g:rubycomplete_classes_in_global	bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_classes_in_global	conf/settings.vim	/^let g:rubycomplete_classes_in_global = 1$/;"	v
g:rubycomplete_include_object	bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:rubycomplete_rails	conf/settings.vim	/^let g:rubycomplete_rails = 1$/;"	v
g:syntastic_ada_compiler	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler = 'gcc'$/;"	v
g:syntastic_ada_compiler_options	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_ada_config_file	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_config_file = '.syntastic_ada_config'$/;"	v
g:syntastic_always_populate_loc_list	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_always_populate_loc_list = 0$/;"	v
g:syntastic_auto_jump	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_auto_jump = 0$/;"	v
g:syntastic_auto_loc_list	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^    let g:syntastic_auto_loc_list = 2$/;"	v
g:syntastic_auto_loc_list	conf/settings.vim	/^let g:syntastic_auto_loc_list = 1$/;"	v
g:syntastic_c_checker_checkpatch_location	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^    let g:syntastic_c_checker_checkpatch_location = '.\/scripts\/checkpatch.pl'$/;"	v
g:syntastic_c_checker_checkpatch_location	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^    let g:syntastic_c_checker_checkpatch_location = 'checkpatch.pl'$/;"	v
g:syntastic_c_compiler	bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler = 'gcc'$/;"	v
g:syntastic_c_compiler_options	bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_c_config_file	bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_config_file = '.syntastic_c_config'$/;"	v
g:syntastic_check_on_open	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_check_on_open = 0$/;"	v
g:syntastic_check_on_open	conf/settings.vim	/^let g:syntastic_check_on_open = 1$/;"	v
g:syntastic_check_on_wq	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_check_on_wq = 1$/;"	v
g:syntastic_cpp_compiler	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler = 'g++'$/;"	v
g:syntastic_cpp_compiler_options	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_config_file	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_config_file = '.syntastic_cpp_config'$/;"	v
g:syntastic_cpp_cpplint_args	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_args = '--verbose=3'$/;"	v
g:syntastic_cpp_cpplint_thres	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_csslint_options	bundle/syntastic/syntax_checkers/css/csslint.vim	/^    let g:syntastic_csslint_options = ""$/;"	v
g:syntastic_d_compiler	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler = 'dmd'$/;"	v
g:syntastic_d_compiler_options	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_d_config_file	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_config_file = '.syntastic_d_config'$/;"	v
g:syntastic_dart_analyzer_conf	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^    let g:syntastic_dart_analyzer_conf = ''$/;"	v
g:syntastic_debug	bundle/syntastic/autoload/syntastic/util.vim	/^    let g:syntastic_debug = 0$/;"	v
g:syntastic_echo_current_error	bundle/syntastic/plugin/syntastic/cursor.vim	/^    let g:syntastic_echo_current_error = 1$/;"	v
g:syntastic_enable_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_enable_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 1$/;"	v
g:syntastic_enable_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^    let g:syntastic_enable_highlighting = 1$/;"	v
g:syntastic_enable_highlighting	conf/settings.vim	/^let g:syntastic_enable_highlighting = 0$/;"	v
g:syntastic_enable_signs	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_enable_signs = 1$/;"	v
g:syntastic_erb_exec	bundle/syntastic/syntax_checkers/eruby/erb.vim	/^    let g:syntastic_erb_exec = "erb"$/;"	v
g:syntastic_erlc_include_path	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^    let g:syntastic_erlc_include_path=""$/;"	v
g:syntastic_error_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_error_symbol = '>>'$/;"	v
g:syntastic_error_symbol	conf/settings.vim	/^let g:syntastic_error_symbol = '✗'$/;"	v
g:syntastic_filetype_map	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_filetype_map = {}$/;"	v
g:syntastic_fortran_flags	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_flags = ''$/;"	v
g:syntastic_haml_interpreter	bundle/syntastic/syntax_checkers/haml/haml.vim	/^    let g:syntastic_haml_interpreter = "haml"$/;"	v
g:syntastic_html_tidy_ignore_errors	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_validator_api	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_api = 'http:\/\/validator.nu\/'$/;"	v
g:syntastic_html_validator_nsfilter	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_nsfilter = ''$/;"	v
g:syntastic_html_validator_parser	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_parser = ''$/;"	v
g:syntastic_html_w3_api	bundle/syntastic/syntax_checkers/html/w3.vim	/^    let g:syntastic_html_w3_api = 'http:\/\/validator.w3.org\/check'$/;"	v
g:syntastic_ignore_files	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_ignore_files = []$/;"	v
g:syntastic_java_checkstyle_classpath	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-5.5-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_config_file	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_delete_output	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = {}$/;"	v
g:syntastic_java_javac_maven_pom_ftime	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = {}$/;"	v
g:syntastic_java_javac_maven_pom_properties	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_properties = {}$/;"	v
g:syntastic_java_javac_maven_pom_tags	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_tags = ["build", "properties"]$/;"	v
g:syntastic_java_javac_options	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_javac_temp_dir	bundle/syntastic/syntax_checkers/java/javac.vim	/^        let g:syntastic_java_javac_temp_dir = $TEMP."\\\\vim-syntastic-javac"$/;"	v
g:syntastic_java_javac_temp_dir	bundle/syntastic/syntax_checkers/java/javac.vim	/^        let g:syntastic_java_javac_temp_dir = '\/tmp\/vim-syntastic-javac'$/;"	v
g:syntastic_java_javac_temp_dir	bundle/syntastic/syntax_checkers/java/javac.vim	/^        let g:syntastic_java_javac_temp_dir = s:CygwinPath('\/tmp\/vim-syntastic-javac')$/;"	v
g:syntastic_java_maven_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_javascript_closure_compiler_options	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^    let g:syntastic_javascript_closure_compiler_options = ""$/;"	v
g:syntastic_javascript_gjslint_conf	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^    let g:syntastic_javascript_gjslint_conf = ""$/;"	v
g:syntastic_javascript_jshint_conf	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_conf = ""$/;"	v
g:syntastic_javascript_jsl_conf	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^    let g:syntastic_javascript_jsl_conf = ""$/;"	v
g:syntastic_javascript_jslint_conf	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^    let g:syntastic_javascript_jslint_conf = "--white --undef --nomen --regexp --plusplus --bitwise --newcap --sloppy --vars"$/;"	v
g:syntastic_less_options	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_options = "--no-color"$/;"	v
g:syntastic_less_use_less_lint	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_loc_list_height	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_loc_list_height = 10$/;"	v
g:syntastic_loc_list_height	conf/settings.vim	/^let g:syntastic_loc_list_height = 5$/;"	v
g:syntastic_mode_map	conf/settings.vim	/^let g:syntastic_mode_map = { 'passive_filetypes': ['scss', 'slim'] }$/;"	v
g:syntastic_objc_compiler	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler = 'gcc'$/;"	v
g:syntastic_objc_compiler_options	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objc_config_file	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_config_file = '.syntastic_objc_config'$/;"	v
g:syntastic_objcpp_compiler	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler = 'gcc'$/;"	v
g:syntastic_objcpp_compiler_options	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objcpp_config_file	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_config_file = '.syntastic_objcpp_config'$/;"	v
g:syntastic_ocaml_use_ocamlbuild	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_oclint_config_file	bundle/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_oclint_config_file = '.syntastic_oclint_config'$/;"	v
g:syntastic_perl_efm_program	bundle/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_efm_program =$/;"	v
g:syntastic_perl_interpreter	bundle/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_interpreter = "perl"$/;"	v
g:syntastic_perl_perlcritic_thres	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_quiet_warnings	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_quiet_warnings = 0$/;"	v
g:syntastic_ruby_exec	bundle/syntastic/syntax_checkers/eruby/erb.vim	/^    let g:syntastic_ruby_exec = "ruby"$/;"	v
g:syntastic_ruby_exec	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^    let g:syntastic_ruby_exec = "ruby"$/;"	v
g:syntastic_ruby_exec	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^    let g:syntastic_ruby_exec = "ruby"$/;"	v
g:syntastic_sass_check_partials	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_options	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^    let g:syntastic_scala_options = " "$/;"	v
g:syntastic_sparse_config_file	bundle/syntastic/syntax_checkers/c/sparse.vim	/^    let g:syntastic_sparse_config_file = '.syntastic_sparse_config'$/;"	v
g:syntastic_splint_config_file	bundle/syntastic/syntax_checkers/c/splint.vim	/^    let g:syntastic_splint_config_file = '.syntastic_splint_config'$/;"	v
g:syntastic_stl_format	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_stl_format = '[Syntax: line:%F (%t)]'$/;"	v
g:syntastic_style_error_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_style_error_symbol = 'S>'$/;"	v
g:syntastic_style_warning_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_style_warning_symbol = 'S>'$/;"	v
g:syntastic_tex_chktex_showmsgs	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_warning_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_warning_symbol = '>>'$/;"	v
g:syntastic_warning_symbol	conf/settings.vim	/^let g:syntastic_warning_symbol = '⚠'$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:systastic_puppet_puppetlint_args	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^    let g:systastic_puppet_puppetlint_args = g:systastic_puppet_lint_arguments$/;"	v
g:use_zen_complete_tag	conf/settings.vim	/^let g:use_zen_complete_tag = 1$/;"	v
g:user_zen_leader_key	bundle/ZenCoding.vim/plugin/zencoding.vim	/^  let g:user_zen_leader_key = '<c-y>'$/;"	v
g:virtualenv_directory	conf/settings.vim	/^let g:virtualenv_directory = expand($HOME."\/ve")$/;"	v
g:xmldata_aria	bundle/html5.vim/autoload/xml/aria.vim	/^let g:xmldata_aria = {$/;"	v
g:xmldata_html5	bundle/html5.vim/autoload/xml/html5.vim	/^let g:xmldata_html5 = {$/;"	v
g:zencoding_curl_command	bundle/ZenCoding.vim/plugin/zencoding.vim	/^  let g:zencoding_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
g:zencoding_debug	bundle/ZenCoding.vim/plugin/zencoding.vim	/^  let g:zencoding_debug = 0$/;"	v
g<C-]>	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g<C-]>      :<C-U>exe         "tjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
g]	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g]          :<C-U>exe       "tselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
get_augrouplist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_augrouplist() "{{{$/;"	f
get_buffer_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:get_buffer_include_files(bufnumber) "{{{$/;"	f
get_cached_script_candidates	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_cached_script_candidates() "{{{$/;"	f
get_candidate_dict	bundle/vim-expand-region/autoload/expand_region.vim	/^function! s:get_candidate_dict(text_object)$/;"	f
get_candidate_list	bundle/vim-expand-region/autoload/expand_region.vim	/^function! s:get_candidate_list()$/;"	f
get_candidates	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_candidates(complete_results, complete_pos, complete_str) "{{{$/;"	f
get_cmdlist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_cmdlist() "{{{$/;"	f
get_complete_pos	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_complete_pos(complete_results) "{{{$/;"	f
get_configuration	bundle/vim-expand-region/autoload/expand_region.vim	/^function! s:get_configuration()$/;"	f
get_cursor_snippet	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:get_cursor_snippet(snippets, cur_text) "{{{$/;"	f
get_default_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! s:get_default_include_files(filetype) "{{{$/;"	f
get_envlist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_envlist() "{{{$/;"	f
get_functionlist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_functionlist() "{{{$/;"	f
get_glob_files	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:get_glob_files(complete_str, path) "{{{$/;"	f
get_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! s:get_include_files(complete_str) "{{{$/;"	f
get_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:get_include_files(nestlevel, lines, filetype, pattern, path, expr) "{{{$/;"	f
get_keyword_pos	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^function! s:get_keyword_pos(cur_text) "{{{$/;"	f
get_keyword_pos	bundle/neosnippet/autoload/unite/sources/snippet_target.vim	/^function! s:get_keyword_pos(cur_text) "{{{$/;"	f
get_last_status	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:get_last_status()$/;"	f
get_last_status	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:get_last_status()$/;"	f
get_local_variables	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_local_variables() "{{{$/;"	f
get_mappinglist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_mappinglist() "{{{$/;"	f
get_member_list	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_member_list(cur_text, var_name) "{{{$/;"	f
get_member_pattern	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_member_pattern(filetype) "{{{$/;"	f
get_mirror_placeholder_marker_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:get_mirror_placeholder_marker_pattern() "{{{$/;"	f
get_mirror_placeholder_marker_substitute_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:get_mirror_placeholder_marker_substitute_pattern() "{{{$/;"	f
get_omni_funcs	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_omni_funcs(filetype) "{{{$/;"	f
get_omni_list	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_omni_list(list) "{{{$/;"	f
get_placeholder_marker_default_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:get_placeholder_marker_default_pattern() "{{{$/;"	f
get_placeholder_marker_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:get_placeholder_marker_pattern() "{{{$/;"	f
get_placeholder_marker_substitute_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:get_placeholder_marker_substitute_pattern() "{{{$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_script_candidates	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_script_candidates(bufnumber) "{{{$/;"	f
get_snippet_candidates	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^function! s:get_snippet_candidates(dirs) "{{{$/;"	f
get_snippet_range	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:get_snippet_range(begin_line, begin_patterns, end_line, end_patterns) "{{{$/;"	f
get_sources_filetypes	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:get_sources_filetypes(filetype) "{{{$/;"	f
get_sources_list	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:get_sources_list() "{{{$/;"	f
get_sources_list	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_sources_list() "{{{$/;"	f
get_sync_placeholder_marker_default_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:get_sync_placeholder_marker_default_pattern() "{{{$/;"	f
get_sync_placeholder_marker_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:get_sync_placeholder_marker_pattern() "{{{$/;"	f
get_variable_type	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_variable_type(expression) "{{{$/;"	f
get_variablelist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_variablelist(dict, prefix) "{{{$/;"	f
get_visual_selection	bundle/vim-expand-region/autoload/expand_region.vim	/^function! s:get_visual_selection()$/;"	f
getbookmarks	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getbookmarks()$/;"	f
getchar	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:getchar(...)$/;"	f
getchar	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:getchar(...)$/;"	f
getchar	bundle/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getchar_safe	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:getchar_safe(...)$/;"	f
getchar_safe	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:getchar_safe(...)$/;"	f
getenv	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getenv()$/;"	f
getextvar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getextvar(key)$/;"	f
getfilename	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^function! s:getfilename(cache_dir, filename)$/;"	f
gethistdata	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistdata()$/;"	f
gethistloc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistloc()$/;"	f
getinput	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getinput(...)$/;"	f
getinput	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getinput(str, ...)$/;"	f
getlist	bundle/vim-rails/autoload/rails.vim	/^function! s:getlist(arg, key)$/;"	f
getnewmix	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:getnewmix(cwd, clim)$/;"	f
getparent	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getparent(item)$/;"	f
getregs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getregs()$/;"	f
getundo	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:getundo()$/;"	f
gf	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> gf         :<C-U>exe <SID>gf(v:count1,"gf",'edit')<CR>$/;"	m
gf	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:gf(count,map,edit) abort$/;"	f
gg	bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal gg$/;"	m
ggVG"_d	bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal ggVG"_d$/;"	m
glbpath	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:glbpath(...)$/;"	f
glob	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^  function! s:glob(expr)$/;"	f
glob	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^  function! s:glob(expr)$/;"	f
global_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, event_handler_attributes)$/;"	v
global_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, microdata_attributes)$/;"	v
global_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, rdfa_attributes)$/;"	v
global_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, {'role': role})$/;"	v
global_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^let global_attributes = extend(core_attributes, xml_attributes)$/;"	v
globdirs	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:globdirs(dirs, depth)$/;"	f
globpath	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:globpath(path, expr)$/;"	f
globpath	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:globpath(path, expr)$/;"	f
gsub	bundle/vim-rails/autoload/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
handleLeftClick	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:handleMiddleMouse()$/;"	f
has	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:has(list, Value)$/;"	f
has_doc	bundle/vundle/autoload/vundle/installer.vim	/^func! s:has_doc(rtp) abort$/;"	f
has_index	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:has_index(list, index)$/;"	f
has_vimproc	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:has_vimproc()$/;"	f
has_vimproc	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:has_vimproc()$/;"	f
head_filter	bundle/neocomplcache/autoload/neocomplcache/filters.vim	/^function! s:head_filter(list, complete_str) "{{{$/;"	f
headntail	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:headntail(str)$/;"	f
helpermethods	bundle/vim-rails/autoload/rails.vim	/^function! s:helpermethods()$/;"	f
helptags	bundle/vundle/autoload/vundle/installer.vim	/^func! s:helptags(rtp) abort$/;"	f
highlight	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:highlight(pat, grp)$/;"	f
highlight	bundle/vim-airline/plugin/airline.vim	/^function! s:highlight(mode)$/;"	f
htmlcomplete#CheckDoctype	bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CompleteTags	bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#LoadAria	bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadAria() " {{{$/;"	f
htmlcomplete#LoadData	bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
iM	bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iconv	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:iconv(expr, from, to)$/;"	f
iconv	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:iconv(expr, from, to)$/;"	f
iconv	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:iconv(expr, from, to)$/;"	f
ignore	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ignore()$/;"	f
im	bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
import	bundle/neocomplcache/autoload/vital/_a477c91.vim	/^function! s:import(name, ...)$/;"	f
import	bundle/neosnippet/autoload/vital/_08a462e.vim	/^function! s:import(name, ...)$/;"	f
indent_snippet	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:indent_snippet(begin, end) "{{{$/;"	f
init	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:init() "{{{$/;"	f
init	bundle/vundle/test/files/test.erl	/^init(_) ->$/;"	f	module:mmc_logmon_sup
initOpenURL	bundle/vim-rails/autoload/rails.vim	/^function! s:initOpenURL()$/;"	f
initVariable	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
initialize	bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def initialize(path)$/;"	f	class:VimRubyInstaller.BackupDir
initialize	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(directory, writer)$/;"	f	class:TargetDirectory
initialize	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(ending, file_permissions=0644, directory_permissions=0755)$/;"	f	class:FileWriter
initialize	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(source, target)$/;"	f	class:VimRubyInstaller
initialize_cache	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:initialize_cache() "{{{$/;"	f
initialize_include	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:initialize_include(filename, filetype) "{{{$/;"	f
initialize_options	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:initialize_options(options) "{{{$/;"	f
initialize_others	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:initialize_others() "{{{$/;"	f
initialize_script_variables	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:initialize_script_variables() "{{{$/;"	f
initialize_snippet	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:initialize_snippet(dict, path, line, pattern, name) "{{{$/;"	f
initialize_snippet_options	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:initialize_snippet_options() "{{{$/;"	f
initialize_source	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:initialize_source(srcname) "{{{$/;"	f
initialize_source	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:initialize_source(srcname) "{{{$/;"	f
initialize_tags	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:initialize_tags(filename) "{{{$/;"	f
initialize_variables	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:initialize_variables() "{{{$/;"	f
input2	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let input2 = substitute(input, '(', s:l, 'g')$/;"	v
input2	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let input2 = substitute(input2, ')', s:r, 'g')$/;"	v
input_helper	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:input_helper(funcname, args)$/;"	f
input_helper	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:input_helper(funcname, args)$/;"	f
input_q	bundle/delimitMate/test/autoclose_quotes.vim	/^    let input_q = substitute(input,"'" , escape(escape(quote, '"'), '\\'), 'g')$/;"	v
input_safe	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:input_safe(...)$/;"	f
input_safe	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:input_safe(...)$/;"	f
inputreplacement	bundle/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	bundle/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	bundle/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
insertcache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertcache(str)$/;"	f
insertstr	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertstr()$/;"	f
install	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def install$/;"	f	class:VimRubyInstaller
install_file	bundle/html5.vim/Makefile	/^install_file = \\$/;"	m
install_git_source	bundle/html5.vim/Makefile	/^install_git_source = \\$/;"	m
install_plugin	bundle/ZenCoding.vim/plugin/zencoding.vim	/^function! s:install_plugin()$/;"	f
install_source	bundle/html5.vim/Makefile	/^install_source = \\$/;"	m
invertrange	bundle/vim-rails/autoload/rails.vim	/^function! s:invertrange(beg,end)$/;"	f
is_beginning_of_line	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:is_beginning_of_line(cur_text) "{{{$/;"	f
is_cursor_inside	bundle/vim-expand-region/autoload/expand_region.vim	/^function! s:is_cursor_inside(pos, region)$/;"	f
is_cygwin	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:is_cygwin()$/;"	f
is_cygwin	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:is_cygwin()$/;"	f
is_dict	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:is_dict(Value)$/;"	f
is_dict	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:is_dict(Value)$/;"	f
is_excluded_window	bundle/vim-airline/plugin/airline.vim	/^function! s:is_excluded_window()$/;"	f
is_float	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:is_float(Value)$/;"	f
is_float	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:is_float(Value)$/;"	f
is_funcref	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:is_funcref(Value)$/;"	f
is_funcref	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:is_funcref(Value)$/;"	f
is_integer	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:is_integer(Value)$/;"	f
is_integer	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:is_integer(Value)$/;"	f
is_list	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:is_list(Value)$/;"	f
is_list	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:is_list(Value)$/;"	f
is_mac	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:is_mac()$/;"	f
is_mac	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:is_mac()$/;"	f
is_number	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:is_number(Value)$/;"	f
is_number	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:is_number(Value)$/;"	f
is_numeric	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:is_numeric(Value)$/;"	f
is_numeric	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:is_numeric(Value)$/;"	f
is_skip_auto_complete	bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! s:is_skip_auto_complete(cur_text) "{{{$/;"	f
is_string	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:is_string(Value)$/;"	f
is_string	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:is_string(Value)$/;"	f
is_unix	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:is_unix()$/;"	f
is_windows	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:is_windows()$/;"	f
is_windows	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:is_windows()$/;"	f
iscmdwin	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:iscmdwin()$/;"	f
ispathitem	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ispathitem()$/;"	f
itemsnumber	bundle/delimitMate/test/autoclose_matchpairs.vim	/^let itemsnumber = len(split(g:delimitMate_matchpairs, ','))$/;"	v
itemsnumber	bundle/delimitMate/test/autoclose_quotes.vim	/^let itemsnumber = len(split(g:delimitMate_quotes, ' '))$/;"	v
j	conf/mappings.vim	/^noremap j gj$/;"	m
javascriptEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptEdit(cmd,...)$/;"	f
javascriptList	bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptList(A,L,P)$/;"	f
jumpToFirstChild	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToRoot()$/;"	f
k	conf/mappings.vim	/^noremap k gk$/;"	m
keyword_escape	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! s:keyword_escape(complete_str) "{{{$/;"	f
keyword_filter	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:keyword_filter(snippets, cur_keyword_str) "{{{$/;"	f
landmark_role	bundle/html5.vim/autoload/xml/aria.vim	/^let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'search']$/;"	v
landmark_role	bundle/html5.vim/autoload/xml/html5.vim	/^    let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'search']$/;"	v
lang_tag	bundle/html5.vim/autoload/xml/html5.vim	/^let lang_tag = [$/;"	v
lash	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lash(...)$/;"	f
lash	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! s:lash(...)$/;"	f
lastmethod	bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethod(...)$/;"	f
lastmethodline	bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethodline(start)$/;"	f
lastopeningline	bundle/vim-rails/autoload/rails.vim	/^function! s:lastopeningline(pattern,limit,start)$/;"	f
lastvisual	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lastvisual()$/;"	f
layoutEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:layoutEdit(cmd,...)$/;"	f
layoutList	bundle/vim-rails/autoload/rails.vim	/^function! s:layoutList(A,L,P)$/;"	f
leavepre	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:leavepre()$/;"	f
line	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let line = getline('.')$/;"	v
line	bundle/delimitMate/test/autoclose_quotes.vim	/^    let line = getline('.')$/;"	v
lineout	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:lineout(dict)$/;"	f
linepeak	bundle/vim-rails/autoload/rails.vim	/^function! s:linepeak()$/;"	f
lines	bundle/delimitMate/test/autoclose_matchpairs.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	bundle/delimitMate/test/autoclose_quotes.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	bundle/delimitMate/test/expand_cr.vim	/^  let lines = getline(1, line('$'))$/;"	v
lines	bundle/delimitMate/test/expand_cr.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	bundle/delimitMate/test/expand_space.vim	/^  let lines = getline(1, line('$'))$/;"	v
lines	bundle/delimitMate/test/expand_space.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
link_file	bundle/html5.vim/Makefile	/^link_file = \\$/;"	m
linkreltypes	bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linktypes + ['canonical']$/;"	v
linktypes	bundle/html5.vim/autoload/xml/html5.vim	/^let linktypes = ['alternate', 'author', 'bookmark', 'external', 'help', 'icon', 'license', 'next', 'nofollow', 'noreferrer', 'pingback', 'prefetch', 'prev', 'search', 'stylesheet', 'sidebar', 'tag']$/;"	v
live_region_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let live_region_attributes = {'aria-atomic': ['true', 'false'], 'aria-busy': ['true', 'false'], 'aria-live': ['off', 'polite', 'assertive'], 'aria-relevant': ['additions', 'removals', 'text', 'all', 'additions text']}$/;"	v
load	bundle/neocomplcache/autoload/vital/_a477c91.vim	/^function! s:load(...) dict$/;"	f
load	bundle/neosnippet/autoload/vital/_08a462e.vim	/^function! s:load(...) dict$/;"	f
load_from_file	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:load_from_file(filename, pattern_file_name, mark, minlen, maxfilename, fileencoding, is_string) "{{{$/;"	f
load_from_tags	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:load_from_tags(filename, pattern_file_name, mark, minlen, maxfilename, fileencoding) "{{{$/;"	f
load_scripts	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:load_scripts(bang)$/;"	f
loaded_nerd_comments	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let loaded_nerd_comments = 1$/;"	v
loaded_nerd_tree	bundle/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
localeEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:localeEdit(cmd,...)$/;"	f
localeList	bundle/vim-rails/autoload/rails.vim	/^function! s:localeList(A,L,P)$/;"	f
log	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:log(m)$/;"	f
log	bundle/vundle/autoload/vundle/installer.vim	/^func! s:log(str) abort$/;"	f
lsCmd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lsCmd()$/;"	f
main	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:main(argv) "{{{$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([FileName | LibDirs]) ->$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([FileName]) ->$/;"	f
main_syntax	bundle/JavaScript-syntax/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	bundle/jQuery/syntax/jquery.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	bundle/vim-json/syntax/json.vim	/^  let main_syntax = 'json'$/;"	v
main_syntax	bundle/vim-ruby/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
make	bundle/vim-rails/autoload/rails.vim	/^function! s:make(bang, args, ...)$/;"	f
make_completion_list	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:make_completion_list(list, kind) "{{{$/;"	f
mapleader	conf/mappings.vim	/^let mapleader = ","$/;"	v
maplocalleader	conf/mappings.vim	/^let maplocalleader = ","$/;"	v
match_pair	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:match_pair(string, start_pattern, end_pattern, start_cnt) "{{{$/;"	f
match_type	bundle/vim-rails/autoload/rails.vim	/^function! s:match_type(type,...)$/;"	f
match_wildcard	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! s:match_wildcard(cur_text, pattern, complete_pos) "{{{$/;"	f
matchcursor	bundle/vim-rails/autoload/rails.vim	/^function! s:matchcursor(pat)$/;"	f
matcher.filter	bundle/neocomplcache/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	bundle/neocomplcache/autoload/neocomplcache/filters/matcher_head.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	bundle/neocomplcache/autoload/neocomplcache/filters/matcher_old.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matchfname	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchfname(item, pat)$/;"	f
matchlens	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchlens(str, pat, ...)$/;"	f
matchtabe	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabe(item, pat)$/;"	f
matchtabs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabs(item, pat)$/;"	f
max	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:max(len, max)$/;"	f
max	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:max(list, expr)$/;"	f
maxf	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:maxf(len)$/;"	f
mergeConfig	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! s:mergeConfig(lhs, rhs)$/;"	f
mergelists	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:mergelists()$/;"	f
metadata_elements	bundle/html5.vim/autoload/xml/html5.vim	/^let metadata_elements = ['link', 'style', 'meta', 'script', 'noscript', 'command']$/;"	v
mextargs	bundle/vim-rails/autoload/rails.vim	/^function! s:mextargs(str,num)$/;"	f
mfunc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mfunc()$/;"	f
microdata_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let microdata_attributes = {'itemid': [], 'itemscope': ['itemscope', ''], 'itemtype': [], 'itemprop': [], 'itemref': []}$/;"	v
microdata_attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^    let microdata_attributes_value = {$/;"	v
migemo	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:migemo(str)$/;"	f
migrationEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:migrationEdit(cmd,...)$/;"	f
migrationList	bundle/vim-rails/autoload/rails.vim	/^function! s:migrationList(A,L,P)$/;"	f
migspc	bundle/vim-rails/autoload/rails.vim	/^function! s:migspc(line)$/;"	f
min	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:min(list, expr)$/;"	f
mixedsort	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mixedsort(...)$/;"	f
mkeep	bundle/vim-rails/autoload/rails.vim	/^function! s:mkeep(str)$/;"	f
mkpath	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def mkpath(directory)$/;"	f	class:FileWriter
mmc_logmon_sup	bundle/vundle/test/files/test.erl	/^-module(mmc_logmon_sup).$/;"	m
mmode	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mmode()$/;"	f
model	bundle/vim-rails/autoload/rails.vim	/^function! s:model(...)$/;"	f
modevar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:modevar()$/;"	f
modify	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:modify(entry, type)$/;"	f
msg	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:msg(name, cwd)$/;"	f
mtype	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mtype()$/;"	f
multipliers	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:multipliers(...)$/;"	f
narrowable	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:narrowable()$/;"	f
neocomplcache	bundle/neocomplcache/plugin/neocomplcache.vim	/^  augroup neocomplcache$/;"	a
neocomplcache#add_dictionaries	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#add_dictionaries(dictionaries) "{{{$/;"	f
neocomplcache#async_cache#main	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! neocomplcache#async_cache#main(argv) "{{{$/;"	f
neocomplcache#available_sources	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#available_sources() "{{{$/;"	f
neocomplcache#cache#async_load_from_file	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#async_load_from_file(cache_dir, filename, pattern, mark) "{{{$/;"	f
neocomplcache#cache#async_load_from_tags	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#async_load_from_tags(cache_dir, filename, filetype, mark, is_create_tags) "{{{$/;"	f
neocomplcache#cache#check_cache	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_cache(cache_dir, key, async_cache_dictionary, keyword_list_dictionary, ...) "{{{$/;"	f
neocomplcache#cache#check_cache_list	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_cache_list(cache_dir, key, async_cache_dictionary, index_keyword_list, ...) "{{{$/;"	f
neocomplcache#cache#check_old_cache	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_old_cache(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#encode_name	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#encode_name(cache_dir, filename)$/;"	f
neocomplcache#cache#filereadable	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#filereadable(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#getfilename	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#getfilename(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#index_load_from_cache	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#index_load_from_cache(cache_dir, filename, ...) "{{{$/;"	f
neocomplcache#cache#list2index	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#list2index(list, dictionary, is_string) "{{{$/;"	f
neocomplcache#cache#load_from_cache	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#load_from_cache(cache_dir, filename, ...) "{{{$/;"	f
neocomplcache#cache#readfile	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#readfile(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#save_cache	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#save_cache(cache_dir, filename, keyword_list) "{{{$/;"	f
neocomplcache#cache#save_cache_old	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#save_cache_old(cache_dir, filename, keyword_list) "{{{$/;"	f
neocomplcache#cache#test_async	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#test_async() "{{{$/;"	f
neocomplcache#cache#writefile	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#writefile(cache_dir, filename, list) "{{{$/;"	f
neocomplcache#cancel_popup	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#cancel_popup()$/;"	f
neocomplcache#check_completion_length_match	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#check_completion_length_match(complete_str, completion_length) "{{{$/;"	f
neocomplcache#check_invalid_omnifunc	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#check_invalid_omnifunc(omnifunc) "{{{$/;"	f
neocomplcache#check_match_filter	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#check_match_filter(complete_str) "{{{$/;"	f
neocomplcache#close_popup	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#close_popup()$/;"	f
neocomplcache#commands#_clean	bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_clean() "{{{$/;"	f
neocomplcache#commands#_initialize	bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_initialize() "{{{$/;"	f
neocomplcache#commands#_lock	bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_lock() "{{{$/;"	f
neocomplcache#commands#_lock_source	bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_lock_source(source_name) "{{{$/;"	f
neocomplcache#commands#_set_file_type	bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_set_file_type(filetype) "{{{$/;"	f
neocomplcache#commands#_toggle_lock	bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_toggle_lock() "{{{$/;"	f
neocomplcache#commands#_unlock	bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_unlock() "{{{$/;"	f
neocomplcache#commands#_unlock_source	bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_unlock_source(source_name) "{{{$/;"	f
neocomplcache#complete#_get_complete_pos	bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_get_complete_pos(sources) "{{{$/;"	f
neocomplcache#complete#_get_results	bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_get_results(cur_text, ...) "{{{$/;"	f
neocomplcache#complete#_get_words	bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_get_words(sources, complete_pos, complete_str) "{{{$/;"	f
neocomplcache#complete#_set_results_pos	bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_set_results_pos(cur_text, ...) "{{{$/;"	f
neocomplcache#complete#_set_results_words	bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_set_results_words(sources) "{{{$/;"	f
neocomplcache#complete#auto_complete	bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#auto_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#manual_complete	bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#manual_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#sources_manual_complete	bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#sources_manual_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#unite_complete	bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#unite_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete_check	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#complete_check() "{{{$/;"	f
neocomplcache#complete_common_string	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#complete_common_string()$/;"	f
neocomplcache#context_filetype#get	bundle/neocomplcache/autoload/neocomplcache/context_filetype.vim	/^function! neocomplcache#context_filetype#get(filetype) "{{{$/;"	f
neocomplcache#context_filetype#initialize	bundle/neocomplcache/autoload/neocomplcache/context_filetype.vim	/^function! neocomplcache#context_filetype#initialize() "{{{$/;"	f
neocomplcache#context_filetype#set	bundle/neocomplcache/autoload/neocomplcache/context_filetype.vim	/^function! neocomplcache#context_filetype#set() "{{{$/;"	f
neocomplcache#custom_source	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#custom_source(source_name, option_name, value) "{{{$/;"	f
neocomplcache#define_filter	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#define_filter(filter) "{{{$/;"	f
neocomplcache#define_source	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#define_source(source) "{{{$/;"	f
neocomplcache#dictionary_filter	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#dictionary_filter(dictionary, complete_str) "{{{$/;"	f
neocomplcache#disable_default_dictionary	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#disable_default_dictionary(variable) "{{{$/;"	f
neocomplcache#dup_filter	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#dup_filter(list) "{{{$/;"	f
neocomplcache#escape_match	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#escape_match(str) "{{{$/;"	f
neocomplcache#exists_echodoc	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#exists_echodoc() "{{{$/;"	f
neocomplcache#filetype_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplcache#filters#converter_abbr#define	bundle/neocomplcache/autoload/neocomplcache/filters/converter_abbr.vim	/^function! neocomplcache#filters#converter_abbr#define() "{{{$/;"	f
neocomplcache#filters#converter_case#define	bundle/neocomplcache/autoload/neocomplcache/filters/converter_case.vim	/^function! neocomplcache#filters#converter_case#define() "{{{$/;"	f
neocomplcache#filters#converter_delimiter#define	bundle/neocomplcache/autoload/neocomplcache/filters/converter_delimiter.vim	/^function! neocomplcache#filters#converter_delimiter#define() "{{{$/;"	f
neocomplcache#filters#converter_nothing#define	bundle/neocomplcache/autoload/neocomplcache/filters/converter_nothing.vim	/^function! neocomplcache#filters#converter_nothing#define() "{{{$/;"	f
neocomplcache#filters#converter_remove_next_keyword#define	bundle/neocomplcache/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^function! neocomplcache#filters#converter_remove_next_keyword#define() "{{{$/;"	f
neocomplcache#filters#converter_remove_next_keyword#get_next_keyword	bundle/neocomplcache/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^function! neocomplcache#filters#converter_remove_next_keyword#get_next_keyword(source_name) "{{{$/;"	f
neocomplcache#filters#dictionary_filter	bundle/neocomplcache/autoload/neocomplcache/filters.vim	/^function! neocomplcache#filters#dictionary_filter(dictionary, complete_str) "{{{$/;"	f
neocomplcache#filters#keyword_filter	bundle/neocomplcache/autoload/neocomplcache/filters.vim	/^function! neocomplcache#filters#keyword_filter(list, complete_str) "{{{$/;"	f
neocomplcache#filters#matcher_fuzzy#define	bundle/neocomplcache/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^function! neocomplcache#filters#matcher_fuzzy#define() "{{{$/;"	f
neocomplcache#filters#matcher_head#define	bundle/neocomplcache/autoload/neocomplcache/filters/matcher_head.vim	/^function! neocomplcache#filters#matcher_head#define() "{{{$/;"	f
neocomplcache#filters#matcher_old#define	bundle/neocomplcache/autoload/neocomplcache/filters/matcher_old.vim	/^function! neocomplcache#filters#matcher_old#define() "{{{$/;"	f
neocomplcache#filters#sorter_length#define	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_length.vim	/^function! neocomplcache#filters#sorter_length#define() "{{{$/;"	f
neocomplcache#filters#sorter_nothing#define	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_nothing.vim	/^function! neocomplcache#filters#sorter_nothing#define() "{{{$/;"	f
neocomplcache#filters#sorter_rank#define	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_rank.vim	/^function! neocomplcache#filters#sorter_rank#define() "{{{$/;"	f
neocomplcache#get_completion_length	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_completion_length(source_name) "{{{$/;"	f
neocomplcache#get_context	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_context() "{{{$/;"	f
neocomplcache#get_context_filetype	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_context_filetype(...) "{{{$/;"	f
neocomplcache#get_context_filetype_range	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_context_filetype_range(...) "{{{$/;"	f
neocomplcache#get_cur_text	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_cur_text(...) "{{{$/;"	f
neocomplcache#get_current_neocomplcache	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_current_neocomplcache() "{{{$/;"	f
neocomplcache#get_keyword_pattern	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_keyword_pattern(...) "{{{$/;"	f
neocomplcache#get_keyword_pattern_end	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_keyword_pattern_end(...) "{{{$/;"	f
neocomplcache#get_next_keyword	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_next_keyword() "{{{$/;"	f
neocomplcache#get_next_keyword_pattern	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_next_keyword_pattern(...) "{{{$/;"	f
neocomplcache#get_source_filetypes	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_source_filetypes(filetype) "{{{$/;"	f
neocomplcache#get_sources_list	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_sources_list(dictionary, filetype) "{{{$/;"	f
neocomplcache#get_temporary_directory	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_temporary_directory() "{{{$/;"	f
neocomplcache#handler#_change_update_time	bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_change_update_time() "{{{$/;"	f
neocomplcache#handler#_do_auto_complete	bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_do_auto_complete(event) "{{{$/;"	f
neocomplcache#handler#_on_complete_done	bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_complete_done() "{{{$/;"	f
neocomplcache#handler#_on_insert_enter	bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_insert_enter() "{{{$/;"	f
neocomplcache#handler#_on_insert_leave	bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_insert_leave() "{{{$/;"	f
neocomplcache#handler#_on_moved_i	bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_moved_i() "{{{$/;"	f
neocomplcache#handler#_on_write_post	bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_write_post() "{{{$/;"	f
neocomplcache#handler#_restore_update_time	bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_restore_update_time() "{{{$/;"	f
neocomplcache#has_vimproc	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#has_vimproc() "{{{$/;"	f
neocomplcache#head_match	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#head_match(checkstr, headstr) "{{{$/;"	f
neocomplcache#helper#call_filters	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#call_filters(filters, source, context) "{{{$/;"	f
neocomplcache#helper#call_hook	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#call_hook(sources, hook_name, context) "{{{$/;"	f
neocomplcache#helper#clear_result	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#clear_result() "{{{$/;"	f
neocomplcache#helper#complete_check	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#complete_check() "{{{$/;"	f
neocomplcache#helper#filetype_complete	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplcache#helper#ftdictionary2list	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#ftdictionary2list(dictionary, filetype) "{{{$/;"	f
neocomplcache#helper#get_completion_length	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_completion_length(plugin_name) "{{{$/;"	f
neocomplcache#helper#get_cur_text	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_cur_text() "{{{$/;"	f
neocomplcache#helper#get_source_filetypes	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_source_filetypes(filetype) "{{{$/;"	f
neocomplcache#helper#get_sources_list	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_sources_list(...) "{{{$/;"	f
neocomplcache#helper#get_syn_name	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_syn_name(is_trans) "{{{$/;"	f
neocomplcache#helper#is_enabled_source	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#is_enabled_source(source_name) "{{{$/;"	f
neocomplcache#helper#is_omni_complete	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#is_omni_complete(cur_text) "{{{$/;"	f
neocomplcache#helper#keyword_escape	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#keyword_escape(complete_str) "{{{$/;"	f
neocomplcache#helper#match_word	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#match_word(cur_text, ...) "{{{$/;"	f
neocomplcache#helper#unite_patterns	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#unite_patterns(pattern_var, filetype) "{{{$/;"	f
neocomplcache#init#_autocmds	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_autocmds() "{{{$/;"	f
neocomplcache#init#_current_neocomplcache	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_current_neocomplcache() "{{{$/;"	f
neocomplcache#init#_filter	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_filter(filter) "{{{$/;"	f
neocomplcache#init#_filters	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_filters(names) "{{{$/;"	f
neocomplcache#init#_others	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_others() "{{{$/;"	f
neocomplcache#init#_source	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_source(source) "{{{$/;"	f
neocomplcache#init#_sources	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_sources(names) "{{{$/;"	f
neocomplcache#init#_variables	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_variables() "{{{$/;"	f
neocomplcache#init#disable	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#disable() "{{{$/;"	f
neocomplcache#init#enable	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#enable() "{{{$/;"	f
neocomplcache#init#is_enabled	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#is_enabled() "{{{$/;"	f
neocomplcache#init#lazy	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#lazy() "{{{$/;"	f
neocomplcache#initialize	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#initialize() "{{{$/;"	f
neocomplcache#is_auto_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_auto_complete() "{{{$/;"	f
neocomplcache#is_auto_select	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_auto_select() "{{{$/;"	f
neocomplcache#is_disabled_source	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_disabled_source(source_name) "{{{$/;"	f
neocomplcache#is_enabled	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_enabled() "{{{$/;"	f
neocomplcache#is_enabled_source	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_enabled_source(source_name) "{{{$/;"	f
neocomplcache#is_eskk_convertion	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_eskk_convertion(cur_text) "{{{$/;"	f
neocomplcache#is_eskk_enabled	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_eskk_enabled() "{{{$/;"	f
neocomplcache#is_locked	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_locked(...) "{{{$/;"	f
neocomplcache#is_multibyte_input	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_multibyte_input(cur_text) "{{{$/;"	f
neocomplcache#is_plugin_locked	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_plugin_locked(source_name) "{{{$/;"	f
neocomplcache#is_prefetch	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_prefetch() "{{{$/;"	f
neocomplcache#is_sources_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_sources_complete() "{{{$/;"	f
neocomplcache#is_text_mode	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_text_mode() "{{{$/;"	f
neocomplcache#is_win	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_win() "{{{$/;"	f
neocomplcache#is_windows	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_windows() "{{{$/;"	f
neocomplcache#keyword_escape	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#keyword_escape(complete_str) "{{{$/;"	f
neocomplcache#keyword_filter	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#keyword_filter(list, complete_str) "{{{$/;"	f
neocomplcache#mappings#cancel_popup	bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#cancel_popup() "{{{$/;"	f
neocomplcache#mappings#close_popup	bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#close_popup() "{{{$/;"	f
neocomplcache#mappings#complete_common_string	bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#complete_common_string() "{{{$/;"	f
neocomplcache#mappings#define_default_mappings	bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#define_default_mappings() "{{{$/;"	f
neocomplcache#mappings#popup_post	bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#popup_post() "{{{$/;"	f
neocomplcache#mappings#smart_close_popup	bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#smart_close_popup() "{{{$/;"	f
neocomplcache#mappings#start_manual_complete	bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#start_manual_complete(...) "{{{$/;"	f
neocomplcache#mappings#start_manual_complete_list	bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#start_manual_complete_list(complete_pos, complete_str, candidates) "{{{$/;"	f
neocomplcache#mappings#undo_completion	bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#undo_completion() "{{{$/;"	f
neocomplcache#match_word	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#match_word(...) "{{{$/;"	f
neocomplcache#pack_dictionary	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#pack_dictionary(list) "{{{$/;"	f
neocomplcache#print_caching	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_caching(string) "{{{$/;"	f
neocomplcache#print_debug	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_debug(expr) "{{{$/;"	f
neocomplcache#print_error	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_error(string) "{{{$/;"	f
neocomplcache#print_warning	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_warning(string) "{{{$/;"	f
neocomplcache#set_completion_length	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#set_completion_length(source_name, length) "{{{$/;"	f
neocomplcache#set_dictionary_helper	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#set_dictionary_helper(variable, keys, value) "{{{$/;"	f
neocomplcache#skip_next_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#skip_next_complete() "{{{$/;"	f
neocomplcache#smart_close_popup	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#smart_close_popup()$/;"	f
neocomplcache#sources#buffer_complete#caching_buffer	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_buffer(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#caching_current_block	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_current_block() "{{{$/;"	f
neocomplcache#sources#buffer_complete#caching_current_line	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_current_line() "{{{$/;"	f
neocomplcache#sources#buffer_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#define() "{{{$/;"	f
neocomplcache#sources#buffer_complete#disable_caching	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#disable_caching(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#enable_caching	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#enable_caching(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#get_frequencies	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#get_frequencies() "{{{$/;"	f
neocomplcache#sources#buffer_complete#output_keyword	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#output_keyword(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#print_source	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#print_source(name) "{{{$/;"	f
neocomplcache#sources#dictionary_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! neocomplcache#sources#dictionary_complete#define() "{{{$/;"	f
neocomplcache#sources#dictionary_complete#recaching	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! neocomplcache#sources#dictionary_complete#recaching(filetype) "{{{$/;"	f
neocomplcache#sources#filename_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! neocomplcache#sources#filename_complete#define() "{{{$/;"	f
neocomplcache#sources#filename_complete#get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! neocomplcache#sources#filename_complete#get_complete_words(complete_str, path) "{{{$/;"	f
neocomplcache#sources#filename_include#define	bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! neocomplcache#sources#filename_include#define() "{{{$/;"	f
neocomplcache#sources#include_complete#analyze_ruby_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#analyze_ruby_include_files(lines, path) "{{{$/;"	f
neocomplcache#sources#include_complete#analyze_vim_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#analyze_vim_include_files(lines, path) "{{{$/;"	f
neocomplcache#sources#include_complete#caching_include	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#caching_include(bufname) "{{{$/;"	f
neocomplcache#sources#include_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#define() "{{{$/;"	f
neocomplcache#sources#include_complete#get_current_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_current_include_files() "{{{$/;"	f
neocomplcache#sources#include_complete#get_include_files	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_include_files(bufnumber) "{{{$/;"	f
neocomplcache#sources#include_complete#get_include_tags	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_include_tags(bufnumber) "{{{$/;"	f
neocomplcache#sources#member_complete#caching_current_buffer	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#caching_current_buffer() "{{{$/;"	f
neocomplcache#sources#member_complete#caching_current_line	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#caching_current_line() "{{{$/;"	f
neocomplcache#sources#member_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#define() "{{{$/;"	f
neocomplcache#sources#omni_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! neocomplcache#sources#omni_complete#define() "{{{$/;"	f
neocomplcache#sources#snippets_complete#define	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^function! neocomplcache#sources#snippets_complete#define() "{{{$/;"	f
neocomplcache#sources#syntax_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! neocomplcache#sources#syntax_complete#define() "{{{$/;"	f
neocomplcache#sources#syntax_complete#recaching	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! neocomplcache#sources#syntax_complete#recaching(filetype) "{{{$/;"	f
neocomplcache#sources#tags_complete#caching_tags	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! neocomplcache#sources#tags_complete#caching_tags(force) "{{{$/;"	f
neocomplcache#sources#tags_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! neocomplcache#sources#tags_complete#define() "{{{$/;"	f
neocomplcache#sources#vim_complete#define	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#define() "{{{$/;"	f
neocomplcache#sources#vim_complete#get_command	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#get_command(cur_text) "{{{$/;"	f
neocomplcache#sources#vim_complete#get_cur_text	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#get_cur_text() "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#augroup	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#augroup(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#autocmd_args	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#autocmd_args(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#buffer	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#buffer(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#colorscheme_args	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#colorscheme_args(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#command	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#command(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#command_args	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#command_args(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#custom	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#custom(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#customlist	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#customlist(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#dir	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#dir(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#environment	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#environment(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#event	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#event(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#execute	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#execute(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#expand	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#expand(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#expression	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#expression(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#feature	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#feature(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#file	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#file(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#filetype	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#filetype(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#function	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#function(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#get_command_completion	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#get_command_completion(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#get_completion_name	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#get_completion_name(command_name) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#help	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#help(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#highlight	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#highlight(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#let	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#let(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#mapping	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#mapping(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#menu	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#menu(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#on_filetype	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#on_filetype() "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#option	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#option(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#recaching	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#recaching(bufname) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#shellcmd	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#shellcmd(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#tag	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#tag(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#tag_listfiles	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#tag_listfiles(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#var	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#var(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#var_dictionary	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#var_dictionary(cur_text, complete_str) "{{{$/;"	f
neocomplcache#start_manual_complete	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#start_manual_complete(...)$/;"	f
neocomplcache#system	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#system(...) "{{{$/;"	f
neocomplcache#undo_completion	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#undo_completion()$/;"	f
neocomplcache#unpack_dictionary	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#unpack_dictionary(dict) "{{{$/;"	f
neocomplcache#util#convert2list	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#convert2list(expr) "{{{$/;"	f
neocomplcache#util#disable_default_dictionary	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#disable_default_dictionary(variable) "{{{$/;"	f
neocomplcache#util#dup_filter	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#dup_filter(list) "{{{$/;"	f
neocomplcache#util#escape_pattern	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#escape_pattern(...) "{{{$/;"	f
neocomplcache#util#expand	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#expand(path) "{{{$/;"	f
neocomplcache#util#get_last_status	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#get_last_status(...) "{{{$/;"	f
neocomplcache#util#glob	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#glob(pattern, ...) "{{{$/;"	f
neocomplcache#util#has_lua	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_lua() "{{{$/;"	f
neocomplcache#util#has_vimproc	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_vimproc() "{{{$/;"	f
neocomplcache#util#has_vimproc	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_vimproc(...) "{{{$/;"	f
neocomplcache#util#iconv	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#iconv(...) "{{{$/;"	f
neocomplcache#util#is_mac	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_mac(...) "{{{$/;"	f
neocomplcache#util#is_windows	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_windows(...) "{{{$/;"	f
neocomplcache#util#join_rtp	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#join_rtp(list) "{{{$/;"	f
neocomplcache#util#mb_strlen	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#mb_strlen(...) "{{{$/;"	f
neocomplcache#util#set_default	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_default(var, val, ...)  "{{{$/;"	f
neocomplcache#util#set_default_dictionary	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_default_dictionary(variable, keys, value) "{{{$/;"	f
neocomplcache#util#set_dictionary_helper	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_dictionary_helper(...) "{{{$/;"	f
neocomplcache#util#sort_by	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#sort_by(...)$/;"	f
neocomplcache#util#split_rtp	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#split_rtp(...) "{{{$/;"	f
neocomplcache#util#strchars	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strchars(...) "{{{$/;"	f
neocomplcache#util#strwidthpart	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strwidthpart(...) "{{{$/;"	f
neocomplcache#util#strwidthpart_reverse	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strwidthpart_reverse(...) "{{{$/;"	f
neocomplcache#util#substitute_path_separator	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#substitute_path_separator(...) "{{{$/;"	f
neocomplcache#util#system	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#system(...) "{{{$/;"	f
neocomplcache#util#truncate	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#truncate(...) "{{{$/;"	f
neocomplcache#util#truncate_smart	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#truncate_smart(...) "{{{$/;"	f
neocomplcache#util#uniq	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#uniq(...) "{{{$/;"	f
neocomplcache#util#uniq	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#uniq(list) "{{{$/;"	f
neocomplcache#util#wcswidth	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#wcswidth(...) "{{{$/;"	f
neocomplcache#variables#get_custom	bundle/neocomplcache/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_custom() "{{{$/;"	f
neocomplcache#variables#get_filters	bundle/neocomplcache/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_filters() "{{{$/;"	f
neocomplcache#variables#get_frequencies	bundle/neocomplcache/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_frequencies() "{{{$/;"	f
neocomplcache#variables#get_sources	bundle/neocomplcache/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_sources() "{{{$/;"	f
neocomplcache#within_comment	bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#within_comment() "{{{$/;"	f
neocomplcache_source.gather_candidates	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! s:neocomplcache_source.gather_candidates(args, context) "{{{$/;"	f
neocomplcache_source.hooks.on_init	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! s:neocomplcache_source.hooks.on_init(args, context) "{{{$/;"	f
neocomplete#sources#neosnippet#define	bundle/neosnippet/autoload/neocomplete/sources/neosnippet.vim	/^function! neocomplete#sources#neosnippet#define() "{{{$/;"	f
neosnippet	bundle/neosnippet/plugin/neosnippet.vim	/^augroup neosnippet "{{{$/;"	a
neosnippet#caching	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#caching() "{{{$/;"	f
neosnippet#clear_select_mode_mappings	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#clear_select_mode_mappings() "{{{$/;"	f
neosnippet#complete_target_snippets	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#complete_target_snippets(arglead, cmdline, cursorpos) "{{{$/;"	f
neosnippet#delete_selected_text	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#delete_selected_text(type, ...) "{{{$/;"	f
neosnippet#edit_complete	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#edit_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neosnippet#edit_snippets	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#edit_snippets(args) "{{{$/;"	f
neosnippet#expand	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#expand(cur_text, col, trigger_name) "{{{$/;"	f
neosnippet#expand_impl	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#expand_impl()$/;"	f
neosnippet#expand_or_jump_impl	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#expand_or_jump_impl()$/;"	f
neosnippet#expand_target	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#expand_target() "{{{$/;"	f
neosnippet#expand_target_trigger	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#expand_target_trigger(trigger) "{{{$/;"	f
neosnippet#expandable	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#expandable() "{{{$/;"	f
neosnippet#expandable_or_jumpable	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#expandable_or_jumpable() "{{{$/;"	f
neosnippet#filetype_complete	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neosnippet#get_current_neosnippet	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_current_neosnippet() "{{{$/;"	f
neosnippet#get_filetype	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_filetype() "{{{$/;"	f
neosnippet#get_placeholder_target_marker_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_target_marker_pattern() "{{{$/;"	f
neosnippet#get_runtime_snippets_directory	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_runtime_snippets_directory() "{{{$/;"	f
neosnippet#get_selected_text	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_selected_text(type, ...) "{{{$/;"	f
neosnippet#get_snippets	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_snippets() "{{{$/;"	f
neosnippet#get_snippets_directory	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_snippets_directory() "{{{$/;"	f
neosnippet#get_user_snippets_directory	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_user_snippets_directory() "{{{$/;"	f
neosnippet#initialize	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#initialize() "{{{$/;"	f
neosnippet#jump	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#jump(cur_text, col) "{{{$/;"	f
neosnippet#jump_impl	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#jump_impl()$/;"	f
neosnippet#jump_or_expand_impl	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#jump_or_expand_impl()$/;"	f
neosnippet#jumpable	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#jumpable() "{{{$/;"	f
neosnippet#make_cache	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#make_cache(filetype) "{{{$/;"	f
neosnippet#recaching	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#recaching() "{{{$/;"	f
neosnippet#register_oneshot_snippet	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#register_oneshot_snippet() "{{{$/;"	f
neosnippet#source_file	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#source_file(filename) "{{{$/;"	f
neosnippet#substitute_selected_text	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#substitute_selected_text(type, text) "{{{$/;"	f
neosnippet#util#escape_pattern	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#escape_pattern(...) "{{{$/;"	f
neosnippet#util#expand	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#expand(path) "{{{$/;"	f
neosnippet#util#get_cur_text	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_cur_text() "{{{$/;"	f
neosnippet#util#get_last_status	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_last_status(...) "{{{$/;"	f
neosnippet#util#has_vimproc	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#has_vimproc(...) "{{{$/;"	f
neosnippet#util#iconv	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#iconv(...) "{{{$/;"	f
neosnippet#util#is_mac	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_mac(...) "{{{$/;"	f
neosnippet#util#is_windows	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_windows(...) "{{{$/;"	f
neosnippet#util#parse_options	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#parse_options(args, options_list) "{{{$/;"	f
neosnippet#util#print_error	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#print_error(string) "{{{$/;"	f
neosnippet#util#set_default	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#set_default(var, val, ...)  "{{{$/;"	f
neosnippet#util#set_dictionary_helper	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#set_dictionary_helper(...) "{{{$/;"	f
neosnippet#util#strwidthpart	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#strwidthpart(...) "{{{$/;"	f
neosnippet#util#substitute_path_separator	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#substitute_path_separator(...) "{{{$/;"	f
neosnippet#util#system	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#system(...) "{{{$/;"	f
neosnippet#util#truncate	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#truncate(...) "{{{$/;"	f
nerdtree#bookmarkNode	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bookmarkNode(...)$/;"	f
nerdtree#bufInWindows	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bufInWindows(bnum)$/;"	f
nerdtree#centerView	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#centerView()$/;"	f
nerdtree#chRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRoot(node)$/;"	f
nerdtree#chRootCwd	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRootCwd()$/;"	f
nerdtree#checkForBrowse	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#clearBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#clearBookmarks(bookmarks)$/;"	f
nerdtree#closeTree	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTree()$/;"	f
nerdtree#closeTreeIfOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfOpen()$/;"	f
nerdtree#closeTreeIfQuitOnOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfQuitOnOpen()$/;"	f
nerdtree#compareBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#completeBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#createDefaultBindings	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#createDefaultBindings()$/;"	f
nerdtree#deprecated	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#dumpHelp	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#dumpHelp()$/;"	f
nerdtree#echo	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#escChars	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#escChars()$/;"	f
nerdtree#exec	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#findAndRevealPath	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#findAndRevealPath()$/;"	f
nerdtree#firstUsableWindow	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#firstUsableWindow()$/;"	f
nerdtree#getPath	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getPath(ln)$/;"	f
nerdtree#getTreeWinNum	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getTreeWinNum()$/;"	f
nerdtree#has_opt	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#indentLevelFor	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#indentLevelFor(line)$/;"	f
nerdtree#invokeKeyMap	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#invokeKeyMap(key)$/;"	f
nerdtree#isTreeOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isTreeOpen()$/;"	f
nerdtree#isWindowUsable	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isWindowUsable(winnumber)$/;"	f
nerdtree#jumpToChild	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToChild(currentNode, direction)$/;"	f
nerdtree#jumpToSibling	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToSibling(currentNode, forward)$/;"	f
nerdtree#loadClassFiles	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#openBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#openBookmark(name)$/;"	f
nerdtree#postSourceActions	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#promptToDelBuffer	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#promptToDelBuffer(bufnum, msg)$/;"	f
nerdtree#putCursorInTreeWin	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorInTreeWin()$/;"	f
nerdtree#putCursorOnBookmarkTable	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorOnBookmarkTable()$/;"	f
nerdtree#renderBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderBookmarks()$/;"	f
nerdtree#renderView	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#renderViewSavingPosition	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderViewSavingPosition()$/;"	f
nerdtree#restoreScreenState	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#restoreScreenState()$/;"	f
nerdtree#revealBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#revealBookmark(name)$/;"	f
nerdtree#runningWindows	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#saveScreenState	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#saveScreenState()$/;"	f
nerdtree#stripMarkupFromLine	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
nerdtree#tabpagevar	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#tabpagevar(tabnr, var)$/;"	f
nerdtree#treeExistsForBuf	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForBuf()$/;"	f
nerdtree#treeExistsForTab	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForTab()$/;"	f
nerdtree#treeMarkupReg	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeMarkupReg()$/;"	f
nerdtree#treeUpDirLine	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeUpDirLine()$/;"	f
nerdtree#treeWid	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeWid()$/;"	f
nerdtree#unique	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#unique(list)$/;"	f
nerdtree#upDir	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#upDir(keepState)$/;"	f
nerdtree#version	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
newcache	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:newcache(cwd)$/;"	f
nocache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nocache(...)$/;"	f
nocache	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:nocache()$/;"	f
nocache	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! s:nocache()$/;"	f
nonamecond	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nonamecond(str, filpath)$/;"	f
nosort	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosort()$/;"	f
nosplit	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosplit()$/;"	f
nr2byte	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:nr2byte(nr)$/;"	f
nr2enc_char	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:nr2enc_char(charcode)$/;"	f
nr2hex	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:nr2hex(nr)$/;"	f
nsplit	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:nsplit(expr, n, ...)$/;"	f
on_insert_leave	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:on_insert_leave() "{{{$/;"	f
one	bundle/vim-ruby/spec/indent/basic_spec.rb	/^      def one$/;"	f
openExplorer	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openVSplit(target)$/;"	f
openfile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:openfile(cmd, fid, tail, chkmod, ...)$/;"	f
opfunc	bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
option_init	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:option_init(name, default) "{{{$/;"	f
opts	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:opts(...)$/;"	f
or	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:or(xs)$/;"	f
os	bundle/fcitx.vim/plugin/fcitx.py	/^import os$/;"	i
output2	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let output2 = substitute(output, '(', s:l, 'g')$/;"	v
output2	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let output2 = substitute(output2, ')', s:r, 'g')$/;"	v
output_q	bundle/delimitMate/test/autoclose_quotes.vim	/^    let output_q = substitute(output,"'" , escape(escape(quote, '"'), '\\'), 'g')$/;"	v
parse_name	bundle/vundle/autoload/vundle/config.vim	/^func! s:parse_name(arg)$/;"	f
parse_options	bundle/vundle/autoload/vundle/config.vim	/^func! s:parse_options(opts)$/;"	f
parse_snippet_name	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:parse_snippet_name(snippets_file, line, linenr, dup_check) "{{{$/;"	f
parse_snippets_file	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:parse_snippets_file(snippets, snippets_file) "{{{$/;"	f
parseline	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:parseline(line)$/;"	f
partition	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:partition(f, xs)$/;"	f
parts	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:parts(str)$/;"	f
passed	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let passed = line == eval(output2)$/;"	v
passed	bundle/delimitMate/test/autoclose_quotes.vim	/^    let passed = line == eval(output_q)$/;"	v
passed	bundle/delimitMate/test/expand_cr.vim	/^  let passed = lines == expected$/;"	v
passed	bundle/delimitMate/test/expand_space.vim	/^  let passed = lines == expected$/;"	v
path	bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def path$/;"	f	class:VimRubyInstaller.BackupDir
path	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def path$/;"	f	class:TargetDirectory
path2directory	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:path2directory(path)$/;"	f
path2directory	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:path2directory(path)$/;"	f
path2project_directory	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:path2project_directory(path, ...)$/;"	f
path2project_directory	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:path2project_directory(path, ...)$/;"	f
pathjoin	bundle/vim-rails/autoload/rails.vim	/^function! s:pathjoin(...) abort$/;"	f
pathshorten	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:pathshorten(str)$/;"	f
pathsplit	bundle/vim-rails/autoload/rails.vim	/^function! s:pathsplit(path) abort$/;"	f
phrasing_elements	bundle/html5.vim/autoload/xml/html5.vim	/^let phrasing_elements = ['a', 'em', 'strong', 'small', 'mark', 'abbr', 'dfn', 'i', 'b', 'u', 'code', 'var', 'samp', 'kbd', 'sup', 'sub', 'q', 'cite', 'span', 'bdo', 'bdi', 'br', 'wbr', 'ins', 'del', 'img', 'embed', 'object', 'iframe', 'map', 'area', 'script', 'noscript', 'ruby', 'video', 'audio', 'input', 'textarea', 'select', 'button', 'label', 'output', 'datalist', 'keygen', 'progress', 'command', 'canvas', 'time', 'meter']$/;"	v
pop	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:pop(list)$/;"	f
pop_command	bundle/vim-rails/autoload/rails.vim	/^function! s:pop_command()$/;"	f
previewNodeCurrent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeVSplit(node)$/;"	f
print_error	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:print_error(message)$/;"	f
print_error	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:print_error(message)$/;"	f
print_snippets_complete_error	bundle/neocomplcache/plugin/neocomplcache.vim	/^function! s:print_snippets_complete_error()$/;"	f
process	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:process(entries, type)$/;"	f
process	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:process(fname, ftype)$/;"	f
process	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:process(clines, ...)$/;"	f
process	bundle/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
process	bundle/vundle/autoload/vundle/installer.vim	/^func! s:process(bang, cmd)$/;"	f
projection_pairs	bundle/vim-rails/autoload/rails.vim	/^function! s:projection_pairs(options)$/;"	f
promptToDelBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
push	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:push(list, val)$/;"	f
push_chdir	bundle/vim-rails/autoload/rails.vim	/^function! s:push_chdir(...)$/;"	f
pyfile	bundle/fcitx.vim/plugin/fcitx.vim	/^let pyfile = expand('<sfile>:r') . '.py'$/;"	v
python3	bundle/fcitx.vim/plugin/fcitx.vim	/^  let python3 = 0$/;"	v
python3	bundle/fcitx.vim/plugin/fcitx.vim	/^  let python3 = 1$/;"	v
query_path	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:query_path(root)$/;"	f
quotes	bundle/delimitMate/test/autoclose_quotes.vim	/^  let quotes = split(g:delimitMate_quotes, '\\s')$/;"	v
rails#app	bundle/vim-rails/autoload/rails.vim	/^function! rails#app(...)$/;"	f
rails#buffer	bundle/vim-rails/autoload/rails.vim	/^function! rails#buffer(...)$/;"	f
rails#cache_clear	bundle/vim-rails/autoload/rails.vim	/^function! rails#cache_clear(...)$/;"	f
rails#camelize	bundle/vim-rails/autoload/rails.vim	/^function! rails#camelize(str)$/;"	f
rails#complete_rake	bundle/vim-rails/autoload/rails.vim	/^function! rails#complete_rake(A,L,P)$/;"	f
rails#get_binding_for	bundle/vim-rails/autoload/rails.vim	/^function! rails#get_binding_for(pid)$/;"	f
rails#json_parse	bundle/vim-rails/autoload/rails.vim	/^function! rails#json_parse(string) abort$/;"	f
rails#lencmp	bundle/vim-rails/autoload/rails.vim	/^function! rails#lencmp(i1, i2) abort$/;"	f
rails#log_syntax	bundle/vim-rails/autoload/rails.vim	/^function! rails#log_syntax()$/;"	f
rails#new_app_command	bundle/vim-rails/autoload/rails.vim	/^function! rails#new_app_command(bang,...) abort$/;"	f
rails#pluralize	bundle/vim-rails/autoload/rails.vim	/^function! rails#pluralize(word)$/;"	f
rails#singularize	bundle/vim-rails/autoload/rails.vim	/^function! rails#singularize(word)$/;"	f
rails#underscore	bundle/vim-rails/autoload/rails.vim	/^function! rails#underscore(str)$/;"	f
railsPluginAbolish	bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginAbolish$/;"	a
railsPluginAuto	bundle/vim-rails/autoload/rails.vim	/^augroup railsPluginAuto$/;"	a
railsPluginDetect	bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginDetect$/;"	a
rand	bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! s:rand(max) "{{{$/;"	f
rdfa_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let rdfa_attributes = {'about': [], 'content': [], 'datatype': [], 'prefix': [], 'profile': [], 'property': [], 'resource': [], 'rel': relrev, 'rev': relrev, 'typeof': [], 'vocab': []}$/;"	v
rdfa_attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^    let rdfa_attributes_value = {$/;"	v
readable_absolute	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_absolute() dict abort$/;"	f
readable_alternate	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_alternate(...) dict abort$/;"	f
readable_alternate_candidates	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_alternate_candidates(...) dict abort$/;"	f
readable_app	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_app() dict abort$/;"	f
readable_calculate_file_type	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_calculate_file_type() dict abort$/;"	f
readable_controller_name	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_controller_name(...) dict abort$/;"	f
readable_default_rake_task	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_default_rake_task(...) dict abort$/;"	f
readable_define_pattern	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_define_pattern() dict abort$/;"	f
readable_end_of	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_end_of(lnum) dict abort$/;"	f
readable_find_affinity	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_find_affinity() dict abort$/;"	f
readable_format	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_format(start) dict abort$/;"	f
readable_last_method	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method(start) dict abort$/;"	f
readable_last_method_line	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method_line(start) dict abort$/;"	f
readable_last_opening_line	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_opening_line(start,pattern,limit) dict abort$/;"	f
readable_line_count	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_line_count() dict abort$/;"	f
readable_model_name	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_model_name(...) dict abort$/;"	f
readable_open_command	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_open_command(cmd, argument, name, projections) dict abort$/;"	f
readable_preview_urls	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_preview_urls(lnum) dict abort$/;"	f
readable_projected	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_projected(key, ...) dict abort$/;"	f
readable_related	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_related(...) dict abort$/;"	f
readable_relative	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_relative() dict abort$/;"	f
readable_resolve_layout	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_resolve_layout(name, ...) dict abort$/;"	f
readable_resolve_view	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_resolve_view(name,...) dict abort$/;"	f
readable_runner_command	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_runner_command(bang, count, arg) dict abort$/;"	f
readable_spec	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_spec() dict abort$/;"	f
readable_test_file	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_test_file() dict abort$/;"	f
readable_test_file_candidates	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_test_file_candidates() dict abort$/;"	f
readable_type_name	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_type_name(...) dict abort$/;"	f
readfile	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^function! s:readfile(cache_dir, filename)$/;"	f
readfile	bundle/vim-rails/autoload/rails.vim	/^function! s:readfile(path,...)$/;"	f
record	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:record(bufnr)$/;"	f
record_file	bundle/html5.vim/Makefile	/^record_file = \\$/;"	m
redraw	bundle/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
reformat	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:reformat(mrufs, ...)$/;"	f
refreshCurrent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:refreshRoot()$/;"	f
regexfilter	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regexfilter(str)$/;"	f
regisfilter	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regisfilter(reg)$/;"	f
reindent	bundle/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
relationship_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let relationship_attributes = {'aria-activedescendant': [], 'aria-controls': [], 'aria-describedby': [], 'aria-flowto': [], 'aria-labelledby': [], 'aria-owns': [], 'aria-posinset': [], 'aria-setsize': []}$/;"	v
relglob	bundle/vim-rails/autoload/rails.vim	/^function! s:relglob(...)$/;"	f
reload	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let reload = 0$/;"	v
reload	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let reload = 1$/;"	v
reload	bundle/delimitMate/test/autoclose_matchpairs.vim	/^let reload = 1$/;"	v
reload	bundle/delimitMate/test/autoclose_quotes.vim	/^    let reload = 0$/;"	v
reload	bundle/delimitMate/test/autoclose_quotes.vim	/^    let reload = 1$/;"	v
reload	bundle/delimitMate/test/autoclose_quotes.vim	/^let reload = 1$/;"	v
relrev	bundle/html5.vim/autoload/xml/html5.vim	/^    let relrev = ['chapter', 'contents', 'copyright', 'first', 'glossary', 'help', 'icon', 'index', 'last', 'license', 'meta', 'next', 'p3pv1', 'prev', 'role', 'section', 'stylesheet', 'subsection', 'start', 'top', 'up']$/;"	v
remarksigns	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:remarksigns()$/;"	f
remove_duplicate	bundle/vim-expand-region/autoload/expand_region.vim	/^function! s:remove_duplicate(input)$/;"	f
replace	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:replace(str, from, to)$/;"	f
replace_once	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:replace_once(str, from, to)$/;"	f
resetomnicomplete	bundle/vim-rails/autoload/rails.vim	/^function! s:resetomnicomplete()$/;"	f
reverse	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:reverse(str)$/;"	f
role	bundle/html5.vim/autoload/xml/aria.vim	/^let role = extend(role, landmark_role)$/;"	v
role	bundle/html5.vim/autoload/xml/aria.vim	/^let role = extend(widget_role, document_structure)$/;"	v
role	bundle/html5.vim/autoload/xml/html5.vim	/^    let role = extend(role, landmark_role)$/;"	v
role	bundle/html5.vim/autoload/xml/html5.vim	/^    let role = extend(widget_role, document_structure)$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes = {}$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['alert'] = role_attributes['region']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['alertdialog'] = role_attributes['alert'] + role_attributes['dialog']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['application'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['article'] = role_attributes['document'] + role_attributes['region'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['banner'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['button'] = role_attributes['region'] + role_attributes['menuitemcheckbox']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['checkbox'] = abstract_role['input'] + ['aria-checked'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['columnheader'] = role_attributes['gridcell'] + abstract_role['sectionhead'] + ['aria-sort']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['combobox'] = abstract_role['select'] + ['aria-expanded', 'aria-required'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['complementary'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['contentinfo'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['default'] = abstract_role['roletype']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['definition'] = abstract_role['section'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['dialog'] = abstract_role['window']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['directory'] = role_attributes['list'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['document'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['form'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['grid'] = abstract_role['composite'] + role_attributes['region'] + ['aria-level', 'aria-multiselectable', 'aria-readonly']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['gridcell'] = abstract_role['section'] + abstract_role['widget']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['group'] = abstract_role['section']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['heading'] = abstract_role['sectionhead'] + ['aria-level'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['img'] = abstract_role['section'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['link'] = abstract_role['widget'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['list'] = role_attributes['region'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['listbox'] = role_attributes['list'] + abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['listitem'] = abstract_role['section']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['log'] = role_attributes['region'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['main'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['marquee'] = role_attributes['region'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['math'] = abstract_role['section'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menu'] =  role_attributes['list'] + abstract_role['select'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menubar'] = role_attributes['menu'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menuitem'] = abstract_role['input'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menuitemcheckbox'] = role_attributes['menuitem'] + role_attributes['checkbox']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menuitemradio'] = role_attributes['menuitemcheckbox'] + role_attributes['radio']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['navigation'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['note'] = abstract_role['section'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['option'] = abstract_role['input'] + ['aria-checked', 'aria-posinset', 'aria-selected', 'aria-setsize']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['presentation'] = abstract_role['structure']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['progressbar'] = abstract_role['widget'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['radio'] = role_attributes['checkbox'] + role_attributes['option']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['radiogroup'] = abstract_role['select'] + ['aria-required']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['region'] = abstract_role['section']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['row'] = role_attributes['group'] + ['aria-level', 'aria-selected']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['rowheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['scrollbar'] = abstract_role['range'] + ['aria-controls', 'aria-orientation', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['search'] = abstract_role['landmark']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['separator'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['slider'] = abstract_role['range'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['spinbutton'] = abstract_role['composite'] + abstract_role['range'] + ['aria-required'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['status'] = abstract_role['composite'] + role_attributes['region']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tab'] = abstract_role['sectionhead'] + abstract_role['widget'] + ['aria-selected']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tablist'] = abstract_role['composite'] + role_attributes['directory']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tabpanel'] = role_attributes['region']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['textbox'] = abstract_role['input'] + ['aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['timer'] = role_attributes['status'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['toolbar'] = role_attributes['group'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tooltip'] = abstract_role['section'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tree'] = abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['treegrid'] = role_attributes['grid'] + role_attributes['tree']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['treeitem'] = role_attributes['listitem'] + role_attributes['option']$/;"	v
rquote	bundle/vim-rails/autoload/rails.vim	/^function! s:rquote(str)$/;"	f
rtp_add	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_add(dir) abort$/;"	f
rtp_add_a	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_add_a()$/;"	f
rtp_rm	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_rm(dir) abort$/;"	f
rtp_rm_a	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_rm_a()$/;"	f
rtpath	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtpath(opts)$/;"	f
ruby_minlines	bundle/vim-ruby/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
rubycomplete#Complete	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
s	bundle/delimitMate/autoload/delimitMate.vim	/^function! s:s(name, value, ...) "{{{$/;"	f
s	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:s(...) " {{{$/;"	f
s:Bookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:COMPOUND_ASSIGNMENT	bundle/vim-coffee-script/indent/coffee.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|until\\|'$/;"	v
s:CONTINUATION	bundle/vim-coffee-script/indent/coffee.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\)\\>$'$/;"	v
s:CONTINUATION_BLOCK	bundle/vim-coffee-script/indent/coffee.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:Cache	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^let s:Cache = vital#of('neocomplcache').import('System.Cache')$/;"	v
s:Creator	bundle/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:DOT_ACCESS	bundle/vim-coffee-script/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:INDENT_AFTER_KEYWORD	bundle/vim-coffee-script/indent/coffee.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:INDENT_AFTER_OPERATOR	bundle/vim-coffee-script/indent/coffee.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:KeyMap	bundle/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:List	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^let s:List = vital#of('neocomplcache').import('Data.List')$/;"	v
s:List	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^let s:List = vital#of('neocomplcache').import('Data.List')$/;"	v
s:MAX_LOOKBACK	bundle/vim-coffee-script/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MenuController	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDFileNameEscape	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:NERDFileNameEscape="[]#*$%'\\" ?`!&();<>\\\\"$/;"	v
s:NERDTreeSortStarIndex	bundle/nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:OUTDENT_AFTER	bundle/vim-coffee-script/indent/coffee.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:Opener	bundle/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:POSTFIX_CONDITION	bundle/vim-coffee-script/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:Path	bundle/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:SINGLE_LINE_ELSE	bundle/vim-coffee-script/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SYNTAX_COMMENT	bundle/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	bundle/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	bundle/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:String	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^let s:String = vital#of('neocomplcache').import('Data.String')$/;"	v
s:TreeDirNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:V	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^let s:V = vital#of('neocomplcache')$/;"	v
s:V	bundle/neosnippet/autoload/neosnippet/util.vim	/^let s:V = vital#of('neosnippet')$/;"	v
s:action_table	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^let s:action_table = {}$/;"	v
s:action_table	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^let s:action_table.expand = {$/;"	v
s:action_table	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^let s:action_table.preview = {$/;"	v
s:action_table	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^let s:action_table.unite__new_candidate = {$/;"	v
s:airline_highlight_groups	bundle/vim-airline/plugin/airline.vim	/^let s:airline_highlight_groups = keys(s:airline_highlight_map)$/;"	v
s:airline_highlight_map	bundle/vim-airline/plugin/airline.vim	/^let s:airline_highlight_map = {$/;"	v
s:airline_mode_map	bundle/vim-airline/plugin/airline.vim	/^let s:airline_mode_map = {$/;"	v
s:app_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype = {}$/;"	v
s:app_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype.cache = s:cache_prototype$/;"	v
s:apps	bundle/vim-rails/autoload/rails.vim	/^  let s:apps = {}$/;"	v
s:ars	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:ars = ['s:maxdepth', 's:maxfiles', 's:compare_lim', 's:glob', 's:caching']$/;"	v
s:async_dictionary_list	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_dictionary_list	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_tags_list	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^  let s:async_tags_list = {}$/;"	v
s:bins	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:bins = [$/;"	v
s:block_continuation_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:bracket_continuation_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:browsefilter	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	bundle/vim-ruby/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:buffer_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_sources	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^  let s:buffer_sources = {}$/;"	v
s:bundle	bundle/vundle/autoload/vundle/config.vim	/^let s:bundle = {}$/;"	v
s:cache_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:cache_prototype = {'dict': {}}$/;"	v
s:cached_files	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^let s:cached_files = {}$/;"	v
s:candidates	bundle/vim-expand-region/autoload/expand_region.vim	/^let s:candidates = []$/;"	v
s:ccex	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:ccex = s:pref.'clear_cache_on_exit'$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^let s:check_file = expand('<sfile>:p:h') . '\/erlang_check_file.erl'$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let s:check_file = 'lessc'$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let s:check_file = 'node ' . expand('<sfile>:p:h') . '\/less-lint.js'$/;"	v
s:compare_lim	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:compare_lim = 3000$/;"	v
s:continuation_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:converter	bundle/neocomplcache/autoload/neocomplcache/filters/converter_abbr.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplcache/autoload/neocomplcache/filters/converter_case.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplcache/autoload/neocomplcache/filters/converter_delimiter.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplcache/autoload/neocomplcache/filters/converter_nothing.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplcache/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^let s:converter = {$/;"	v
s:cpo_save	bundle/html5.vim/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cssindent	bundle/html5.vim/indent/html.vim	/^let s:cssindent = &indentexpr$/;"	v
s:cur_index	bundle/vim-expand-region/autoload/expand_region.vim	/^let s:cur_index = -1$/;"	v
s:decoder	bundle/syntastic/syntax_checkers/html/validator.vim	/^let s:decoder = 'awk -f ' . shellescape(expand('<sfile>:p:h') . '\/validator_decode.awk')$/;"	v
s:defaultCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:defaultCheckers = {$/;"	v
s:default_includes	bundle/syntastic/autoload/syntastic/c.vim	/^let s:default_includes = [ '.', '..', 'include', 'includes',$/;"	v
s:delimiterMap	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:delimiterMap = {$/;"	v
s:deprecationNoticesIssued	bundle/syntastic/autoload/syntastic/util.vim	/^let s:deprecationNoticesIssued = []$/;"	v
s:dictionary_list	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^  let s:dictionary_list = {}$/;"	v
s:did_auto_closetag	bundle/HTML-AutoCloseTag/ftplugin/html_autoclosetag.vim	/^let s:did_auto_closetag = 1$/;"	v
s:dircounts	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:dircounts = {}$/;"	v
s:doc_dict	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:doc_dict = {$/;"	v
s:doc_dict	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:doc_dict = {$/;"	v
s:doc_dict	bundle/neosnippet/autoload/neosnippet.vim	/^let s:doc_dict = {$/;"	v
s:efm_generate	bundle/vim-rails/autoload/rails.vim	/^let s:efm_generate =$/;"	v
s:emapleader	bundle/Align/plugin/AlignMapsPlugin.vim	/^  let s:emapleader= escape(s:mapleader,'\\ ')$/;"	v
s:end_end_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_skip_expr	bundle/vim-ruby/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:exists	bundle/ZenCoding.vim/autoload/zencoding/lang.vim	/^let s:exists = {}$/;"	v
s:exists_md5	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^  let s:exists_md5 = 0$/;"	v
s:exists_md5	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^  let s:exists_md5 = 1$/;"	v
s:fcitxsocketfile	bundle/fcitx.vim/plugin/fcitx.vim	/^      let s:fcitxsocketfile = s:fcitxsocketfile . '.0'$/;"	v
s:fcitxsocketfile	bundle/fcitx.vim/plugin/fcitx.vim	/^      let s:fcitxsocketfile = strpart(s:fcitxsocketfile, 0,$/;"	v
s:fcitxsocketfile	bundle/fcitx.vim/plugin/fcitx.vim	/^  let s:fcitxsocketfile = $FCITX_SOCKET$/;"	v
s:fcitxsocketfile	bundle/fcitx.vim/plugin/fcitx.vim	/^  let s:fcitxsocketfile = '\/tmp\/fcitx-socket-' . $DISPLAY$/;"	v
s:ficounts	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:ficounts = {}$/;"	v
s:file	bundle/vim-rails/autoload/rails.vim	/^let s:file = expand('<sfile>:p')$/;"	v
s:file_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:file_prototype = {}$/;"	v
s:filecounts	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:filecounts = {}$/;"	v
s:first_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:firstmenu	bundle/Align/plugin/AlignMapsPlugin.vim	/^ let s:firstmenu= 1$/;"	v
s:fpats	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:fpats = {$/;"	v
s:function_return_types	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:function_return_types = {}$/;"	v
s:glbs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:glbs = { 'magic': 1, 'to': 1, 'tm': 0, 'sb': 1, 'hls': 0, 'im': 0,$/;"	v
s:global_candidates_list	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:global_candidates_list = { 'dictionary_variables' : {} }$/;"	v
s:has_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let s:has_highlighting = v:version > 701 || (v:version == 701 && has('patch040'))$/;"	v
s:hlgrps	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:hlgrps = {$/;"	v
s:html_indent_tags	bundle/html5.vim/indent/html.vim	/^    let s:html_indent_tags = s:html_indent_tags.'\\|'.g:html_indent_tags$/;"	v
s:html_indent_tags	bundle/html5.vim/indent/html.vim	/^let s:html_indent_tags = join(s:tags, '\\|')$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:ignore_html_errors	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:ignore_html_errors = [$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let s:imports = "--compass"$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:imports = ""$/;"	v
s:internal_candidates_list	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:internal_candidates_list = {}$/;"	v
s:is_cygwin	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_enabled	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^  let s:is_enabled = 0$/;"	v
s:is_mac	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^let s:is_mac = !s:is_windows$/;"	v
s:is_unix	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_win32term	bundle/vim-airline/plugin/airline.vim	/^let s:is_win32term = (has('win32') || has('win64')) && !has('gui_running')$/;"	v
s:is_windows	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:jsindent	bundle/html5.vim/indent/html.vim	/^let s:jsindent = &indentexpr$/;"	v
s:keepcpo	bundle/Align/autoload/Align.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	bundle/Align/autoload/AlignMaps.vim	/^let s:keepcpo         = &cpo$/;"	v
s:keepcpo	bundle/Align/plugin/AlignMapsPlugin.vim	/^let s:keepcpo                = &cpo$/;"	v
s:keepcpo	bundle/Align/plugin/AlignPlugin.vim	/^let s:keepcpo            = &cpo$/;"	v
s:keepcpo	bundle/Align/plugin/cecutil.vim	/^let s:keepcpo        = &cpo$/;"	v
s:keepcpo	bundle/fcitx.vim/plugin/fcitx.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	bundle/fcitx.vim/so/fcitx.vim	/^let s:keepcpo = &cpo$/;"	v
s:kprange	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:kprange = {$/;"	v
s:lastmode	bundle/vim-airline/plugin/airline.vim	/^let s:lastmode = ''$/;"	v
s:lenSpaceStr	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:lenSpaceStr = strlen(s:spaceStr)$/;"	v
s:lines	bundle/vim-coffee-script/syntax/eco.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	bundle/vim-ruby/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:load_the_theme	bundle/vim-airline/plugin/airline.vim	/^let s:load_the_theme = g:airline#themes#{g:airline_theme}#normal$/;"	v
s:loaded	bundle/neocomplcache/autoload/vital/_a477c91.vim	/^let s:loaded = {}$/;"	v
s:loaded	bundle/neosnippet/autoload/vital/_08a462e.vim	/^let s:loaded = {}$/;"	v
s:loaded_delimitMate	bundle/delimitMate/plugin/delimitMate.vim	/^let s:loaded_delimitMate = 1$/;"	v
s:local_candidates_list	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:local_candidates_list = {}$/;"	v
s:mapleader	bundle/Align/plugin/AlignMapsPlugin.vim	/^  let s:mapleader = exists("g:mapleader")? g:mapleader : '\\'$/;"	v
s:match_words	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	bundle/vim-ruby/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:matcher	bundle/neocomplcache/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/neocomplcache/autoload/neocomplcache/filters/matcher_head.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/neocomplcache/autoload/neocomplcache/filters/matcher_old.vim	/^let s:matcher = {$/;"	v
s:member_sources	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^  let s:member_sources = {}$/;"	v
s:modemap	bundle/syntastic/plugin/syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:modifier	bundle/Align/plugin/cecutil.vim	/^ let s:modifier= "sil! "$/;"	v
s:modifier	bundle/Align/plugin/cecutil.vim	/^ let s:modifier= "sil! keepj "$/;"	v
s:molokai_original	bundle/molokai/colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	bundle/molokai/colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:mx	bundle/ZenCoding.vim/autoload/zencoding/lang/html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}\\s*'$/;"	v
s:neocomplcache_source	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^let s:neocomplcache_source = {$/;"	v
s:neosnippet_options	bundle/neosnippet/autoload/neosnippet.vim	/^let s:neosnippet_options = [$/;"	v
s:next_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:non_bracket_continuation_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:notifier_types	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let s:notifier_types = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:notifiers	bundle/syntastic/plugin/syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.Instance()$/;"	v
s:ocamlpp	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp="camlp4o"$/;"	v
s:ocamlpp	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp="camlp4r"$/;"	v
s:old_cpo	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:options	bundle/delimitMate/autoload/delimitMate.vim	/^	let s:options = {}$/;"	v
s:pat	bundle/vim-coffee-script/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:projections_for_gems	bundle/vim-rails/autoload/rails.vim	/^let s:projections_for_gems = {}$/;"	v
s:readable_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:readable_prototype = {}$/;"	v
s:registry	bundle/syntastic/plugin/syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:ruby_deindent_keywords	bundle/vim-ruby/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	bundle/vim-ruby/indent/ruby.vim	/^let s:ruby_indent_keywords = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:ruby_path	bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	bundle/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	bundle/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:running_windows	bundle/syntastic/plugin/syntastic.vim	/^let s:running_windows = has("win16") || has("win32")$/;"	v
s:sass_cache_location	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:sass_cache_location = tempname()$/;"	v
s:save_cpo	bundle/ZenCoding.vim/autoload/zencoding.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/ZenCoding.vim/plugin/zencoding.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/context_filetype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/filters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/filters/converter_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/filters/converter_case.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/filters/converter_delimiter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/filters/converter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/filters/matcher_head.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/filters/matcher_old.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_rank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/neocomplcache/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/plugin/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/plugin/neocomplcache/dictionary_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/plugin/neocomplcache/include_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/plugin/neocomplcache/syntax_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/plugin/neocomplcache/tags_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache/vest/test-neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neocomplete/sources/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neosnippet/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/unite/sources/snippet_target.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/ftplugin/snippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/indent/snippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/plugin/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/syntax/snippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/postprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-expand-region/autoload/expand_region.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-expand-region/plugin/expand_region.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-ruby/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:saved_pos	bundle/vim-expand-region/autoload/expand_region.vim	/^let s:saved_pos = []$/;"	v
s:saved_selectmode	bundle/vim-expand-region/autoload/expand_region.vim	/^let s:saved_selectmode = &selectmode$/;"	v
s:script_candidates_list	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:script_candidates_list = {}$/;"	v
s:sdir	bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^let s:sdir = neocomplcache#util#substitute_path_separator($/;"	v
s:self_version	bundle/neocomplcache/autoload/vital/_a477c91.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	bundle/neosnippet/autoload/vital/_08a462e.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:setup_done	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:setup_done = 0$/;"	v
s:sid	bundle/vim-rails/autoload/rails.vim	/^let s:sid = s:sub(maparg("<SID>xx"),'xx$','')$/;"	v
s:skip_expr	bundle/vim-ruby/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:sorter	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_length.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_nothing.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_rank.vim	/^let s:sorter = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^let s:source = {$/;"	v
s:source	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neosnippet/autoload/neocomplete/sources/neosnippet.vim	/^let s:source = {$/;"	v
s:source	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^let s:source = {$/;"	v
s:source	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^let s:source.action_table = s:action_table$/;"	v
s:source	bundle/neosnippet/autoload/unite/sources/snippet_target.vim	/^let s:source = {$/;"	v
s:source	bundle/neosnippet/autoload/unite/sources/snippet_target.vim	/^let s:source.action_table.select = {$/;"	v
s:source_runtime	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^let s:source_runtime = {$/;"	v
s:source_runtime	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^let s:source_runtime.action_table.unite__new_candidate = {$/;"	v
s:source_user	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^let s:source_user = {$/;"	v
s:source_user	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^let s:source_user.action_table.unite__new_candidate = {$/;"	v
s:spaceStr	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:spaceStr = ' '$/;"	v
s:splat_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:syng_strcom	bundle/vim-ruby/indent/ruby.vim	/^let s:syng_strcom = '\\<ruby\\%(Regexp\\|RegexpDelimiter\\|RegexpEscape' .$/;"	v
s:syng_string	bundle/vim-ruby/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_stringdoc	bundle/vim-ruby/indent/ruby.vim	/^let s:syng_stringdoc =$/;"	v
s:syntastic_elixir_compile_command	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^    let s:syntastic_elixir_compile_command = 'mix compile'$/;"	v
s:syntastic_elixir_compile_command	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let s:syntastic_elixir_compile_command = 'elixir'$/;"	v
s:syntax_list	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^  let s:syntax_list = {}$/;"	v
s:tags	bundle/html5.vim/indent/html.vim	/^let s:tags = []$/;"	v
s:tags_list	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^  let s:tags_list = {}$/;"	v
s:text	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:text = map(['second', 'seconds', 'minutes', 'hours', 'days', 'weeks',$/;"	v
s:tree_up_dir_line	bundle/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:types	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:types = {$/;"	v
s:undo_ftplugin	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	bundle/vim-ruby/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:version_file	bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:view_types	bundle/vim-rails/autoload/rails.vim	/^let s:view_types = split('rhtml,erb,rxml,builder,rjs,haml',',')$/;"	v
s:wig_cond	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^let s:wig_cond = v:version > 702 || ( v:version == 702 && has('patch051') )$/;"	v
s:zen_settings	bundle/ZenCoding.vim/autoload/zencoding.vim	/^let s:zen_settings = {$/;"	v
samerootsyml	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:samerootsyml(each, isfile, cwd)$/;"	f
sanstail	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sanstail(str)$/;"	f
save_cpo	bundle/delimitMate/plugin/delimitMate.vim	/^let save_cpo = &cpo$/;"	v
save_foldinfo	bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! s:save_foldinfo() "{{{$/;"	f
savebookmark	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:savebookmark(name, cwd)$/;"	f
savetofile	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:savetofile(mrufs)$/;"	f
scan	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:scan(str, pattern)$/;"	f
scanlineforuris	bundle/vim-rails/autoload/rails.vim	/^function! s:scanlineforuris(line)$/;"	f
schemaEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:schemaEdit(cmd,...)$/;"	f
schemaList	bundle/vim-rails/autoload/rails.vim	/^function! s:schemaList(A,L,P)$/;"	f
search_outof_range	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:search_outof_range(col) "{{{$/;"	f
search_snippet_range	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:search_snippet_range(start, end, cnt, ...) "{{{$/;"	f
search_sync_placeholder	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:search_sync_placeholder(start, end, number) "{{{$/;"	f
searchsyn	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:searchsyn(pattern,syn,flags,mode)$/;"	f
select_region	bundle/vim-expand-region/autoload/expand_region.vim	/^function! s:select_region()$/;"	f
selectiveexpand	bundle/vim-rails/autoload/rails.vim	/^function! s:selectiveexpand(pat,good,default,...)$/;"	f
set_auto_completion_length	bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! s:set_auto_completion_length(len) "{{{$/;"	f
set_complete_results_pos	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:set_complete_results_pos(funcs, cur_text) "{{{$/;"	f
set_complete_results_words	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:set_complete_results_words(complete_results) "{{{$/;"	f
set_default	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:set_default(var, val)$/;"	f
set_default	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:set_default(var, val)$/;"	f
set_default_custom	bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! s:set_default_custom() "{{{$/;"	f
set_dictionary_helper	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:set_dictionary_helper(variable, keys, value) "{{{$/;"	f
set_dictionary_helper	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern)$/;"	f
set_dictionary_helper	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern)$/;"	f
set_snippet_dict	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:set_snippet_dict(snippet_dict, snippets, dup_check, snippets_file) "{{{$/;"	f
setentries	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:setentries()$/;"	f
settype	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:settype(type)$/;"	f
setupblank	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setupblank()$/;"	f
shift	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:shift(list)$/;"	f
shortest	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:shortest(lens)$/;"	f
should_compute_candidates	bundle/vim-expand-region/autoload/expand_region.vim	/^function! s:should_compute_candidates(mode)$/;"	f
showMenu	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:showMenu(node)$/;"	f
sign	bundle/vundle/autoload/vundle/installer.vim	/^func! s:sign(status) $/;"	f
skip_next_auto_completion	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:skip_next_auto_completion() "{{{$/;"	f
smart_execute_command	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:smart_execute_command(action, word)$/;"	f
smart_execute_command	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:smart_execute_command(action, word)$/;"	f
sname	bundle/vim-rails/autoload/rails.vim	/^function! s:sname()$/;"	f
snippets_expand	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:snippets_expand(cur_text, col) "{{{$/;"	f
snippets_expand_or_jump	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:snippets_expand_or_jump(cur_text, col) "{{{$/;"	f
snippets_jump_or_expand	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:snippets_jump_or_expand(cur_text, col) "{{{$/;"	f
socket	bundle/fcitx.vim/plugin/fcitx.py	/^import socket$/;"	i
sort	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:sort(list, expr)$/;"	f
sort_by	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:sort_by(list, expr)$/;"	f
sort_text_object	bundle/vim-expand-region/autoload/expand_region.vim	/^function! s:sort_text_object(l, r)$/;"	f
sorter.filter	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_length.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_nothing.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	bundle/neocomplcache/autoload/neocomplcache/filters/sorter_rank.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
source.action_table.select.func	bundle/neosnippet/autoload/unite/sources/snippet_target.vim	/^function! s:source.action_table.select.func(candidate) "{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.gather_candidates	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/neosnippet/autoload/neocomplete/sources/neosnippet.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/neosnippet/autoload/unite/sources/snippet_target.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str) "{{{$/;"	f
source.get_keyword_list	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_list	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_list	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_list	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.hooks.on_final	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/neosnippet/autoload/neocomplete/sources/neosnippet.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/neosnippet/autoload/unite/sources/snippet_target.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_post_filter	bundle/neosnippet/autoload/neocomplete/sources/neosnippet.vim	/^function! s:source.hooks.on_post_filter(context) "{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source_runtime.action_table.unite__new_candidate.func	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_runtime.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
source_runtime.gather_candidates	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_runtime.gather_candidates(args, context) "{{{$/;"	f
source_user.action_table.unite__new_candidate.func	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_user.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
source_user.gather_candidates	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_user.gather_candidates(args, context) "{{{$/;"	f
span	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:span(f, xs)$/;"	f
specEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:specEdit(cmd,...) abort$/;"	f
specList	bundle/vim-rails/autoload/rails.vim	/^function! s:specList(A,L,P)$/;"	f
split	bundle/vim-rails/autoload/rails.vim	/^function! s:split(arg, ...)$/;"	f
split3	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:split3(expr, pattern)$/;"	f
split_args	bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:split_args(cur_text, complete_str) "{{{$/;"	f
split_leftright	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:split_leftright(expr, pattern)$/;"	f
split_pattern	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:split_pattern(keyword_pattern) "{{{$/;"	f
start_complete	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! s:start_complete(is_quick_match) "{{{$/;"	f
startswith	bundle/vim-rails/autoload/rails.vim	/^function! s:startswith(string,prefix)$/;"	f
strchars	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^  function! s:strchars(str)$/;"	f
strchars	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:strchars(str)$/;"	f
struct	bundle/fcitx.vim/plugin/fcitx.py	/^import struct$/;"	i
strwidth	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:strwidth(str)$/;"	f
strwidthpart	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:strwidthpart(str, width) "{{{$/;"	f
strwidthpart	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:strwidthpart(str, width)$/;"	f
strwidthpart	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:strwidthpart(str, width)$/;"	f
strwidthpart_reverse	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:strwidthpart_reverse(str, width)$/;"	f
strwidthpart_reverse	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:strwidthpart_reverse(str, width)$/;"	f
stylesheetEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetEdit(cmd,...)$/;"	f
stylesheetList	bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetList(A,L,P)$/;"	f
sub	bundle/vim-rails/autoload/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
sublist	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist(l, s, e)$/;"	f
sublist7071	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist7071(l, s, e)$/;"	f
substitute_candidate	bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:substitute_candidate(candidate) "{{{$/;"	f
substitute_path_separator	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:substitute_path_separator(path)$/;"	f
substitute_path_separator	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:substitute_path_separator(path)$/;"	f
substitute_placeholder_marker	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:substitute_placeholder_marker(start, end, snippet_holder_cnt) "{{{$/;"	f
sync	bundle/vundle/autoload/vundle/installer.vim	/^func! s:sync(bang, bundle) abort$/;"	f
synname	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:synname()$/;"	f
syntastic	bundle/syntastic/plugin/syntastic.vim	/^    augroup syntastic$/;"	a
syntastic	bundle/syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic#c#CheckPKG	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPKG(name, ...)$/;"	f
syntastic#c#CheckPhp	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPhp()$/;"	f
syntastic#c#CheckPython	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPython()$/;"	f
syntastic#c#CheckRuby	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckRuby()$/;"	f
syntastic#c#GetIncludeDirs	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetIncludeDirs(filetype)$/;"	f
syntastic#c#GetNullDevice	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetNullDevice()$/;"	f
syntastic#c#ReadConfig	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#ReadConfig(file)$/;"	f
syntastic#c#SearchHeaders	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#SearchHeaders()$/;"	f
syntastic#makeprg#build	bundle/syntastic/autoload/syntastic/makeprg.vim	/^function! syntastic#makeprg#build(opts)$/;"	f
syntastic#postprocess#compressWhitespace	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function syntastic#postprocess#compressWhitespace(errors)$/;"	f
syntastic#postprocess#cygwinRemoveCR	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#cygwinRemoveCR(errors)$/;"	f
syntastic#postprocess#sort	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#sort(errors)$/;"	f
syntastic#util#DevNull	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#DevNull()$/;"	f
syntastic#util#bufIsActive	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufIsActive(buffer)$/;"	f
syntastic#util#debug	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#debug(msg)$/;"	f
syntastic#util#deprecationWarn	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#deprecationWarn(msg)$/;"	f
syntastic#util#info	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#info(msg)$/;"	f
syntastic#util#parseShebang	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseShebang()$/;"	f
syntastic#util#parseVersion	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseVersion(command)$/;"	f
syntastic#util#unique	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#unique(list)$/;"	f
syntastic#util#versionIsAtLeast	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required)$/;"	f
syntastic#util#warn	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#warn(msg)$/;"	f
syntastic#util#wideMsg	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wideMsg(msg)$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:syntax()$/;"	f
system	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:system(str, ...)$/;"	f
system	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:system(str, ...)$/;"	f
system	bundle/vundle/autoload/vundle/installer.vim	/^func! s:system(cmd) abort$/;"	f
tail	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:tail()$/;"	f
take_while	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:take_while(f, xs)$/;"	f
tcount	bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let tcount += 1$/;"	v
tcount	bundle/delimitMate/test/autoclose_matchpairs.vim	/^let tcount = 1$/;"	v
tcount	bundle/delimitMate/test/autoclose_quotes.vim	/^    let tcount += 1$/;"	v
tcount	bundle/delimitMate/test/autoclose_quotes.vim	/^let tcount = 1$/;"	v
tcount	bundle/delimitMate/test/expand_cr.vim	/^  let tcount += 1$/;"	v
tcount	bundle/delimitMate/test/expand_cr.vim	/^let tcount = 1$/;"	v
tcount	bundle/delimitMate/test/expand_space.vim	/^  let tcount += 1$/;"	v
tcount	bundle/delimitMate/test/expand_space.vim	/^let tcount = 1$/;"	v
testsnumber	bundle/delimitMate/test/autoclose_matchpairs.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^"'''))$/;"	v
testsnumber	bundle/delimitMate/test/autoclose_quotes.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^"'''))$/;"	v
testsnumber	bundle/delimitMate/test/expand_cr.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^=\\{80}$'''))$/;"	v
testsnumber	bundle/delimitMate/test/expand_space.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^=\\{80}$'''))$/;"	v
textdialog	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:textdialog(str)$/;"	f
toggleIgnoreFilter	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleZoom()$/;"	f
trigger	bundle/neosnippet/autoload/neosnippet.vim	/^function! s:trigger(function) "{{{$/;"	f
trim	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:trim(str)$/;"	f
truncate	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:truncate(str, width) "{{{$/;"	f
truncate	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:truncate(str, width)$/;"	f
truncate	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:truncate(str, width)$/;"	f
truncate_smart	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator)$/;"	f
truncate_smart	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator)$/;"	f
uname	bundle/syntastic/plugin/syntastic.vim	/^function! s:uname()$/;"	f
uniq	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:uniq(list, ...)$/;"	f
uniq	bundle/vim-rails/autoload/rails.vim	/^function! s:uniq(list) abort$/;"	f
unite#sources#file_include#define	bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^function! unite#sources#file_include#define()$/;"	f
unite#sources#neocomplcache#define	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#define() "{{{$/;"	f
unite#sources#neocomplcache#start_complete	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#start_complete() "{{{$/;"	f
unite#sources#neocomplcache#start_quick_match	bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#start_quick_match() "{{{$/;"	f
unite#sources#neosnippet_file#define	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^function! unite#sources#neosnippet_file#define() "{{{$/;"	f
unite#sources#snippet#define	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^function! unite#sources#snippet#define() "{{{$/;"	f
unite#sources#snippet#start_complete	bundle/neosnippet/autoload/unite/sources/snippet.vim	/^function! unite#sources#snippet#start_complete() "{{{$/;"	f
unite#sources#snippet_target#define	bundle/neosnippet/autoload/unite/sources/snippet_target.vim	/^function! unite#sources#snippet_target#define() "{{{$/;"	f
unite#sources#snippet_target#start	bundle/neosnippet/autoload/unite/sources/snippet_target.vim	/^function! unite#sources#snippet_target#start() "{{{$/;"	f
unlink_file	bundle/html5.vim/Makefile	/^unlink_file = \\$/;"	m
unload	bundle/neocomplcache/autoload/vital/_a477c91.vim	/^function! s:unload()$/;"	f
unload	bundle/neosnippet/autoload/vital/_08a462e.vim	/^function! s:unload()$/;"	f
unmarksigns	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:unmarksigns()$/;"	f
unshift	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:unshift(list, val)$/;"	f
upDirCurrentRootClosed	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
update_externals	bundle/vim-airline/plugin/airline.vim	/^function! s:update_externals()$/;"	f
update_statusline	bundle/vim-airline/plugin/airline.vim	/^function! s:update_statusline(active)$/;"	f
urldecode	bundle/syntastic/syntax_checkers/html/validator_decode.awk	/^function urldecode (url) {$/;"	f
usage	bundle/syntastic/syntax_checkers/perl/efm_perl.pl	/^sub usage {$/;"	s
usrign	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:usrign(item, type)$/;"	f
vacantdict	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:vacantdict(dict)$/;"	f
validfile	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:validfile(fname, ftype)$/;"	f
viewEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:viewEdit(cmd,...)$/;"	f
viewList	bundle/vim-rails/autoload/rails.vim	/^function! s:viewList(A,L,P)$/;"	f
view_changelog	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:view_changelog()$/;"	f
view_log	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:view_log()$/;"	f
vim	bundle/fcitx.vim/plugin/fcitx.py	/^import vim$/;"	i
vital#	bundle/neocomplcache/autoload/vital/_a477c91.vim	/^function! vital#{s:self_version}#new()$/;"	f
vital#	bundle/neosnippet/autoload/vital/_08a462e.vim	/^function! vital#{s:self_version}#new()$/;"	f
vital#of	bundle/neocomplcache/autoload/vital.vim	/^function! vital#of(name)$/;"	f
vital#of	bundle/neosnippet/autoload/vital.vim	/^function! vital#of(name)$/;"	f
vundle#config#bundle	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#bundle(arg, ...)$/;"	f
vundle#config#init	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#init()$/;"	f
vundle#config#init_bundle	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#init_bundle(name, opts)$/;"	f
vundle#config#require	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#require(bundles) abort$/;"	f
vundle#installer#clean	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#clean(bang) abort$/;"	f
vundle#installer#delete	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#delete(bang, dir_name) abort$/;"	f
vundle#installer#docs	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#docs() abort$/;"	f
vundle#installer#helptags	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#helptags(bundles) abort$/;"	f
vundle#installer#install	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#install(bang, name) abort$/;"	f
vundle#installer#install_and_require	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#install_and_require(bang, name) abort$/;"	f
vundle#installer#list	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#list(bang) abort$/;"	f
vundle#installer#new	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#new(bang, ...) abort$/;"	f
vundle#installer#run	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#run(func_name, name, ...) abort$/;"	f
vundle#rc	bundle/vundle/autoload/vundle.vim	/^func! vundle#rc(...) abort$/;"	f
vundle#scripts#all	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#all(bang, ...)$/;"	f
vundle#scripts#bundle_names	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#bundle_names(names)$/;"	f
vundle#scripts#complete	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#complete(a,c,d)$/;"	f
vundle#scripts#reload	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#reload() abort$/;"	f
vundle#scripts#view	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#view(title, headers, results)$/;"	f
w!!	conf/mappings.vim	/^cmap w!! w !sudo tee % >\/dev\/null$/;"	m
walker	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:walker(m, p, d)$/;"	f
warn	bundle/vim-rails/autoload/rails.vim	/^function! s:warn(str)$/;"	f
wcswidth	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! s:wcswidth(str) "{{{$/;"	f
wcswidth	bundle/neocomplcache/autoload/vital/_a477c91/prelude.vim	/^  function! s:wcswidth(str)$/;"	f
wcswidth	bundle/neosnippet/autoload/vital/_08a462e/prelude.vim	/^  function! s:wcswidth(str)$/;"	f
wcwidth	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! s:wcwidth(str) "{{{$/;"	f
wcwidth	bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! s:wcwidth(ucs) "{{{$/;"	f
widget_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let widget_attributes = {'aria-autocomplete': ['inline', 'list', 'both', 'none'], 'aria-checked': ['true', 'false', 'mixed', 'undefined'], 'aria-disabled': ['true', 'false'], 'aria-expanded': ['true', 'false', 'undefined'], 'aria-haspopup': ['true', 'false'], 'aria-hidden': ['true', 'false'], 'aria-invalid': ['grammar', 'spelling', 'true', 'false'], 'aria-label': [], 'aria-level': [], 'aria-multiline': ['true', 'false'], 'aria-multiselectable': ['true', 'false'], 'aria-orientation': ['horizontal', 'vertical'], 'aria-pressed': ['true', 'false', 'mixed', 'undefined'], 'aria-readonly': ['true', 'false'], 'aria-required': ['true', 'false'], 'aria-selected': ['true', 'false', 'undefined'], 'aria-sort': ['ascending', 'descending', 'none', 'other'], 'aria-valuemax': [], 'aria-valuemin': [], 'aria-valuenow': [], 'aria-valuetext': []}$/;"	v
widget_role	bundle/html5.vim/autoload/xml/aria.vim	/^let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'gridcell', 'link', 'log', 'marquee', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'slider', 'spinbutton', 'status', 'tab', 'tabpanel', 'textbox', 'timer', 'tooltip', 'treeitem', 'combobox', 'grid', 'listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid']$/;"	v
widget_role	bundle/html5.vim/autoload/xml/html5.vim	/^    let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'gridcell', 'link', 'log', 'marquee', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'slider', 'spinbutton', 'status', 'tab', 'tabpanel', 'textbox', 'timer', 'tooltip', 'treeitem', 'combobox', 'grid', 'listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid']$/;"	v
word_caching	bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:word_caching(srcname) "{{{$/;"	f
wrap	bundle/neocomplcache/autoload/vital/_a477c91/data/string.vim	/^function! s:wrap(str,...)$/;"	f
wrap	bundle/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,...)$/;"	f
wrap_a	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward)$/;"	f
wrap_i	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward)$/;"	f
wrapreg	bundle/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,...)$/;"	f
writecache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:writecache(cafile)$/;"	f
writecache	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:writecache(lines)$/;"	f
writefile	bundle/neocomplcache/autoload/vital/_a477c91/system/cache.vim	/^function! s:writefile(cache_dir, filename, list)$/;"	f
xml_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^let xml_attributes = {'xml:lang': lang_tag, 'xml:space': ['preserve'], 'xml:base': [], 'xmlns': ['http:\/\/www.w3.org\/1999\/xhtml', 'http:\/\/www.w3.org\/1998\/Math\/MathML', 'http:\/\/www.w3.org\/2000\/svg', 'http:\/\/www.w3.org\/1999\/xlink']}$/;"	v
yS	bundle/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	bundle/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	bundle/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ys	bundle/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	bundle/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
zencoding#CompleteTag	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#CompleteTag(findstart, base)$/;"	f
zencoding#ExpandWord	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#ExpandWord(abbr, type, orig)$/;"	f
zencoding#anchorizeURL	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#anchorizeURL(flag)$/;"	f
zencoding#balanceTag	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#balanceTag(flag) range$/;"	f
zencoding#codePretty	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#codePretty() range$/;"	f
zencoding#encodeImage	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#encodeImage()$/;"	f
zencoding#expandAbbr	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#expandAbbr(mode, abbr) range$/;"	f
zencoding#getExpandos	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#getExpandos(type, key)$/;"	f
zencoding#getFileType	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#getFileType()$/;"	f
zencoding#getIndentation	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#getIndentation(...)$/;"	f
zencoding#getResource	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#getResource(type, name, default)$/;"	f
zencoding#getSettings	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#getSettings()$/;"	f
zencoding#getSnippets	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#getSnippets(type)$/;"	f
zencoding#imageSize	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#imageSize()$/;"	f
zencoding#isExtends	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#isExtends(type, extend)$/;"	f
zencoding#lang#css#balanceTag	bundle/ZenCoding.vim/autoload/zencoding/lang/css.vim	/^function! zencoding#lang#css#balanceTag(flag) range$/;"	f
zencoding#lang#css#encodeImage	bundle/ZenCoding.vim/autoload/zencoding/lang/css.vim	/^function! zencoding#lang#css#encodeImage()$/;"	f
zencoding#lang#css#findTokens	bundle/ZenCoding.vim/autoload/zencoding/lang/css.vim	/^function! zencoding#lang#css#findTokens(str)$/;"	f
zencoding#lang#css#imageSize	bundle/ZenCoding.vim/autoload/zencoding/lang/css.vim	/^function! zencoding#lang#css#imageSize()$/;"	f
zencoding#lang#css#moveNextPrev	bundle/ZenCoding.vim/autoload/zencoding/lang/css.vim	/^function! zencoding#lang#css#moveNextPrev(flag)$/;"	f
zencoding#lang#css#parseIntoTree	bundle/ZenCoding.vim/autoload/zencoding/lang/css.vim	/^function! zencoding#lang#css#parseIntoTree(abbr, type)$/;"	f
zencoding#lang#css#parseTag	bundle/ZenCoding.vim/autoload/zencoding/lang/css.vim	/^function! zencoding#lang#css#parseTag(tag)$/;"	f
zencoding#lang#css#removeTag	bundle/ZenCoding.vim/autoload/zencoding/lang/css.vim	/^function! zencoding#lang#css#removeTag()$/;"	f
zencoding#lang#css#splitJoinTag	bundle/ZenCoding.vim/autoload/zencoding/lang/css.vim	/^function! zencoding#lang#css#splitJoinTag()$/;"	f
zencoding#lang#css#toString	bundle/ZenCoding.vim/autoload/zencoding/lang/css.vim	/^function! zencoding#lang#css#toString(settings, current, type, inline, filters, itemno, indent)$/;"	f
zencoding#lang#css#toggleComment	bundle/ZenCoding.vim/autoload/zencoding/lang/css.vim	/^function! zencoding#lang#css#toggleComment()$/;"	f
zencoding#lang#exists	bundle/ZenCoding.vim/autoload/zencoding/lang.vim	/^function zencoding#lang#exists(type)$/;"	f
zencoding#lang#haml#balanceTag	bundle/ZenCoding.vim/autoload/zencoding/lang/haml.vim	/^function! zencoding#lang#haml#balanceTag(flag) range$/;"	f
zencoding#lang#haml#encodeImage	bundle/ZenCoding.vim/autoload/zencoding/lang/haml.vim	/^function! zencoding#lang#haml#encodeImage()$/;"	f
zencoding#lang#haml#findTokens	bundle/ZenCoding.vim/autoload/zencoding/lang/haml.vim	/^function! zencoding#lang#haml#findTokens(str)$/;"	f
zencoding#lang#haml#imageSize	bundle/ZenCoding.vim/autoload/zencoding/lang/haml.vim	/^function! zencoding#lang#haml#imageSize()$/;"	f
zencoding#lang#haml#moveNextPrev	bundle/ZenCoding.vim/autoload/zencoding/lang/haml.vim	/^function! zencoding#lang#haml#moveNextPrev(flag)$/;"	f
zencoding#lang#haml#parseIntoTree	bundle/ZenCoding.vim/autoload/zencoding/lang/haml.vim	/^function! zencoding#lang#haml#parseIntoTree(abbr, type)$/;"	f
zencoding#lang#haml#parseTag	bundle/ZenCoding.vim/autoload/zencoding/lang/haml.vim	/^function! zencoding#lang#haml#parseTag(tag)$/;"	f
zencoding#lang#haml#removeTag	bundle/ZenCoding.vim/autoload/zencoding/lang/haml.vim	/^function! zencoding#lang#haml#removeTag()$/;"	f
zencoding#lang#haml#splitJoinTag	bundle/ZenCoding.vim/autoload/zencoding/lang/haml.vim	/^function! zencoding#lang#haml#splitJoinTag()$/;"	f
zencoding#lang#haml#toString	bundle/ZenCoding.vim/autoload/zencoding/lang/haml.vim	/^function! zencoding#lang#haml#toString(settings, current, type, inline, filters, itemno, indent)$/;"	f
zencoding#lang#haml#toggleComment	bundle/ZenCoding.vim/autoload/zencoding/lang/haml.vim	/^function! zencoding#lang#haml#toggleComment()$/;"	f
zencoding#lang#html#balanceTag	bundle/ZenCoding.vim/autoload/zencoding/lang/html.vim	/^function! zencoding#lang#html#balanceTag(flag) range$/;"	f
zencoding#lang#html#encodeImage	bundle/ZenCoding.vim/autoload/zencoding/lang/html.vim	/^function! zencoding#lang#html#encodeImage()$/;"	f
zencoding#lang#html#findTokens	bundle/ZenCoding.vim/autoload/zencoding/lang/html.vim	/^function! zencoding#lang#html#findTokens(str)$/;"	f
zencoding#lang#html#imageSize	bundle/ZenCoding.vim/autoload/zencoding/lang/html.vim	/^function! zencoding#lang#html#imageSize()$/;"	f
zencoding#lang#html#moveNextPrev	bundle/ZenCoding.vim/autoload/zencoding/lang/html.vim	/^function! zencoding#lang#html#moveNextPrev(flag)$/;"	f
zencoding#lang#html#parseIntoTree	bundle/ZenCoding.vim/autoload/zencoding/lang/html.vim	/^function! zencoding#lang#html#parseIntoTree(abbr, type)$/;"	f
zencoding#lang#html#parseTag	bundle/ZenCoding.vim/autoload/zencoding/lang/html.vim	/^function! zencoding#lang#html#parseTag(tag)$/;"	f
zencoding#lang#html#removeTag	bundle/ZenCoding.vim/autoload/zencoding/lang/html.vim	/^function! zencoding#lang#html#removeTag()$/;"	f
zencoding#lang#html#splitJoinTag	bundle/ZenCoding.vim/autoload/zencoding/lang/html.vim	/^function! zencoding#lang#html#splitJoinTag()$/;"	f
zencoding#lang#html#toString	bundle/ZenCoding.vim/autoload/zencoding/lang/html.vim	/^function! zencoding#lang#html#toString(settings, current, type, inline, filters, itemno, indent)$/;"	f
zencoding#lang#html#toggleComment	bundle/ZenCoding.vim/autoload/zencoding/lang/html.vim	/^function! zencoding#lang#html#toggleComment()$/;"	f
zencoding#lang#sass#balanceTag	bundle/ZenCoding.vim/autoload/zencoding/lang/sass.vim	/^function! zencoding#lang#sass#balanceTag(flag) range$/;"	f
zencoding#lang#sass#encodeImage	bundle/ZenCoding.vim/autoload/zencoding/lang/sass.vim	/^function! zencoding#lang#sass#encodeImage()$/;"	f
zencoding#lang#sass#findTokens	bundle/ZenCoding.vim/autoload/zencoding/lang/sass.vim	/^function! zencoding#lang#sass#findTokens(str)$/;"	f
zencoding#lang#sass#imageSize	bundle/ZenCoding.vim/autoload/zencoding/lang/sass.vim	/^function! zencoding#lang#sass#imageSize()$/;"	f
zencoding#lang#sass#moveNextPrev	bundle/ZenCoding.vim/autoload/zencoding/lang/sass.vim	/^function! zencoding#lang#sass#moveNextPrev(flag)$/;"	f
zencoding#lang#sass#parseIntoTree	bundle/ZenCoding.vim/autoload/zencoding/lang/sass.vim	/^function! zencoding#lang#sass#parseIntoTree(abbr, type)$/;"	f
zencoding#lang#sass#parseTag	bundle/ZenCoding.vim/autoload/zencoding/lang/sass.vim	/^function! zencoding#lang#sass#parseTag(tag)$/;"	f
zencoding#lang#sass#removeTag	bundle/ZenCoding.vim/autoload/zencoding/lang/sass.vim	/^function! zencoding#lang#sass#removeTag()$/;"	f
zencoding#lang#sass#splitJoinTag	bundle/ZenCoding.vim/autoload/zencoding/lang/sass.vim	/^function! zencoding#lang#sass#splitJoinTag()$/;"	f
zencoding#lang#sass#toString	bundle/ZenCoding.vim/autoload/zencoding/lang/sass.vim	/^function! zencoding#lang#sass#toString(settings, current, type, inline, filters, itemno, indent)$/;"	f
zencoding#lang#sass#toggleComment	bundle/ZenCoding.vim/autoload/zencoding/lang/sass.vim	/^function! zencoding#lang#sass#toggleComment()$/;"	f
zencoding#lang#scss#balanceTag	bundle/ZenCoding.vim/autoload/zencoding/lang/scss.vim	/^function! zencoding#lang#scss#balanceTag(flag) range$/;"	f
zencoding#lang#scss#encodeImage	bundle/ZenCoding.vim/autoload/zencoding/lang/scss.vim	/^function! zencoding#lang#scss#encodeImage()$/;"	f
zencoding#lang#scss#findTokens	bundle/ZenCoding.vim/autoload/zencoding/lang/scss.vim	/^function! zencoding#lang#scss#findTokens(str)$/;"	f
zencoding#lang#scss#imageSize	bundle/ZenCoding.vim/autoload/zencoding/lang/scss.vim	/^function! zencoding#lang#scss#imageSize()$/;"	f
zencoding#lang#scss#moveNextPrev	bundle/ZenCoding.vim/autoload/zencoding/lang/scss.vim	/^function! zencoding#lang#scss#moveNextPrev(flag)$/;"	f
zencoding#lang#scss#parseIntoTree	bundle/ZenCoding.vim/autoload/zencoding/lang/scss.vim	/^function! zencoding#lang#scss#parseIntoTree(abbr, type)$/;"	f
zencoding#lang#scss#parseTag	bundle/ZenCoding.vim/autoload/zencoding/lang/scss.vim	/^function! zencoding#lang#scss#parseTag(tag)$/;"	f
zencoding#lang#scss#removeTag	bundle/ZenCoding.vim/autoload/zencoding/lang/scss.vim	/^function! zencoding#lang#scss#removeTag()$/;"	f
zencoding#lang#scss#splitJoinTag	bundle/ZenCoding.vim/autoload/zencoding/lang/scss.vim	/^function! zencoding#lang#scss#splitJoinTag()$/;"	f
zencoding#lang#scss#toString	bundle/ZenCoding.vim/autoload/zencoding/lang/scss.vim	/^function! zencoding#lang#scss#toString(settings, current, type, inline, filters, itemno, indent)$/;"	f
zencoding#lang#scss#toggleComment	bundle/ZenCoding.vim/autoload/zencoding/lang/scss.vim	/^function! zencoding#lang#scss#toggleComment()$/;"	f
zencoding#lang#slim#balanceTag	bundle/ZenCoding.vim/autoload/zencoding/lang/slim.vim	/^function! zencoding#lang#slim#balanceTag(flag) range$/;"	f
zencoding#lang#slim#encodeImage	bundle/ZenCoding.vim/autoload/zencoding/lang/slim.vim	/^function! zencoding#lang#slim#encodeImage()$/;"	f
zencoding#lang#slim#findTokens	bundle/ZenCoding.vim/autoload/zencoding/lang/slim.vim	/^function! zencoding#lang#slim#findTokens(str)$/;"	f
zencoding#lang#slim#imageSize	bundle/ZenCoding.vim/autoload/zencoding/lang/slim.vim	/^function! zencoding#lang#slim#imageSize()$/;"	f
zencoding#lang#slim#moveNextPrev	bundle/ZenCoding.vim/autoload/zencoding/lang/slim.vim	/^function! zencoding#lang#slim#moveNextPrev(flag)$/;"	f
zencoding#lang#slim#parseIntoTree	bundle/ZenCoding.vim/autoload/zencoding/lang/slim.vim	/^function! zencoding#lang#slim#parseIntoTree(abbr, type)$/;"	f
zencoding#lang#slim#parseTag	bundle/ZenCoding.vim/autoload/zencoding/lang/slim.vim	/^function! zencoding#lang#slim#parseTag(tag)$/;"	f
zencoding#lang#slim#removeTag	bundle/ZenCoding.vim/autoload/zencoding/lang/slim.vim	/^function! zencoding#lang#slim#removeTag()$/;"	f
zencoding#lang#slim#splitJoinTag	bundle/ZenCoding.vim/autoload/zencoding/lang/slim.vim	/^function! zencoding#lang#slim#splitJoinTag()$/;"	f
zencoding#lang#slim#toString	bundle/ZenCoding.vim/autoload/zencoding/lang/slim.vim	/^function! zencoding#lang#slim#toString(settings, current, type, inline, filters, itemno, indent)$/;"	f
zencoding#lang#slim#toggleComment	bundle/ZenCoding.vim/autoload/zencoding/lang/slim.vim	/^function! zencoding#lang#slim#toggleComment()$/;"	f
zencoding#mergeLines	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#mergeLines() range$/;"	f
zencoding#moveNextPrev	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#moveNextPrev(flag)$/;"	f
zencoding#parseIntoTree	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#parseIntoTree(abbr, type)$/;"	f
zencoding#removeTag	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#removeTag()$/;"	f
zencoding#splitFilterArg	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#splitFilterArg(filters)$/;"	f
zencoding#splitJoinTag	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#splitJoinTag()$/;"	f
zencoding#toString	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#toString(...)$/;"	f
zencoding#toggleComment	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#toggleComment()$/;"	f
zencoding#useFilter	bundle/ZenCoding.vim/autoload/zencoding.vim	/^function! zencoding#useFilter(filters, filter)$/;"	f
zencoding#util#cursorInRegion	bundle/ZenCoding.vim/autoload/zencoding/util.vim	/^function! zencoding#util#cursorInRegion(region)$/;"	f
zencoding#util#deleteContent	bundle/ZenCoding.vim/autoload/zencoding/util.vim	/^function! zencoding#util#deleteContent(region)$/;"	f
zencoding#util#getContent	bundle/ZenCoding.vim/autoload/zencoding/util.vim	/^function! zencoding#util#getContent(region)$/;"	f
zencoding#util#getContentFromURL	bundle/ZenCoding.vim/autoload/zencoding/util.vim	/^function! zencoding#util#getContentFromURL(url)$/;"	f
zencoding#util#getImageSize	bundle/ZenCoding.vim/autoload/zencoding/util.vim	/^function! zencoding#util#getImageSize(fn)$/;"	f
zencoding#util#getTextFromHTML	bundle/ZenCoding.vim/autoload/zencoding/util.vim	/^function! zencoding#util#getTextFromHTML(buf)$/;"	f
zencoding#util#getVisualBlock	bundle/ZenCoding.vim/autoload/zencoding/util.vim	/^function! zencoding#util#getVisualBlock()$/;"	f
zencoding#util#pointInRegion	bundle/ZenCoding.vim/autoload/zencoding/util.vim	/^function! zencoding#util#pointInRegion(point, region)$/;"	f
zencoding#util#regionInRegion	bundle/ZenCoding.vim/autoload/zencoding/util.vim	/^function! zencoding#util#regionInRegion(outer, inner)$/;"	f
zencoding#util#regionIsValid	bundle/ZenCoding.vim/autoload/zencoding/util.vim	/^function! zencoding#util#regionIsValid(region)$/;"	f
zencoding#util#searchRegion	bundle/ZenCoding.vim/autoload/zencoding/util.vim	/^function! zencoding#util#searchRegion(start, end)$/;"	f
zencoding#util#selectRegion	bundle/ZenCoding.vim/autoload/zencoding/util.vim	/^function! zencoding#util#selectRegion(region)$/;"	f
zencoding#util#setContent	bundle/ZenCoding.vim/autoload/zencoding/util.vim	/^function! zencoding#util#setContent(region, content)$/;"	f
zip	bundle/neocomplcache/autoload/vital/_a477c91/data/list.vim	/^function! s:zip(...)$/;"	f
